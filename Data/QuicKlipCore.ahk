; QuicKlip
; -- Daniel Essig
; -- Modded by Ron Egli
SendMode, Input
OnMessage(0x201, "WM_LBUTTONDOWN") ; for click dragging
Process, Priority, , High
CoordMode, Mouse, Screen
#SingleInstance, Force
#MaxMem 124		; set 124mb of mem for each variable
;##############################################################
; do we need to update the updater shell?
;##############################################################
If ( Update() ) {
	Extract_Updater("QuicKlip.ahk",1)
	If ( A_IsCompiled ) {
		RunWait %A_WorkingDir%\data\Ahk2Exe.exe /in "%A_WorkingDir%/QuicKlip.ahk" /out "%A_WorkingDir%/temp.exe" /icon "%A_workingDir%/data/QuicKlip.ico
	} Else {
		RunWait %A_WorkingDir%\data\Ahk2Exe.exe /in "%A_WorkingDir%/QuicKlip.ahk" /out "%A_WorkingDir%/QuicKlip.exe" /icon "%A_workingDir%/data/QuicKlip.ico	
	}
	Reload
} Else {
	Extract_Updater("",1)
}
;##############################################################
; Check for gui images and icon and extract
; them if missing or not correct image
;##############################################################
Loop {
	If ( A_Index = 1 ) {
		name := "QuicKlip"
		, ext := ".ico"
	} Else If ( A_Index = 2 ) {
		name := "show1"
		, ext := ".jpg"
	} Else If ( A_Index = 3 ) {
		name := "show2"
	} Else If ( A_Index = 4 ) {
		name := "hide1"
	} Else If ( A_Index = 5 ) {
		name := "hide2"
	} Else If ( A_Index = 6 ) {
		name := "scopy1"
	} Else If ( A_Index = 7 ) {
		name := "scopy2"
	} Else {
		Break
	}
	IfExist, %A_WorkingDir%\data\%name%%ext%
	{
		FileGetSize, temp, data\%name%%ext%, K
		If ( %name%_get(Size) != temp )
			Extract_%name%("data\" . name . ext,1)
		Else
			Extract_%name%("",1)
	} Else {
		Extract_%name%("data\" . name . ext,1)
	}
}
Temp := "", name := "", ext := "", extract := ""
, settingspath := A_WorkingDir . "/data/settings.ini"

;##############################################################
; Read Settings.ini for saved preferences
;	Preferences to add:
;		1.	Custom Hotkeys for last 10 and compile pastes
;##############################################################
IfNotExist, %settingspath%													; create settings file if it doesn't exist
	FileAppend, , %settingspath%
IniRead, WindowPos, %settingspath%, Options, WindowPos, "Bottom Right"
If ( WindowPos = "Free" ) { 	; This was added once Freemove was removed after the window was made movable no matter what.
	windowPos := "Bottom Right"
	IniWrite, %WindowPos%, %settingspath%, Options, WindowPos
	TrayTip, QuicKlip, Your starting display position has been updated to `"%windowPos%`".`nThis is because the `"Free Move`" option is no longer `navailable as the window is now freely movable at all times.,1,1
}
IniRead, Transparency, %settingspath%, Options, Transparency, 170
IniRead, DisplayMon, %settingspath%, Options, DisplayMon, 1
IniRead, LoadOnStartup, %settingspath%, Options, LoadOnStartup, 0
IniRead, ShowTickerOnLoad, %settingspath%, Options, ShowTickerOnLoad, 1
IniRead, TBPadding, %settingspath%, Options, TBPadding, 0
IniRead, LRPadding, %settingspath%, Options, LRPadding, 0
IniRead, scVerbose, %settingspath%, Options, scVerbose, 0
IniRead, scAutoOpen, %settingspath%, Options, scAutoOpen, 0
IniRead, scSort, %settingspath%, Options, scSort, 1
IniRead, allowDuplicates, %settingspath%, Options, allowDuplicates, 0
IniRead, showSessionStatsOnExit, %settingspath%, Options, showSessionStatsOnExit, 0
IniRead, historyPasteHK, %settingspath%, Options, historyPasteHK, !
IniRead, compilePasteHK, %settingspath%, Options, compilePasteHK, ^!
IniRead, useNumpad, %settingspath%, Options, useNumpad, 0
IfEqual, historyPasteHK, %compilePasteHK%		; set defaults if settings.ini was manually changed to have the same hotkey for both
	historyPasteHK := "!"
	, compilePasteHK := "^!"
Loop, 10 {
	If ( A_Index < 10 ) {
		If ( useNumpad )
			temp := historyPasteHK . "Numpad" . A_Index
		Else
			temp := historyPasteHK . A_Index
		StringTrimRight, oldHistoryPasteHK, temp, 1
		Hotkey, %temp%, Paste%A_Index%, P3
		If ( useNumpad )
			temp := compilePasteHK . "Numpad" . A_Index
		Else
			temp := compilePasteHK . A_Index
		StringTrimRight, oldCompilePasteHK, temp, 1
		Hotkey, %temp%, Compile%A_Index%, P4
	} Else {
		If ( useNumpad )
			temp := historyPasteHK . "Numpad0"
		Else
			temp := historyPasteHK . "0"
		StringTrimRight, oldHistoryPasteHK, temp, 1
		Hotkey, %temp%, Paste%A_Index%, P3
		If ( useNumpad )
			temp := compilePasteHK . "Numpad0"
		Else
			temp := compilePasteHK . "0"
		StringTrimRight, oldCompilePasteHK, temp, 1
		Hotkey, %temp%, Compile%A_Index%, P4
	}
}
IniRead, totalHistoryPastes, %settingspath%, Odometer, totalHistoryPastes, 0
IniRead, totalCompilePastes, %settingspath%, Odometer, totalCompilePastes, 0
CTS := 0, HPTS := 0, CPTS := 0, p := 0, options := 0, Mini_on := 0, ClipGo := 1, ClipCount := 10
, PosOptions := "Top Left|Top Right|Bottom Left|Bottom Right", temp := ""
SysGet, MonTotal, MonitorCount
Loop, %MonTotal%															; this loop gets resolution info for all monitors
	SysGet, Mon%A_Index%, MonitorWorkArea, %A_Index%
;###########################################################
; Build Menu's 
;###########################################################
Menu, SloppyCopySub, Add, Scan Now, MenuSC
Menu, SloppyCopySub, Add, ; Separator 
Menu, SloppyCopySub, Add, Verbose Messages, scVerbose
Menu, SloppyCopySub, Add, Auto Open IRIS/Toolzilla, scAutoOpen
Menu, SloppyCopySub, Add, Sort Results, scSort
Menu, SettingsSubMenu, Add, Load on PC Startup, PCStartUp
Menu, SettingsSubMenu, Add, Display Ticker on Load, ShowFromLoad
Menu, SettingsSubMenu, Add, ; separator
Menu, SettingsSubMenu, Add, Show stats on Exit, showSessionStatsOnExit
Menu, SettingsSubMenu, Add, Allow Duplicates, AllowDuplicates
Menu, SettingsSubMenu, Add, ; separator
Menu, SettingsSubMenu, Add, Sloppy Copy, :SloppyCopySub
;Menu, FileSubMenu, Add, Dump Current Clips, DumpClipData
Menu, FileSubMenu, Add, &Reload App, ReloadApp
Menu, FileSubMenu, Add, ; separator
Menu, FileSubMenu, Add, E&xit App, CloseProgram
Menu, AboutSubmenu, Add, &About Clipomatic, AboutClipomatic
Menu, ViewSubMenu, Add, &Options, Trayoptions
Menu, ViewSubMenu, Add, Clip-Ticker, ShowMiniTicker
Menu, ViewSubMenu, Add, Clipping &Manager, ShowManager
Menu, OptionsMenu, Add, &File, :FileSubmenu
Menu, OptionsMenu, Add, &View, :ViewSubMenu
Menu, OptionsMenu, Add, &Settings, :SettingsSubMenu
Menu, OptionsMenu, Add, &About, :AboutSubmenu
Menu, ManagerMenu, Add, &File, :FileSubmenu
Menu, ManagerMenu, Add, &View, :ViewSubMenu
Menu, ManagerMenu, Add, &About, :AboutSubmenu
Menu, Tray, Tip, QuicKlipâ„¢
Menu, Tray, NoStandard
Menu, Tray, Add, &Options, Trayoptions
Menu, Tray, Add, Dump Clip Data, DumpClipData
Menu, Tray, Add, ; Separator
Menu, Tray, add, &View, :ViewSubMenu
Menu, Tray, Add, ; Separator
Menu, Tray, Add, Settings, :SettingsSubMenu
Menu, Tray, Add, ; Separator
Menu, Tray, Add, Reload, ReloadApp
Menu, Tray, add, Exit, CloseProgram
;Menu, Tray, Add, -- DEBUG, listlines
Menu, Tray, Default, &Options
Menu, Tray, Click, 2
Menu, Tray, Icon, data\QuicKlip.ico
;###########################################################
; Build Clipping Manager
;###########################################################
Gui, 1: Add, CheckBox, x5 y10 w30 h20 gGreyFields vCB_1, 1.
Gui, 1: Add, CheckBox, x5 y67 w30 h20 gGreyFields vCB_2, 2.
Gui, 1: Add, CheckBox, x5 y127 w30 h20 gGreyFields vCB_3, 3.
Gui, 1: Add, CheckBox, x5 y187 w30 h20 gGreyFields vCB_4, 4.
Gui, 1: Add, CheckBox, x5 y247 w30 h20 gGreyFields vCB_5, 5.
Gui, 1: Add, CheckBox, x5 y307 w30 h20 gGreyFields vCB_6, 6.
Gui, 1: Add, CheckBox, x5 y367 w30 h20 gGreyFields vCB_7, 7.
Gui, 1: Add, CheckBox, x5 y427 w30 h20 gGreyFields vCB_8, 8.
Gui, 1: Add, CheckBox, x5 y487 w30 h20 gGreyFields vCB_9, 9.
Gui, 1: Add, CheckBox, x5 y547 w33 h20 gGreyFields vCB_10 -Wrap, 10.
Gui, 1: Add, Checkbox, x38 y10 w14 h20 gGreyFields vLock_1, 
Gui, 1: Add, Checkbox, x38 y67 w14 h20 gGreyFields vLock_2 , 
Gui, 1: Add, Checkbox, x38 y127 w14 h20 gGreyFields vLock_3 , 
Gui, 1: Add, Checkbox, x38 y187 w14 h20 gGreyFields vLock_4 , 
Gui, 1: Add, Checkbox, x38 y247 w14 h20 gGreyFields vLock_5 , 
Gui, 1: Add, Checkbox, x38 y307 w14 h20 gGreyFields vLock_6 , 
Gui, 1: Add, Checkbox, x38 y367 w14 h20 gGreyFields vLock_7 , 
Gui, 1: Add, Checkbox, x38 y427 w14 h20 gGreyFields vLock_8 , 
Gui, 1: Add, Checkbox, x38 y487 w14 h20 gGreyFields vLock_9 , 
Gui, 1: Add, Checkbox, x38 y547 w14 h20 gGreyFields vLock_10 , 
Gui, 1: Add, Edit, x56 y7 w320 h60 vEdit_1 gEdit1, clip1
Gui, 1: Add, Edit, x56 y67 w320 h60 vEdit_2 gEdit2, clip2
Gui, 1: Add, Edit, x56 y127 w320 h60 vEdit_3 gEdit3, clip3
Gui, 1: Add, Edit, x56 y187 w320 h60 vEdit_4 gEdit4, clip4
Gui, 1: Add, Edit, x56 y247 w320 h60 vEdit_5 gEdit5, clip5
Gui, 1: Add, Edit, x56 y307 w320 h60 vEdit_6 gEdit6, clip6
Gui, 1: Add, Edit, x56 y367 w320 h60 vEdit_7 gEdit7, clip7
Gui, 1: Add, Edit, x56 y427 w320 h60 vEdit_8 gEdit8, clip8
Gui, 1: Add, Edit, x56 y487 w320 h60 vEdit_9 gEdit9, clip9
Gui, 1: Add, Edit, x56 y547 w320 h60 vEdit_10 gEdit10, clip10
Gui, 1: Add, GroupBox, x2 y1 w53 h610 , 
Gui, 1: Add, Button, x4 y567 w49 h19 gCompileGui vCompileGui, Compile
Gui, 1: Add, Button, x4 y587 w49 h19 gClearGui vClearGui, Clear
Gui, 1: Add, Button, x316 y610 w60 h20 gSaveGui, Save
Gui, 1: Add, Button, x200 y610 w50 h20 gResetGui, Reset
Gui, 1: Add, Button, x149 y610 w50 h20 gSetGui, Set
Gui, 1: Add, Button, x257 y610 w60 h20 gRefreshGui vRefreshGui, Refresh
Gui, 1: Add, CheckBox, x3 y612 w80 h20 vLock gLockFields, Lock All
Gui, 1: Add, Checkbox, x85 y612 w50 h20 vKOTGui gKOTGui, KoT
;###########################################################
; Build Options Gui
;###########################################################
Loop, %MonTotal%	{
	If ( A_Index = DisplayMon ) {
		If ( A_Index = 1 ) {
			MonDD .= A_Index "|"
		} Else If ( A_Index = MonTotal ) {
			MonDD .= "|" . A_Index . "||"
		} Else {
			MonDD .= "|" . A_Index . "|"
		}
	} Else {
		If ( A_Index = 1 ) {
			MonDD .= A_Index
		} Else {
			MonDD .= "|" . A_Index
		}
	}
}
ddRows := MonTotal + 1
, PosOptions := "Top Left|Top Right|Bottom Left|Bottom Right|"
, CurrentPos := WindowPos . "|"
, AboutText  := "QuicKlip`nVersion: 1.xx`n`nBy: Daniel Essig`n`nPressing 'ALT + 1-0' will paste the saved clip associated with the number that was pressed.`n`nPressing 'CTRL+ALT+ 1-0' will compile all clips up to the number pressed and paste all on separate lines.`n`nFurther functionality can be found in the Clipping Manager, available through the Tray and 'View' menu's."
Gui, 3: Add, Button, x6 y193 w90 h20 gOptionsOK, Ok
Gui, 3: Add, Button, x106 y193 w90 h20 gOptionsCancel, Cancel
Gui, 3: Add, Tab2, x0 y0 w210 h190 vTabs, Preferences|Hotkeys|Statistics
Gui, 3: Tab, Preferences
Gui, 3: Add, DropDownList, x116 y37 w70 h20 r%ddRows% vDisplayMon, %MonDD%
Gui, 3: Add, GroupBox, x6 y17 w190 h167 , Clip-Ticker
Gui, 3: Add, Text, x16 y37 w100 h20 , Display on Monitor:
Gui, 3: Add, Text, x16 y72 w90 h20 , Transparency:
Gui, 3: Add, Slider, x116 y67 w70 h30 Center range-0-255 ToolTipRight vTransparency, %Transparency%
StringReplace, PosOptions, PosOptions, %WindowPos%, %CurrentPos%		; should make ini saved window position be default option selected
Gui, 3: Add, DropDownList, x106 y107 w80 h20 r4 vWindowPos, %posOptions%
Gui, 3: Add, Text, x16 y107 w90 h20 , Window Location:
Gui, 3: Add, Text, x16 y137 h20 w107 -Wrap, Top/Bottom Padding:
Gui, 3: Add, Edit, x126 y137 h20 w40 vTBPadding, %TBPadding%
Gui, 3: Add, Text, x167 y137 h20, px.
Gui, 3: Add, Text, x16 y157 h20 w100 -Wrap, Left/Right Padding:
Gui, 3: Add, Edit, x126 y157 h20 w40 vLRPadding, %LRPadding%
Gui, 3: Add, Text, x167 y157 h20, px.
Gui, 3: Tab, Hotkeys
Gui, 3: Add, Groupbox, x6 y20 w100 h65, History Paste
Gui, 3: Add, CheckBox, x16 y40 h20 vhPasteCTRL, Ctrl
Gui, 3: Add, CheckBox, x60 y40 h20 vhPasteAlt, Alt
Gui, 3: Add, CheckBox, x16 y63 h20 vhPasteWin, Win
;GuiControl, 3: Disable, hPasteWin
Gui, 3: Add, CheckBox, x60 y63 h20 vhPasteShift, Shift
Gui, 3: Add, Groupbox, x6 y85 w100 h65, Compile Paste
Gui, 3: Add, CheckBox, x16 y105 h20 vcPasteCTRL, Ctrl
Gui, 3: Add, CheckBox, x60 y105 h20 vcPasteAlt, Alt
Gui, 3: Add, CheckBox, x16 y128 h20 vcPasteWin, Win
;GuiControl, 3: Disable, cPasteWin
Gui, 3: Add, CheckBox, x60 y128 h20 vcPasteShift, Shift
Gui, 3: Add, CheckBox, x16 y155 h20 vNumpad, Use Numpad
If ( useNumpad )
	GuiControl, 3:, Numpad, 1
Gui, 3: Add, Text, x113 y27 w85 h155, Check the boxes for the modifiers you would prefer to press in order to paste a prior clip or compile paste.`n*Note* : These are followed by the number key cooresponding to your desired clip.
c := "^", a := "!", w := "#", s := "+"
Loop, 2 {
	If ( A_Index = 1 ) {
		hk := "historyPasteHK", v := "h"
	} Else If ( A_Index = 2 ) {
		hk := "compilePasteHK", v := "c"
	}
	IfInString, %hk%, %c%
	{
		temp := v . "PasteCTRL"
		GuiControl, 3:, %temp%, 1
	}
	IfInString, %hk%, %a%
	{
		temp := v . "PasteAlt"
		GuiControl, 3:, %temp%, 1
	}
	IfInString, %hk%, %w%
	{
		temp := v . "PasteWin"
		GuiControl, 3:, %temp%, 1
	}
	IfInString, %hk%, %s%
	{
		temp := v . "PasteShift"
		GuiControl, 3:, %temp%, 1
	}
}
temp := "", hk := "", v := ""
Gui, 3: Tab, Statistics
Gui, 3: Add, GroupBox, x6 y17 w190 h85, Totals - 
Gui, 3: Add, Text, x16 y30 -wrap, Copies:
Gui, 3: Add, Edit, x100 y30 w50 ReadOnly vtCopies, %totalCopies%
Gui, 3: Add, Text, x16 y51 -wrap, History Pastes:
Gui, 3: Add, Edit, x100 y50 w50 ReadOnly vtHPastes, %totalHistoryPastes%
Gui, 3: Add, Text, x16 y75 -wrap, Compile Pastes:
Gui, 3: Add, Edit, x100 y70 w50 ReadOnly vtCPastes, %totalCompilePastes%
Gui, 3: Add, Button, x151 y70 h20 -wrap gResetStats, Reset
Gui, 3: Add, GroupBox, x6 y102 w190 h85, This Session - 
Gui, 3: Add, Text, x16 y115 -wrap, Copies:
Gui, 3: Add, Edit, x100 y115 w50 readonly vsCopies, %CTS%
Gui, 3: Add, Text, x16 y136 -wrap, History Pastes:
Gui, 3: Add, Edit, x100 y135 w50 readonly vsHPastes, %HPTS%
Gui, 3: Add, Text, x16 y160 -wrap, Compile Pastes:
Gui, 3: Add, Edit, x100 y155 w50 readonly vsCPastes, %CPTS%
Gui, 3: Menu, OptionsMenu
Gui, 1: Menu, ManagerMenu
;###########################################################
; Mini hidden
;###########################################################
Gui, 5: Add, Picture, x7 y5 gMiniShow vShowMini1, %A_WorkingDir%\data\Show1.jpg
Gui, 5: Add, Picture, x7 y5 gMiniShow vShowMini2, %A_Workingdir%\data\Show2.jpg
Gui, 5: -caption +ToolWindow +AlwaysOnTop
;###########################################################
; Build About GUI
;###########################################################

Gui, 4: Add, Text, x16 y27 w440 h185 , %AboutText%
Gui, 4: Add, GroupBox, x7 y7 w460 h190 , Information
Gui, 4: Add, Button, x187 y210 w100 h20 gAboutOk, Ok

BuildMiniGui()
IfExist, %A_WorkingDir%/data/reload_1.txt
{
	Loop, %ClipCount%	{
		IfExist, %A_Workingdir%/data/reload_%A_Index%.txt
		{
			FileRead, temp, %A_Workingdir%/data/reload_%A_Index%.txt
			Show%A_Index% 	:= temp
			, clip%A_Index% := temp
			FileDelete, %A_WorkingDir%/data/reload_%A_Index%.txt
		}
	}
	temp := ""	; clear mem
	UpdateGui()
}
;##############################################################
; Check menu's depending on saved preferences
;##############################################################
If ( ShowTickerOnLoad ) {
	Menu, SettingsSubMenu, Check, Display Ticker on Load
	Menu, ViewSubMenu, Check, Clip-Ticker
	gosub, ShowMiniTicker
}
If ( LoadOnStartup )
	Menu, SettingsSubMenu, Check, Load on PC Startup
If ( scopyEnabled )
	Menu, SloppyCopySub, Check, Enabled
If ( scAutoOpen )
	Menu, SloppyCopySub, Check, Auto Open IRIS/Toolzilla
If ( scVerbose )
	Menu, SloppyCopySub, Check, Verbose Messages
If ( scSort )
	Menu, SloppycopySub, Check, Sort Results
If ( allowDuplicates )
	Menu, SettingsSubMenu, Check, Allow Duplicates
If ( showSessionStatsOnExit )
	Menu, SettingsSubMenu, Check, Show Stats on Exit
Return

;##############################################################
; End Auto Execute section
;##############################################################

showSessionStatsOnExit:
	If ( showSessionStatsOnExit ) {
		Menu, SettingsSubMenu, UnCheck, Show stats on Exit
		showSessionStatsOnExit = 0
	} Else {
		Menu SettingsSubMenu, Check, Show stats on Exit
		showSessionStatsOnExit = 1
	}
	IniWrite, %showSessionStatsOnExit%, %settingspath%, Options, showSessionStatsOnExit
Return

DumpClipData:
	Msgbox, 36, QuicKlip: Dump Data?, This will clear all currently saved variables from memory.`n%A_Tab%- This is particularly usefull if you are having memory issues due to having large copies in your history.`n`nAre you sure you want to continue?, 60
	If ( ErrorLevel ) {
		Return
	} Else {
		IfMsgBox Yes 
		{
			Loop, %ClipCount% {
				Clip%A_index% := "", Show%A_index% := ""
				GuiControl, 2:, mEdit_%A_Index%,
				GuiControl, 1:, Edit_%A_Index%,
			}
			Gui, 1: Submit, NoHide
			Gui, 2: Submit, NoHide
		}
	}
Return
CloseProgram:
	If ( showSessionStatsOnExit )
		MsgBox % "Stats this session: `nCopies - " . CTS . "`nHistory Pastes - " . HPTS . "`nCompile Pastes - " . CPTS
	ExitApp
Return

ReloadApp:
	; This loop writes all current clips to txt files to be read and deleted upon load 
	; keeps your clips between reloads.
	If ( showSessionStatsOnExit )
		MsgBox % "Stats this session: `nCopies - " . CTS . "`nHistory Pastes - " . HPTS . "`nCompile Pastes - " . CPTS
	Loop, %Clipcount%	{
		temp := show%A_Index%
		FileAppend, , %A_WorkingDir%/data/reload_%A_Index%.txt
		FileAppend, %temp%, %A_WorkingDir%/data/reload_%A_Index%.txt
	}
	Reload
Return

PCStartUp:
	If ( LoadOnStartup )
		LoadOnStartup = 0
	Else
		LoadOnStartup = 1
	Menu, SettingsSubMenu, ToggleCheck, Load on PC Startup
Return

ShowFromLoad:
	If ( ShowTickerOnLoad )
		ShowTickerOnLoad = 0
	Else
		ShowTickerOnLoad = 1
	Menu, SettingsSubMenu, ToggleCheck, Display Ticker on Load
Return

;########################################################
; Options menu Code
;########################################################
3guiclose:
OptionsCancel:														; cancel button
	options = 0
	gui, 3: Hide
	Menu, ViewSubMenu, UnCheck, &Options
Return

Trayoptions:
	If ( options ) {
		Gui, 3: Hide
		options = 0
		Menu, ViewSubMenu, UnCheck, &Options
	} Else {
		Gui, 3: Show, xCenter yCenter h215 w203, QuicKlip Options
		GuiControl, 3: Choose, Tabs, 1
		Menu, ViewSubMenu, Check, &Options
		Menu, Tray, Check, &Options
		options = 1
	}
Return

AllowDuplicates:
	If ( allowDuplicates ) {
		allowDuplicates = 0
		Menu, SettingsSubMenu, uncheck, Allow Duplicates
	} Else {
		allowDuplicates = 1
		Menu, SettingsSubMenu, Check, Allow Duplicates
	}
	IniWrite, %allowDuplicates%, %settingspath%, Options, allowDuplicates
Return

ResetStats:
	MsgBox, 36, QuicKlip: Clear Stats History?,This will reset your statistics back to ZERO.`n`nAre you sure you would like to continue?,60
	If ( ErrorLevel )
		Return
	IfMsgBox, Yes
	{
		totalCopies := 0, totalHistoryPastes := 0, totalCompilePastes := 0
		IniWrite, 0, %settingspath%, Odometer, totalCopies
		IniWrite, 0, %settingspath%, Odometer, totalHistoryPastes
		IniWrite, 0, %settingspath%, Odometer, totalCompilePastes
		GuiControl, 3:, tCopies, 0
		GuiControl, 3:, tHPastes, 0
		GuiControl, 3:, tCPastes, 0
	}
Return
IfNotExist, File|Dir|Pattern
OptionsOK:															; OK button
	Gui, 3: Submit, NoHide
	IniWrite, %Transparency%, %settingspath%, Options, Transparency
	IniWrite, %DisplayMon%, %settingspath%, Options, DisplayMon
	IniWrite, %WindowPos%, %settingspath%, Options, WindowPos
	IniWrite, %LoadOnStartup%, %settingspath%, Options, LoadOnStartup
	IniWrite, %ShowTickerOnLoad%, %settingspath%, Options, ShowTickerOnLoad
	IniWrite, %TBPadding%, %settingspath%, Options, TBPadding
	IniWrite, %LRPadding%, %settingspath%, Options, LRPadding
	If ( A_OSVersion = "WIN_7" ) {
		IfExist, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
			FileDelete, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
	} Else If ( A_OSVersion = "WIN_VISTA" ) {
		IfExist, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
			FileDelete, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
	} Else If ( A_OSVersion = "WIN_XP" ) {
		IfExist, C:\Documents and settings\%A_Username%\Start Menu\Program\Startup\QuicKlip.lnk
			FileDelete, C:\Documents and settings\%A_Username%\Start Menu\Program\Startup\QuicKlip.lnk
	}
	If ( LoadOnStartup ) {
		If ( A_OSVersion = "WIN_7" ) {
			IfNotExist, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
				FileCreateShortcut, %A_ScriptFullPath%, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
		} Else If ( A_OSVersion = "WIN_VISTA" ) {
			IfNotExist, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
				FileCreateShortcut, %A_ScriptFullPath%, C:\Users\%A_Username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\QuicKlip.lnk
		} Else If ( A_OSVersion = "WIN_XP" ) {
			IfNotExist, C:\Documents and settings\%A_Username%\Start Menu\Program\Startup\QuicKlip.lnk
				FileCreateshortcut, %A_ScriptFullPath%, C:\Documents and settings\%A_Username%\Start Menu\Program\Startup\QuicKlip.lnk, %A_WorkingDir%, , QuicKlip Clipboard Manager, %A_WorkingDir%\data\QuicKlip.ico
		} FileCreateShortcut, Target, C:\My Shortcut.lnk [, WorkingDir, Args, Description, IconFile, ShortcutKey, IconNumber
	}	
	hpTemp := "", cpTemp := "", reload := 0
	If ( hPasteCtrl )
		hpTemp .= "^"
	If ( hPasteAlt )
		hpTemp .= "!"
	If ( hPasteWin )
		hpTemp .= "#"
	If ( hPasteShift )
		hpTemp .= "+"
	If ( cPasteCtrl )
		cpTemp .= "^"
	If ( cPasteAlt )
		cpTemp .= "!"
	If ( cPasteWin )
		cpTemp .= "#"
	If ( cPasteShift )
		cpTemp .= "+"
	If ( hpTemp = cpTemp ) {
		GuiControl, 3: Choose, Tabs, 2
		MsgBox, 16, QuicKlip: Error, Hotkey modifiers for both commands MUST be different. Please ensure this is the case.
		Return
	} Else {
		If ( Numpad )
			hpTemp := hpTemp . "Numpad"
			, cpTemp := cpTemp . "Numpad"
		If ( oldHistoryPasteHK != hpTemp ) {
			reload := 1
			Loop, 10 {
				If ( A_Index < 10 ) {
					temp := hpTemp . A_Index
					Hotkey, %temp%, Paste%A_Index%, P3
					temp := oldHistoryPasteHK . A_Index
					Hotkey, %temp%, , Off
				} Else {
					temp := hpTemp . "0"
					Hotkey, %temp%, Paste%A_Index%, P3
					temp := oldHistoryPasteHK . "0"
					Hotkey, %temp%, , Off
				}
			}
		} 
		If ( oldCompilePasteHK != cpTemp ) {
			reload := 1
			Loop, 10 {
				If ( A_Index < 10 ) {
					temp := cpTemp . A_Index
					Hotkey, %temp%, Compile%A_Index%, P4
					temp := oldCompilePasteHK . A_Index
					Hotkey, %temp%, , Off
				} Else {
					temp := cpTemp . "0"
					Hotkey, %temp%, Compile%A_Index%, P4
					temp := oldCompilePasteHK . "0"
					Hotkey, %temp%, , Off
				}
			}
		}
		IniWrite, %numpad%, %settingspath%, Options, useNumpad
		If ( Numpad ) {
			StringTrimRight, hpTemp, hpTemp, 6
			StringTrimRight, cpTemp, cpTemp, 6
		}
		IniWrite, %hpTemp%, %settingspath%, Options, historyPasteHK
		IniWrite, %cpTemp%, %settingspath%, Options, compilePasteHK
	}
	If ( reload ) {
		p := 0
		Progress, Show, Reloading to update hotkeys, QuicKlipâ„¢, QKProgress
		Loop, 10 {
			Progress, %p% , Reloading to update hotkeys, QuicKlipâ„¢, QKProgress
			p := p + 10
			sleep, 100
		}
		Goto, reloadapp
	}
	options := 0, Mini_on := 0, temp := ""
	, oldHistoryPasteHK := hpTemp, hpTemp := ""
	, oldCompilePasteHK := cpTemp, cpTemp := ""
	Gui, 2: Destroy
	Gui, 3: Hide
	Menu, ViewSubMenu, UnCheck, &Options
	BuildMiniGui()
	GoTo, ShowMiniTicker
Return
listlines:
	listlines
return
;##############################################################
; About clipomatic area
;##############################################################
AboutClipomatic:
	Gui, 4: Show, Center h234 w477, About
Return

AboutOk:
	Gui, 4: Submit
Return

;##############################################################
; Sloppy Copy Code
;##############################################################
scVerbose:
	If ( scVerbose ) {
		scVerbose = 0
		Menu, SloppyCopySub, UnCheck, Verbose Messages
	} Else {
		scVerbose = 1
		Menu, SloppycopySub, Check, Verbose Messages
	}
	IniWrite, %scVerbose%, %settingspath%, Options, scVerbose
Return

scSort:
	If ( scSort ) {
		scSort = 0
		Menu, SloppyCopySub, UnCheck, Sort Results
	} Else {
		scSort = 1
		Menu, SloppyCopySub, Check, Sort Results
	}
	IniWrite, %scSort%, %settingspath%, Options, scSort
Return

scAutoOpen:
	If (scAutoOpen ) {
		scAutoOpen = 0
		Menu, SloppyCopySub, Uncheck, Auto Open IRIS/Toolzilla
	} Else {
		scAutoOpen = 1
		Menu, SloppyCopySub, Check, Auto Open IRIS/Toolzilla
	}
	IniWrite, %scAutoOpen%, %settingspath%, Options, scAutoOpten
Return

SloppyCopy:
	Thread, Priority, 0
	If ( A_GuiEvent != "DoubleClick" )
		Return
MenuSC:
	Sleep 250
	IfWinExist, QuicKlip: Sloppy Copy 	; get rid of the pop up if its already drawn. causes bugs if so.
		Gui, 99: Destroy
	Gui, 99: Menu, OptionsMenu
	scopyList	:= "", lcount := 0, Clip := Clipboard
	StringReplace, clip, clip, `r`n, %A_Space%, All
	StringReplace, clip, clip, `n, %A_Space%, All
	StringReplace, clip, clip, :, %A_Space%, All
	StringReplace, clip, clip, `#, %A_Space%, All
	Loop, Parse, clip, %A_Space%	; loop through the clipboard data
	If ( RegExMatch(A_LoopField,"[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}") ) { ; find uid's
		RegExMatch(A_LoopField,"(?<match>[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12})",_)
		IfNotInString, scopyList, %_match%		; do this Ifnotinstring to prevent putting multiple of the same results in the list
			scopyList .= _match . "|", lcount++	; appends the list with the result and increases the count of results
	} Else If ( RegExMatch(A_LoopField,"([A-Za-z0-9\.{1}]+)@{1}?[A-Za-z0-9]*((\.[a-zA-Z]{2,}){1,})") ) {	; find EMAILS
		RegExMatch(A_LoopField,"(?<match>([A-Za-z0-9\.{1}]+)@{1}?(?<domain>[A-Za-z0-9]*((\.[a-zA-Z]{2,}){1,})))",_)
		IfNotInString, scopyList, %_match%
			scopyList .= _match . "|" . _domain . "|", lcount := lcount + 2
	} Else If ( RegExMatch(A_LoopField,"([\da-zA-Z\.-]+)\.([a-zA-Z\.]{2,6})([\/\w \.-]*)*\/?") ) {	; find domains with path
		RegExMatch(A_LoopField,"(?<match>([\da-zA-Z\.-]+)\.([a-zA-Z\.]{2,6})([\/\w \.-]*)*\/?)",_)
		IfNotInString, scopyList, %_match%
			scopyList .= _match . "|", lcount++
	} Else If ( RegexMatch(A_LoopField,"^(18|19)\d{6}") ) {	; find ID's
		RegexMatch(A_LoopField,"(?<match>^1\d{7})",_)
		IfNotInString, scopyList, %_match%
			scopyList .= _match . "|", lcount++
	} Else If ( RegExMatch(A_LoopField,"\d{5,8}") ) {		; find shopper numbers
		RegExMatch(A_LoopField,"(?<match>\d{5,8})",_)
		IfNotInString, scopyList, %_match%
			scopyList .= _match . "|", lcount++
	} Else If ( RegExMatch(A_LoopField,"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}") ) {	; find IP's
		RegExMatch(A_LoopField,"(?<match>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})",_)
		IfNotInString, scopyList, %_match%
			scopyList .= _match . "|", lcount++
	} 
	If ( lcount = 0 ) {		; if it didn't find anything it won't do anything
		If ( scVerbose ) 
			TrayTip, QuicKlip: Sloppy Copy, Didn't find anything Special.,1,1
	} Else {				; otherwise if it finds more than one item it gives you the list
		IfWinExist, Clip-Ticker
			WinGetPos, scX, scY
		scX := scX - 300, scY := scY - 100
		If ( scSort ) 
			Gui, 99: Add, ListBox, sort gscopyChoice vscopyChoice w300 h300,
		Else
			Gui, 99: Add, ListBox, gscopyChoice vscopyChoice w300 h300,
		GuiControl, 99:, scopyChoice, %scopyList%
		Gui, 99: Show, x%scX% y%scY%, QuicKlip: Sloppy Copy
		Return
	}
Return

scopyChoice:
	Thread, Priority, 1
	If ( A_GuiEvent != "Doubleclick" )
		Return
	Gui, 99: Submit, NoHide
	If ( scopyChoice = "" ) {
		Return
	} Else {
		Gui, 99: Submit
		ClipGo := 0
		, clipboard := scopyChoice
		, ClipGo := 1
		Gui, 99: Destroy
		If ( RegexMatch(scopyChoice,"^(18|19)\d{6}") ) {
			If ( scAutoOpen ) {
				Run https://iris.prod.intranet.gdg/IncidentEditView.aspx?iid=%scopyChoice%
				If ( scVerbose ) 
					Traytip, QuicKlip: Sloppy Copy, Copied: %scopyChoice%`n`nOpening in IRIS.,1,1
			} Else {
				If ( scVerbose )
					Traytip, QuicKlip: Sloppy Copy, Copied: %scopyChoice%,1,1
			}
		} Else If ( RegExMatch(scopyChoice,"[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}") ) OR ( RegExMatch(scopyChoice,"\d{5,8}") ) {
			If ( scAutoOpen ) {
				Run https://toolzilla.intranet.gdg/index.php/SH/View/%scopyChoice%
				If ( scVerbose ) 
					Traytip, QuicKlip: Sloppy Copy, Copied: %scopyChoice%`n`nOpening in Toolzilla.,1,1
			} Else {
				If ( scVerbose ) 
					Traytip, QuicKlip: Sloppy Copy, Copied: %scopyChoice%,1,1
			}
		} Else {
			If ( scVerbose ) 
				TrayTip, QuicKlip: Sloppy Copy, Copied: %scopyChoice%,1,1
		}
	}
	Gosub, ClipMove
Return

99GuiClose:
	Gui, 99: Destroy
Return

;#######################################################
; clipping manager code
;#######################################################
#IfWinActive, Clipping Manager
Esc::WinMinimize
#IfWinActive

Edit1:
	Lock(1)
Return
Edit2:
	Lock(2)
Return
Edit3:
	Lock(3)
Return
Edit4:
	Lock(4)
Return
Edit5:
	Lock(5)
Return
Edit6:
	Lock(6)
Return
Edit7:
	Lock(7)
Return
Edit8:
	Lock(8)
Return
Edit9:
	Lock(9)
Return
Edit10:
	Lock(10)
Return

KOTGui:																	; keep on top CB
	Gui, 1: Submit, NoHide
	If ( KOTGui = 1 ) {
		Gui, 1: +AlwaysOnTop
		SetTimer, WinTrans, 100
	} Else {
		Gui, 1: -AlwaysOnTop
		SetTimer, WinTrans, Off
	}
Return

; Set Window trans on / off 
WinTrans:
	Thread, Priority, 1
	IfWinNotActive, Clipping Manager
		WinSet, Transparent, 170, Clipping Manager
	Else
		WinSet, Transparent, 255, Clipping Manager
Return

GreyFields:
	Gui, 1: Submit, NoHide
	CB_Check = 0
	Loop, %ClipCount%	{
		If CB_%A_Index% = 1
			CB_Check = 1
	}
	If ( CB_Check = 1 ) 
		GuiControl, Enable, CompileGui
	Else
		GuiControl, Disable, CompileGui
	CB_Check := 0, LockCount := 0
	Loop, %clipcount%	{
		If ( Lock_%A_Index% = 0 ) {
			GuiControl, Enable, RefreshGui
			GuiControl, , Lock, 0
		} Else {
			CB_Check := 1
			, LockCount++
		}
		If ( CB_%A_Index% = 1 )
			CB_Check = 1
	}
	If ( CB_Check = 1 )
		GuiControl, Enable, ClearGui
	Else
		GuiControl, Disable, ClearGui
	If ( LockCount = ClipCount ) {
		GuiControl, , Lock, 1
		GuiControl, Disable, RefreshGui
	} Else {
		GuiControl, , Lock, 0
		GuiControl, Enable, RefreshGui
	}
Return

LockFields:																; Lock Fields check
	Gui, 1: Submit, NoHide
	If ( Lock ) {
		Loop, %ClipCount%
			GuiControl, 1:, Lock_%A_Index%, 1
		GuiControl, 1: Disable, RefreshGui
	} Else {
		Loop, %ClipCount%
			GuiControl, , Lock_%A_Index%, 0
		GuiControl, 1: Enable, RefreshGui
	}
	UpdateGui()
Return

GuiClose:
1GuiClose:																; close the gui
	Gui, 1: Submit
	p = 0, go = 0
	Loop, %ClipCount%	{
			GuiControl, 1: , Lock_%A_Index%, 0
			GuiControl, 1: , CB_%A_Index%, 0
		}
	GuiControl, , Lock, 0
	Menu, ViewSubMenu, UnCheck, Clipping &Manager
Return

ShowManager:
	If ( p = 0 ) {
		p := 1, Go := 0
		UpdateGui()
		GuiControl, , Lock, 0
		GuiControl, Disable, CompileGui
		GuiControl, Disable, ClearGui
		Gui, 1: Show, xCenter yCenter h632 w381, Clipping Manager
		Gui, 1: Submit, NoHide
		Menu, ViewSubMenu, Check, Clipping &Manager
		Menu, Tray, Check, Clipping &Manager
		SaveForReset()
	} Else {
		p = 0, Go = 0
		Loop, %ClipCount%
			GuiControl, 1:, Lock_%A_Index%, 0
		Menu, ViewSubMenu, UnCheck, Clipping &Manager
		Menu, Tray, Uncheck, Clipping &Manager
		Gui, 1: Submit
	}
Return

RefreshGui:
	Go = 0
	UpdateGui()
Return

ClearGui:																; Clear button
	Loop, %ClipCount%
		GuiControl, 1:, CB_%A_Index%, 0
	GuiControl, 1: Disable, ClearGui
	GuiControl, 1: Disable, CompileGui
Return

CompileGui:																; Compile button
	Thread, Priority, 1
	Gui, 1: Submit, NoHide
	CB_Check = 0
	Loop, %ClipCount%
	{
		If CB_%A_Index% = 1
			CB_Check = 1
	}
	If CB_Check = 0
		return
	Clip999 := ""
	Loop, %ClipCount%	{
		If ( CB_%A_Index% = 1 )
			Clip999 .= Edit_%A_Index% "`n`n"
	}
	SaveForReset()
	ClipGo := 0
	, Clipboard := Clip999
	, ClipGo := 1
	UpdateGui()
Return

SetGui:																	; set button
	Gui, 1: Submit, NoHide
	SaveForReset()
	TrayTip, QuicKlip, Set current field contents.,1,1
Return

ResetGui:																; Reset Button
	Loop, %ClipCount%	{
		TempRestore := Save%A_Index%
		GuiControl, 1:, CB_%A_Index%, 0
		GuiControl, 1:, Edit_%A_Index%, %TempRestore%
	}
	GuiControl, , Lock, 0
	TrayTip, QuicKlip, Set fields to last set contents.,1,1
Return

SaveGui:																; Save button
	Gui, 1: Submit, NoHide
	SaveGuiFields()
	SaveForReset()
	UpdateGui()
Return

;################################################################
; Clipboard change code and hotkeys								#
;################################################################
OnClipBoardChange:														; On each clip board change
	Critical
	IniRead, totalCopies, %settingspath%, Odometer, totalCopies, 0 ; this needs to go here or it resets each time
	If ( Clipgo = 0 ) 
		Return
	MouseGetPos, , , Win, id, 1
	If ( Win = "0x2e0e42" ) and ( regexmatch(id,"Static([0-9]{1})") ) {
		ClipGo := 0
		, Clipboard := clip_bak
		, clipGo := 1
		Return
	}
	If ( allowDuplicates = 0 ) {
		If ( clipboard = Show1 ) 
			Return
	}
	If ( RegexMatch(clipboard,"(\\scopy\d\.jpg|\\hide\d\.jpg|\\show\d\.jpg)")) {
		ClipGo := 0
		, ClipBoard := clip_bak
		, ClipGo := 1
		Return
	} Else {
		MoveClips()
		If ( A_EventInfo = 2 )
			Show1 := "[Copied Image]"
		UpdateGui()
	}
	clip_bak := ClipboardAll
	IncreaseCopyCount()
Return

ClipMove:	; this is necessary
	MoveClips()
	If ( A_EventInfo = 2 )
		Show1 := "[Copied Image]"
	UpdateGui()
	clip_bak := ClipBoardAll
	IncreaseCopyCount()
Return


Paste1:							
	SendClip(1)	
Return
Paste2:
	SendClip(2)
Return
Paste3:
	SendClip(3)
Return
Paste4:
	SendClip(4)
Return
Paste5:
	SendClip(5)
Return
Paste6:
	SendClip(6)
Return
Paste7:
	SendClip(7)
Return
Paste8:
	SendClip(8)
Return
Paste9:
	SendClip(9)
Return
Paste10:
	SendClip(10)
Return

Compile1:
	SendClipUpTo(1)
Return
Compile2:
	SendClipUpTo(2)
Return
Compile3:
	SendClipUpTo(3)
Return
Compile4:
	SendClipUpTo(4)
Return
Compile5:
	SendClipUpTo(5)
Return
Compile6:
	SendClipUpTo(6)
Return
Compile7:
	SendClipUpTo(7)
Return
Compile8:
	SendClipUpTo(8)
Return
Compile9:
	SendClipUpTo(9)
Return
Compile10:
	SendClipUpTo(10)
Return

M1:
	CopyMini(1)
Return
M2:
	CopyMini(2)
Return
M3:
	CopyMini(3)
Return
M4:
	CopyMini(4)
Return
M5:
	CopyMini(5)
Return
M6:
	copyMini(6)
Return
M7:
	copyMini(7)
Return
M8:
	CopyMini(8)
Return
M9:
	CopyMini(9)
Return
M10:
	CopyMini(10)
Return

;##############################################################
; Clip-Ticker code
;##############################################################
^\:: ; force show mini ticker if loop isnt catching it
	WinGetActiveTitle, temp

	IfWinExist, Clip-Hide
		GoTo, ManShow
	If ( mini_on ) {
		IfWinExist, Clip-Ticker
			Goto, ManHide
		Else
		{
			mini_on = 0
			Menu, ViewSubMenu, Uncheck, Clip-Ticker
			goto, MiniShowSkip
		}
		WinActivate, %temp%
		Menu, ViewSubMenu, Check, Clip-Ticker
		Return
	} Else {
		goto, ShowMiniTicker
	}
	temp := ""
	return
ShowMiniTicker:
	Thread, Priority, 1
	AllowMove := 0, Mini_X := 0, Mini_Y := 0
	If ( WindowPos = "Bottom Right" )
		Mini_X := mon%DisplayMon%Right - 230 - LRPadding
		, Mini_Y := mon%DisplayMon%Bottom - 230 - TBPadding
	Else If ( WindowPos = "Bottom Left" )
		Mini_X := mon%DisplayMon%Left + LRPadding
		, Mini_Y := mon%DisplayMon%Bottom - 230 - TBPadding
	Else If ( WindowPos = "Top Right" )
		Mini_x := mon%DisplayMon%Right - 230 - LRPadding
		, Mini_Y := mon%DisplayMon%Top + TBPadding
	Else If ( WindowPos = "Top Left" )
		Mini_X := mon%DisplayMon%Left + LRPadding
		, Mini_Y := mon%DisplayMon%Top + TBPadding
MiniShowSkip:
	If ( Mini_on = 0 ) {
		Menu, ViewSubMenu, Check, Clip-Ticker 
		
		Gui, 2: -caption +ToolWindow
		Gui, 2: Show, x%Mini_X% y%Mini_Y% h220 w205, Clip-Ticker
		Gui, 2: Menu, 
		GuiControl, 2: Show, MiniHide1
		GuiControl, 2: Hide, MiniHide2
		Mini_on = 1
		Winset, Transparent, %Transparency%, Clip-Ticker
		Gui, 2: +AlwaysOnTop +Border
	} Else {
		Gui, 2: Submit
		Menu, ViewSubMenu, Uncheck, Clip-Ticker
		Mini_on = 0
		SetTimer, MiniHideMouseOver, Off
	}
	UpdateGui()
	WinGetTitle, temp
	WinActivate, Clip-Ticker
	winactivate, %temp%
	temp := ""
	SetTimer, MiniHideMouseOver, 1
Return

Submit:
	Gui, 2: Submit, NoHide
Return

MiniHide:
	Thread, NoTimers
	Thread, Priority, 1
	ClipGo = 0
	If ( A_GuiEvent != "DoubleClick" ) {
		ClipGo = 1
		Thread, NoTimers, False
		Return
	} Else {
		If ( RegExMatch(ClipBoard,"\\data\\\w+\.jpg"))
			ClipGo := 0
			, ClipBoard := clip_bak
			, ClipGo := 1
		WinGetPos, HX, HY, , HH, Clip-Ticker
		HY := HY + HH - 15
		Gui, 2: Hide
		Gui, 5: -caption +ToolWindow +AlwaysOnTop +border
		Gui, 5: Show, x%HX% y%HY% w203 h13, Clip-Hide
		;WinSet, Style, -0xC00000, A
		Winset, Transparent, %Transparency%, Clip-Hide
		GuiControl, 5: Show, ShowMini1
		GuiControl, 5: Hide, ShowMini2
		Mini_on = 0
	}
	ClipGo = 1
	Thread, NoTimers, False
Return

MiniShow:
	Thread, Priority, 1
	Thread, NoTimers
	ClipGo = 0
	WinGetPos, HX, HY, , , Clip-Hide
	If ( A_guiEvent != "DoubleClick" ) {
		ClipGo = 1
		Thread, NoTimers, False
		Return

	} Else {
		If ( RegExMatch(ClipBoard,"\\data\\\w+\.jpg") )
			ClipGo := 0
			, ClipBoard := clip_bak
			, ClipGo := 1
		Gui, 5: Hide
		mini_x := HX, mini_y := HY - 205
		GoSub, MiniShowSkip
	}
	ClipGo = 1
	Thread, NoTimers, False
Return
ManHide:
	Thread, NoTimers
	Thread, Priority, 1
	WinGetPos, HX, HY, , HH, Clip-Ticker
	HY := HY + HH - 15
	Gui, 2: Hide
	Gui, 5: -caption +ToolWindow +AlwaysOnTop +border
	Gui, 5: Show, x%HX% y%HY% w203 h13, Clip-Hide
	;WinSet, Style, -0xC00000, A
	Winset, Transparent, %Transparency%, Clip-Hide
	GuiControl, 5: Show, ShowMini1
	GuiControl, 5: Hide, ShowMini2
	Mini_on = 0
	ClipGo = 1
	Thread, NoTimers, False
Return
ManShow:	; If the clip-ticker has been minimized and ctrl+\ is pressed we should make it act as if they double clicked it to show again
	Thread, Priority, 1
	WinGetPos, HX, HY, , , Clip-Hide
	Gui, 5: Hide
	mini_x := HX, mini_y := HY - 205
	GoSub, MiniShowSkip
	ClipGo = 1
	Thread, NoTimers, False
Return

MiniHideMouseOver:
	Thread, Priority, 0
	IfWinExist, Clip-Ticker
		WinSet, Top, , Clip-Ticker
	Gui, 2: Submit, NoHide
	Gui, 5: Submit, NoHide
	MouseGetPos, , , Win, id, 1
	If ( id = "Static13" ) {
		GuiControl, 2: Hide, HideMini1
		GuiControl, 2: Show, HideMini2
	} Else If ( id = "Static14" ) {
		Return
	} Else If ( id = "Static1" ) or ( ( id = "Static5" ) and ( Win = "0x2e0e42" ) ) {
		GuiControl, 5: Hide, ShowMini1
		GuiControl, 5: Show, ShowMini2
		GuiControl, 2: Hide, sCopy1
		GuiControl, 2: Show, sCopy2
	} Else If ( id = "Static2" ) or ( ( id = "Static6" ) and ( Win = "0x2e0e42" ) ) {
		Return
	} Else {
		GuiControl, 2: Show, sCopy1
		GuiControl, 2: Hide, sCopy2
		GuiControl, 2: Show, HideMini1
		GuiControl, 2: Hide, HideMini2
		GuiControl, 5: Show, ShowMini1
		GuiControl, 5: Hide, ShowMini2
	}
Return

; ################################################################################
; --------------------------------- Functions

BuildMiniGui() {
	Global
	Gui, 2: Add, Picture, x7 y0 gSloppyCopy vsCopy1, %A_WorkingDir%\data\scopy1.jpg
	Gui, 2: Add, Picture, x7 y0 gSloppyCopy vsCopy2, %A_WorkingDir%\data\scopy2.jpg
	GuiControl, 2:, Hide, sCopy2
	Gui, 2: Add, Text, x0 y9 w10 h20 gM1 -Multi -Wrap, 1
	Gui, 2: Add, Text, x0 y29 w10 h20 gM2 -Multi -Wrap, 2
	Gui, 2: Add, Text, x0 y49 w10 h20 gM3 -Multi -Wrap, 3
	Gui, 2: Add, Text, x0 y69 w10 h20 gM4 -Multi -Wrap, 4
	Gui, 2: Add, Text, x0 y89 w10 h20 gM5 -Multi -Wrap, 5
	Gui, 2: Add, Text, x0 y109 w10 h20 gM6 -Multi -Wrap, 6
	Gui, 2: Add, Text, x0 y129 w10 h20 gM7 -Multi -Wrap, 7
	Gui, 2: Add, Text, x0 y149 w10 h20 gM8 -Multi -Wrap, 8
	Gui, 2: Add, Text, x0 y169 w10 h20 gM9 -Multi -Wrap, 9
	Gui, 2: Add, Text, x0 y189 w10 h20 gM10 -Multi -Wrap, 0
	Gui, 2: Add, Edit, x7 y9 w180 h20 -Multi -Wrap  vmEdit_1, %Show1%
	Gui, 2: Add, Edit, x7 y29 w180 h20 -Multi -Wrap  vmEdit_2, %Show2%
	Gui, 2: Add, Edit, x7 y49 w180 h20 -Multi -Wrap  vmEdit_3, %Show3%
	Gui, 2: Add, Edit, x7 y69 w180 h20 -Multi -Wrap  vmEdit_4, %Show4%
	Gui, 2: Add, Edit, x7 y89 w180 h20 -Multi -Wrap  vmEdit_5, %Show5%
	Gui, 2: Add, Edit, x7 y109 w180 h20 -Multi -Wrap  vmEdit_6, %Show6%
	Gui, 2: Add, Edit, x7 y129 w180 h20 -Multi -Wrap  vmEdit_7, %Show7%
	Gui, 2: Add, Edit, x7 y149 w180 h20 -Multi -Wrap  vmEdit_8, %Show8%
	Gui, 2: Add, Edit, x7 y169 w180 h20 -Multi -Wrap  vmEdit_9, %Show9%
	Gui, 2: Add, Edit, x7 y189 w180 h20 -Multi -Wrap  vmEdit_10, %Show10%
	Gui, 2: Add, Checkbox, x188 y9 w15 h20 -wrap vMLock_1 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y29 w15 h20 -wrap vMLock_2 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y49 w15 h20 -wrap vMLock_3 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y69 w15 h20 -wrap vMLock_4 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y89 w15 h20 -wrap vMLock_5 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y109 w15 h20 -wrap vMLock_6 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y129 w15 h20 -wrap vMLock_7 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y149 w15 h20 -wrap vMLock_8 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y169 w15 h20 -wrap vMLock_9 gSubmit, 
	Gui, 2: Add, Checkbox, x188 y189 w15 h20 -wrap vMLock_10 gSubmit, 
	Gui, 2: Add, Picture, x7 y209 gMiniHide vHideMini1, %A_WorkingDir%\data\Hide1.jpg
	Gui, 2: Add, Picture, x7 y209 gMiniHide vHideMini2, %A_WorkingDir%\data\Hide2.jpg
}

CopyMini(num) {
	Thread, Priority, 2
	If ( A_GuiEvent != "DoubleClick" ) {
		Return
	} Else {
		MouseGetPos, , , , id, 1
		statictemp := "Static" . num + 2
		If ( id != statictemp ) {
			Return
		} Else {
			IncreaseCopyCount()
			ClipGo = 0
			Gui, 2: Submit, NoHide
			temp := mEdit_%num%
			, ClipBoard := temp
			ClipWait, 3
			ClipGo = 1
		}
	}
	TrayTip, QuicKlip, Copied: %temp%,1,1
	temp := ""
}

Lock(num) {
	GuiControl, 1:, Lock_%num%, 1
	gosub, Greyfields
	Return
}
MoveClips() {
	Global
	Thread, Priority, 1
	C := ClipCount
	Loop, %ClipCount%	{
		L := C - 1
		If ( A_Index = ClipCount )
			Clip1 	:= ClipBoardAll
			, Show1 := ClipBoard
		Else
			Clip%C% 	:= Clip%L%
			, Show%C% 	:= Show%L%
		C--
	}
}
SaveForReset() {
	Global
	ResetCount := 1
	Loop, %ClipCount%
		Save%A_Index% := Edit_%A_Index%
	LockState := Lock
}
SendClipUpTo(stop) {
	Critical
	IncreaseCompilePasteCount()
	Global show999 := ""									; clears compiled variable for new paste
	Loop, %stop%
		Show999 .= Show%A_Index% "`n"
	SendClip(999)
}
UpdateGui() {
	Global
	Thread, Priority, 1
	Gui, 1: Submit, NoHide
	Gui, 2: Submit, NoHide
	Loop, %ClipCount%	{
		UpdateTemp := Show%A_Index%
		If ( mLock_%A_Index% = 0 )
			GuiControl, 2:, mEdit_%A_Index%, %UpdateTemp%
		If ( Lock_%A_Index% = 0 )
			GuiControl, 1:, Edit_%A_Index%, %UpdateTemp%
	}
}
SaveGuiFields() {
	Global
	Gui, 1: Submit, NoHide
	Loop, %ClipCount%
		Show%A_Index% 	:= Edit_%A_Index%
		, Clip%A_Index% := Edit_%A_Index%
}
SendClip(clip) {
	Thread, Priority, 999999
	Thread NoTimers
	IncreaseHistoryPasteCount()
	Global ClipGo := 0
	, OldClip 	:= ClipBoardAll
	, clip_bak  := ClipboardAll
	ClipBoard := ""											; for clipwait
	If ( Lock_%clip% ) {
		Clipboard := Edit_%clip%
	} Else If ( mLock_%clip% ) {
		Clipboard := mEdit_%clip%
	} Else {
		Clipboard := show%clip%
	}
	ClipWait, 3
	BlockInput, Send
	sleep 100
	send, {ctrl down}v{ctrl up}
	sleep 100
	BlockInput, Off
	Clipboard 	:= ""										; for clipwait
	, Clipboard := OldClip									; set old clipboard back
	ClipWait, 3
	OldClip := ""											; incase it was big
	sleep 250
	Global ClipGo = 1
}
WM_LBUTTONDOWN() {
   PostMessage, 0xA1, 2
   Return
}
Update() {
	update := 0
	Loop, Read, %A_WorkingDir%\QuicKlip.ahk
	{
		IfInString, A_LoopReadLine, Extract_Ahk2Exe
		{
			update = 0
			break
		}
	}
	Return % update
}
IncreaseCopyCount() {
	global
	Thread, Priority, 1
	totalCopies++, CTS++
	IniWrite, %totalCopies%, %settingspath%, Odometer, totalCopies
	GuiControl, 3:, tCopies, %totalCopies%
	Guicontrol, 3:, sCopies, %CTS%
}
IncreaseHistoryPasteCount() {
	global
	Thread, Priority, 1
	totalHistoryPastes++, HPTS++
	IniWrite, %totalHistoryPastes%, %settingspath%, Odometer, totalHistoryPastes
	GuiControl, 3:, tHPastes, %totalHistoryPastes%
	Guicontrol, 3:, sHPastes, %HPTS%
}
IncreaseCompilePasteCount() {
	global
	Thread, Priority, 1
	totalCompilePastes++, CPTS++
	IniWrite, %totalCompilePastes%, %settingspath%, Odometer, totalCompilePastes
	GuiControl, 3:, tCPastes, %totalCompilePastes%
	GuiControl, 3:, sCPastes, %CPTS%
}
;##############################################################
; Below are functions to extract essential program files
;##############################################################
; QuicKlip.ico
QuicKlip_Get(_What)
{
	Static Size = 67646, Name = "QuicKlip.ico", Extension = "ico", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_QuicKlip(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = ""
	Static 2 = ""
	Static 3 = ""
	Static 4 = ""
	Static 5 = ""
	Static 6 = ""
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 92676 * (A_IsUnicode ? 2 : 1))
		
		Loop, 6
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 67646, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 67646, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 67646, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
; show2.jpg
show2_Get(_What)
{
	Static Size = 1416, Name = "show2.jpg", Extension = "jpg", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_show2(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAJAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6t/Z6/Zi8N+IfgH4Hv5fhhoeozXvh+wuJLt/DsMz3LPbITIz+X85Y5Oe+c5rsf+GSvC//AESXw/8A+EvD/wDGq/Hqbqv+8aSv4grZE6k3U9tJX6J6HhfVo7n7Df8ADJXhf/okvh//AMJeH/41R/wyV4X/AOiS+H//AAl4f/jVfjzRWH+rj/5/z+8XsYn7Df8ADJXhf/okvh//AMJeH/41R/wyV4X/AOiS+H//AAl4f/jVfjzRR/q4/wDn/P7w9jE/Yb/hkrwv/wBEl8P/APhLw/8Axqj/AIZK8L/9El8P/wDhLw//ABqvx5oo/wBXH/z/AJ/eHsYn7Df8MleF/wDokvh//wAJeH/41R/wyV4X/wCiS+H/APwl4f8A41X480U1w4/+f8/vD2MT9hT+yT4XP/NJfD//AIS8I/8Aaf8An3rhfjz+xh4l8ReHbGD4X/Dn4Q6PqS3cc13deKPDUxjeFWVjBFFb2cufMI2OzFCqH5PmYPH+WlJJ95/x/kK7cBlH1WvGs6kp2vo9n6+g40I3P2BsP2S/D/2GH7b8IvCkd2YwZltfDsc9ur/xeW728bumejNGhYYO1TkCX/hknwv/ANEl8P8A/hLw/wDxqvx6T/j3/wCBD/0EUVz1eHOafOq81e7tfQU6KUj9hv8Ahkrwv/0SXw//AOEvD/8AGqP+GSvC/wD0SXw//wCEvD/8ar8eaKy/1df/AD/n94exifsN/wAMleF/+iS+H/8Awl4f/jVH/DJXhf8A6JL4f/8ACXh/+NV+PNFH+rr/AOf8/vD2MT9hv+GSvC//AESXw/8A+EvD/wDGqP8Ahkrwv/0SXw//AOEvD/8AGq/Hmij/AFdf/P8An94exifsN/wyV4X/AOiS+H//AAl4f/jVH/DJXhf/AKJL4f8A/CXh/wDjVfjzRTXDrent5/eHsYn7Cn9krwsBk/CXw/gdT/wi8PA/79V84/8ABTv4HaF8M/gJpGoWngbTfDM0uvw27XNto8dk8oNvcts3oikrlM4JOSuccCvggdahfofw/rXdlmQuFdN1pO3djjRimf/Z"
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 1940 * (A_IsUnicode ? 2 : 1))
		
		Loop, 1
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 1416, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 1416, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 1416, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
; show1.jpg
show1_Get(_What)
{
	Static Size = 1315, Name = "show1.jpg", Extension = "jpg", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_show1(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAJAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9Lf2Wf2cfAGvfsx/Dm9vPg94O1S8u/C+mTz3kvhO2nku5GtI2aVpDES5YnJY5JJJzzXef8MtfDf8A6Ih4I/8ACMtf/jNfhHJ0H1/9lFJQB+7v/DLXw3/6Ih4I/wDCMtf/AIzR/wAMtfDf/oiHgj/wjLX/AOM1+EVFAH7u/wDDLXw3/wCiIeCP/CMtf/jNH/DLXw3/AOiIeCP/AAjLX/4zX4RUUAfu7/wy18N/+iIeCP8AwjLX/wCM0f8ADLXw3/6Ih4I/8Iy1/wDjNfhFRQB+7v8Awy18N/8AoiHgj/wjLX/4zR/wy18N/wDoiHgj/wAIy1/+M1+EVFCA/d3/AIZb+G4I/wCLIeCcZ/6E21/+M15T+1h+yD4k8Q+E9Ktfgj8JP2e9D1hdQiuNSvvGPhFzGbeJ1c20MNvYy7vOAMckjOhSMt5f7x1lh/Hg/db6H+VKer/57irp73Bn7paH+y/4Em0azbU/gX8OrbU2gRruGy8KwXNtHKVG9Y5XtYmkjDZCs0cbMACVUnaLX/DLXw3/AOiIeCP/AAjLX/4zX4Qn/WP/ANdW/pS1ClzXJvofu7/wy18N/wDoiHgj/wAIy1/+M0f8MtfDf/oiHgj/AMIy1/8AjNfhFRQLmZ+7v/DLXw3/AOiIeCP/AAjLX/4zR/wy18N/+iIeCP8AwjLX/wCM1+EVFAczP3d/4Za+G/8A0RDwR/4Rlr/8Zo/4Za+G/wD0RDwR/wCEZa//ABmvwiooDmZ+7v8Awy18N/8AoiHgj/wjLX/4zR/wy18N/wDoiHgj/wAIy1/+M1+EVFA0z93T+y18Nx/zRDwR/wCEZa//ABmvkz/gsh8GfCXw7/Zi0K+8P/Drw34RvJfFFvA15p+gQafJLGbS8JjMiopKkqp25wdgOOM1+acn3DUp/wBafx/pQUf/2Q=="
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 1802 * (A_IsUnicode ? 2 : 1))
		
		Loop, 1
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 1315, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 1315, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 1315, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
; hide1.jpg
Hide1_Get(_What)
{
	Static Size = 1283, Name = "Hide1.jpg", Extension = "jpg", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_Hide1(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAJAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9Lv2Wv2TPBviP9mP4c6jdfD74e3tzf+F9MuZri58KadNNO72kTM7u8JZ2JJJZiSSSSSa7v/hjLwN/0TX4af8AhHaZ/wDGK/CKigD93f8AhjLwN/0TX4af+Edpn/xij/hjLwN/0TX4af8AhHaZ/wDGK/CKigVj93f+GMvA3/RNfhp/4R2mf/GKP+GMvA3/AETX4af+Edpn/wAYr8IqKAsfu7/wxl4G/wCia/DT/wAI7TP/AIxR/wAMZeBv+ia/DT/wjtM/+MV+EVFAWP3d/wCGMvA3/RNfhp/4R2mf/GKP+GMvA3/RNfhp/wCEdpn/AMYr8IqKAsfu7/wxl4G/6Jr8NP8AwjtM/wDjFef/ALT3wKsfgf8ABvVPFPg79nH4d/FLU9IXz5fD9ro2maZe3NuATI1uf7Pn86VeCINqs43bCzhI5PxioqotJptXBrQ/b74XfsqaL4t+Huk6n4o+CHwt8G6/fW4mvNEi0XStXGmOeRE10tnEsrgY3FE2BtwVpFAkbf8A+GMvA3/RNfhn/wCEbpn/AMYr8IqKTd3caP3d/wCGMvA3/RNfhn/4Rumf/GKP+GMvA3/RNfhn/wCEbpn/AMYr8IqKQH7u/wDDGXgb/omvwz/8I3TP/jFH/DGXgb/omvwz/wDCN0z/AOMV+EVFAH7u/wDDGXgb/omvwz/8I3TP/jFH/DGXgb/omvwz/wDCN0z/AOMV+EVFAH7u/wDDGXgb/omvwz/8I3TP/jFH/DGXgb/omvwz/wDCN0z/AOMV+EVFAH7u/wDDGXgb/omvwz/8I3TP/jFfJn/BY/8AZ/8ADnwp/Zj0LUdH8I+ENAuZvFFvbNcaVoFnp8zobS7YoXhjVipKg7ScZUHGQK/NWigD/9k="
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 1758 * (A_IsUnicode ? 2 : 1))
		
		Loop, 1
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 1283, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 1283, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 1283, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
; hide2.jpg
hide2_Get(_What)
{
	Static Size = 1441, Name = "hide2.jpg", Extension = "jpg", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_hide2(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAJAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6r/Z7+DXhPU/gH4GuZ/A3w/vJ7jQLCSSe48K6fNNO5toyXeRoSzsx5JJJOSScmux/4Ub4N/6J78N//CQ0z/4xX5Aw/dl+n9aVegr+HK+UYqdSUliprU+dnKSla5+vv/CjfBv/AET34b/+Ehpn/wAYo/4Ub4N/6J78N/8AwkNM/wDjFfkHRWf9iYv/AKC5i5pdz9fP+FG+Df8Aonvw3/8ACQ0z/wCMUf8ACjfBv/RPfhv/AOEhpn/xivyDopf2Ji/+guYc0u5+vn/CjfBv/RPfhv8A+Ehpn/xij/hRvg3/AKJ78N//AAkNM/8AjFfkHRR/YmL/AOguYc0u5+vn/CjfBv8A0T34b/8AhIaZ/wDGKP8AhRvg3/onvw3/APCQ0z/4xX5B0Uf2Ji/+guYc0u5+vn/CjfBv/RPfhv8A+Ehpn/xiuT+N3hDSfhT8ONQ17QPgR8PviDe6avmPo1to2mabdTRD77QsbGfzZFGSIgqlhnaS4VH/ACvpE+8P90/+hCujB5ZiaNaNWeJlNJ3cXs/LcqMpRlufrR4J+E+g+JPCVhf618IPhn4X1W7hEtxpKaHpep/YGP8Ayza4W0iWRhkZ2oFDEqGYAO2r/wAKN8G/9E9+G/8A4SGmf/GK/IMf8e35/wDs9FRXyrFVKkqixMo3bdlsr9FrshSlJStc/Xz/AIUb4N/6J78N/wDwkNM/+MUf8KN8G/8ARPfhv/4SGmf/ABivyDorD+xsX/0FzFzS7n6+f8KN8G/9E9+G/wD4SGmf/GKP+FG+Df8Aonvw3/8ACQ0z/wCMV+QdFH9jYv8A6C5hzS7n6+f8KN8G/wDRPfhv/wCEhpn/AMYo/wCFG+Df+ie/Df8A8JDTP/jFfkHRR/Y2L/6C5hzS7n6+f8KN8G/9E9+G/wD4SGmf/GKP+FG+Df8Aonvw3/8ACQ0z/wCMV+QdFH9jYv8A6C5hzS7n6+f8KN8G/wDRPfhv/wCEhpn/AMYr5v8A+Cn/AMNdA8JfALR7nSvCvhDRbmTxBDGZtL0K1sJXQ21ySheCNWK5UHaTgkA4yBXwnUc/3m+o/rXXhMsxFKqqk8RKS7PYqLm5W5j/2Q=="
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 1975 * (A_IsUnicode ? 2 : 1))
		
		Loop, 1
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 1441, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 1441, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 1441, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
; scopy1.jpg
scopy1_Get(_What)
{
	Static Size = 1593, Name = "scopy1.jpg", Extension = "jpg", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_scopy1(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = "/9j/4AAQSkZJRgABAQEAYABgAAD/4QA6RXhpZgAATU0AKgAAAAgAA1EQAAEAAAABAQAAAFERAAQAAAABAAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAJAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9Av2a/wBmf4S+IP2cvAF9qXgnwPd6jfeG9Onu5rjTrd5ZpWto2dnJGSxYkknnJrtv+GUvgz/0IXw//wDBZbf/ABNfinRWnOuwH7Wf8MpfBn/oQvh//wCCy2/+Jo/4ZS+DP/QhfD//AMFlt/8AE1+KdFHOuwH7Wf8ADKXwZ/6EL4f/APgstv8A4mj/AIZS+DP/AEIXw/8A/BZbf/E1+KdFHOuwH7Wf8MpfBn/oQvh//wCCy2/+Jo/4ZS+DP/QhfD//AMFlt/8AE1+KdFHOuwH3L+0L8Lr671/47XfgXwFBpbeCvA2rSaBpT/DmwntLjUY7O6+xG3kaJjfX09yttcwS2txdW4tmls7vT7O8WOafd+IHhfQ/G3x28FXngP4ZwW3g/Vf7H/suxvfhubG31vfq9xb+Iv7XN7aJcab9h0yOC6svMey+0zSsE+3jEC/n7RS5vID6t/Zh+Cnxc8S/8M6f8JT8OvDcf/CQ6Zd6t4q/tnwlotp5UK/8I75qa15MC/ZZ/wDSPEP2C3svLmO3TPtiHydQ2fTf7Of7KmgX3xE8XWPjLw74Nu9H8A3I8NaXPJ4RsbFvGSyWtnfDWJ5Am1njS4Wy22ghtzPbahKUxNDbWH5b0VUbNpCb0P0C+MHwjvtG+OXxGtfB/wAMvDep6ppmmXj+C/Ds3gmwk8K61aroYntr261R2gMF82u77IwC8LfZlRjYojtqUXDeAfg/4o8S/H/4dab4e8FQa18OH1PV5H17xd4C03RZda0qFvDm6XWYWsrW4tJ1N14kgsora3tpJpLWwlljmtVuLh/jaip5l2GfqT+zn+yroF98RPF1j4y8O+DbvR/ANyPDelzyeEbGxbxkJLWzvhrM8gTa0kaXC2W20EMBnttQlKYmhtrD2P8A4ZS+DP8A0IXw/wD/AAWW3/xNfinRQprsB+1n/DKXwZ/6EL4f/wDgstv/AImj/hlL4M/9CF8P/wDwWW3/AMTX4p0U+ddgP2s/4ZS+DP8A0IXw/wD/AAWW3/xNH/DKXwZ/6EL4f/8Agstv/ia/FOijnXYD9rP+GUvgz/0IXw//APBZbf8AxNH/AAyl8Gf+hC+H/wD4LLb/AOJr8U6KOddgP2s/4ZS+DP8A0IXw/wD/AAWW3/xNfL//AAVm+Cvw++Gn7Oei33hbw14X0XUJfEkFvJPpttDbytEbW6YoWQZK7lU46ZAr886KXOuwH//Z"
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 2183 * (A_IsUnicode ? 2 : 1))
		
		Loop, 1
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 1593, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 1593, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 1593, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
; scopy2.jpg
scopy2_Get(_What)
{
	Static Size = 1953, Name = "scopy2.jpg", Extension = "jpg", Directory = "\data"
	, Options = "Size,Name,Extension,Directory"
	If (InStr("," Options ",", "," _What ","))
		Return %_What%
}

Extract_scopy2(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = "/9j/4AAQSkZJRgABAQEAYABgAAD/4QA6RXhpZgAATU0AKgAAAAgAA1EQAAEAAAABAQAAAFERAAQAAAABAAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAJAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6v+BnwL8Eax8EfB13eeDfCt1dXeh2U0802k28kkztAjMzMVJZiSSSSSTXVf8ADPfgH/oR/B//AIJrb/4ivyyor+asd4BZniMTUrxzqpFSk3bklpd3t/GW3ofoVHjfDwpxg8HF2SV7r/5A/U3/AIZ78A/9CP4P/wDBNbf/ABFH/DPfgH/oR/B//gmtv/iK/LKiuX/iXrNP+h5U/wDAJf8Ay80/17w3/QHH/wACX/yB+pv/AAz34B/6Efwf/wCCa2/+Io/4Z78A/wDQj+D/APwTW3/xFfllRR/xL1mn/Q8qf+AS/wDl4f694b/oDj/4Ev8A5A/U3/hnvwD/ANCP4P8A/BNbf/EUf8M9+Af+hH8H/wDgmtv/AIivyyoo/wCJes0/6HlT/wAAl/8ALw/17w3/AEBx/wDAl/8AIH1H8cvBXiW61r4y3Pg3wOdObwj4O1OTRNNb4d2U1tPfJaXH2QwO0LG8vJp1t7iGS2muYBAZLW6sbW6WOWbY8b6afF3xl8JXXgz4dG38Lal/Zf8AZ1nd/Dn7HBq+/U54Nd/tQ3dos9h9j09Ibm03vafaJZCF+2jEI+RKK+lXgvjOWK/tJ3irL929dFfm/e3eq0bfMoykr8zU1574upXb+r7/AN7ze3u6aP0ulpa8X7l+zx8NPjR4g/4UR/wkfgDSI/7c0+51PxJ/a3hDSLby4l/sLzV1byoF+zzfv9d+xQWmyU7dO+1IfKvtn0L8CP2fVvPHXiiz8V+HvDdzpXgq4Hh/TppPB9lZnxWHt7W8/tWZxHtZ0WcWm22EUJmt76QpiWK3s/giinmPgxmOMbjHM1TumvdotWbm5X/jdE+ReVuqjYocW4elZvD8228/JL+Tur+vqz67+KXgHxLpXxi8eW/hb4c6RqGo6fp903hLQpfBFk/hvVrZdHE0F3c6k3kmG8bWd1oYRdFvs6qxs0Vzfx8f4K+H3jvX/jZ4EsND8HHVvATahqjvrXifwFp2ky6tpsR0HdLqsTWdtPbTKbjX4bSO3gt3lktrKSSOW2Wed/nSiqo+DmOp01H+0uZqPLd0m/suPM/31+a/vJ33ve/uOCnxZRlJv6vbW+kvO9vg26flbW/3x8CP2fheeOvFFn4r8PeHLnSvBVwNA06aTwfZWZ8Vh7e1vP7VmcR7WdFnFptthFCZre+kKYlit7P1X/hnvwD/ANCP4P8A/BNbf/EV+WVFeDjPAPNK9T2n9tTjotFTaV0tXZVktXd+V7LRJHbS43w0I8v1RP1kv/kOh+pv/DPfgH/oR/B//gmtv/iKP+Ge/AP/AEI/g/8A8E1t/wDEV+WVFcv/ABL1mn/Q8qf+AS/+Xmn+veG/6A4/+BL/AOQP1N/4Z78A/wDQj+D/APwTW3/xFH/DPfgH/oR/B/8A4Jrb/wCIr8sqKP8AiXrNP+h5U/8AAJf/AC8P9e8N/wBAcf8AwJf/ACB+pv8Awz34B/6Efwf/AOCa2/8AiKP+Ge/AP/Qj+D//AATW3/xFfllRR/xL1mn/AEPKn/gEv/l4f694b/oDj/4Ev/kD9Tf+Ge/AP/Qj+D//AATW3/xFeBf8FFvhf4X8C/BLS7vR/DuhaPcya5DC01lZQ2sjIYLglSyKCVyAcdMgHtXxfRXvcL+CeYZTmtDMqubzqxpyu4OEkpeTbqy/JnFmPGFDFYaeHjhVFyVr3Wn/AJKvzP/Z"
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 2676 * (A_IsUnicode ? 2 : 1))
		
		Loop, 1
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 1953, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 1953, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 1953, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}

Extract_Updater(_Filename, _DumpData = 0)
{
	Static HasData = 1, Out_Data, Ptr
	Static 1 = ""
	Static 2 = ""
	Static 3 = ""
	Static 4 = ""
	Static 5 = ""
	Static 6 = ""
	Static 7 = ""
	Static 8 = ""
	Static 9 = "c2MwWUFBSFVFZ0U0VklGN0p3NEI1RndCV2RRV0xjUXpyQW92eDlrWVZDSFFPZzN3a0NBQjBCNHZPNkVuLy8vK0tSaGM4QVhVRmkwWUk2eFU4QW5VTXVkaUJSZ0RvbGgwRUFPc0Z1R1MwUmdCZXdnUUFpMFFrQklvSWdQa2dkQVdBK1FsMUEwRHI4Y1AvZENRRTZPUC8vLzlaaWdpRXlYVURNc0REZ1BrdGRBV0ErU3QxQVVDQU9EQjFJSXBJQVlENWVIUUZnUGxZZFJNUHZrQUNVT2pzclFNQWhjQlpkQVF6d0VERE04RERWb3QwSkFoVzZLLy8vLytFd0ZsMEQyb1FhZ0JXNkh2eC8vK0R4QXhldzFib0F3QUFBRmxldzFOVlZsZUxmQ1FVNndGSEQ3WUhVT2dmMVFNQWhjQlpkZkVQdGpkSGcvNHRpOTUwQllQK0szVUVEN1kzUnpQQU05S0QvakI4Q29QK09YOEZnKzR3NndPRHp2K0QvdjkwSUdvQWFncFNVT2l6WmdVQWk4aUw2b3ZHRDdZM21RUElFK3FMd1l2VlIrdkpYMTVkZy9zdFczVUg5OWlEMGdEMzJzT0x3WUI0RndCMUE0dEFEUFpBRlFoMEJEUEFRTU9MUUF6RFZZdnNVVmIvZFFqbzMvNy8vNHZ3aWdhRXdGbDFEVFBBT1VVUUQ1WEE2ZDBBQUFBOExYVU5nMzBNQUhVTE04RHB6QUFBQUR3cmRRRkdnRDR3VjNVd2lrWUJQSGgwQkR4WWRTV05mZ0lQdmdkUTZOQ3NBd0NGd0ZsMEZNZEYvQUVBQUFDTDkxTXoyNGxkQ09tY0FBQUFnMlg4QU92dmcvOEpENFNaQUFBQU04QTcrQStFb1FBQUFJUC9MblVUT1VVVWRHbzcySFZtT1VYOGRXRXoyMFByYWpsRi9IUU9WK2g3ckFNQTk5Z2J3RmxBNncyRC96QjhCWVAvT1g1R004QkFoY0IwUDROOUdBQjFiMWZvQkFrRUFJUDRSVmwxSm9YYmRDS0RmUWdBZEJ5TlJnR0tDSUQ1TFhRRmdQa3JkUUtMOElwR0FUd3dmQVE4T1g0T004QmJYMTdKdzhkRkNBRUFBQUJHRDc0K2cvOGdENFZlLy8vL1Z1alAvZi8vZ0RnQVdYUUdnMzBZQUhUVGczMElBSFROTThDRjJ3K1Z3RURyeFRQQU9VVUlkTDdyNzRCNUZ3QldkUVdMY1F6ckFvdnhNOENLUmhXRDRIQ0QrQkIwUW9QNElIUTRnL2hBZEMvL2RDUUlpODVxQVdvQWFnRnFBZWdyL2YvL1VPaUEvdi8vZzhRVWhjQjFHNHBPRllUSmVCU0F5VUNJVGhYckREUEE2d2hxQWxqckF6UEFRRjdDQkFDTFJDUUlTSFE4U0hRWGFnRC9kQ1FJNkdjQ0FBQlpXVFBKT0FnUGxjR0x3Y05xQVdvQS8zUWtET2lxQVFBQTNRVjR6VVVBMnVtRHhBemY0UGJFUkhvVU04RERhZ0gvZENRSTZDTDcvLzhMd2xsWmRPd3p3RUREVm90MEpBZ1B0Z2FEK0RCM1M0WEFkRGlEK0RCMUJvQitBUUIwTFdvQWFnRnFBR29CVnVqWS9mLy9nOFFVU0hRZFNIVWxWdWpuNy8vLzNRVjR6VVVBMnVsWjMrRDJ4RVI2RHpQQVhzTlc2UFg4Ly84THdsbDA4VFBBUUY3RFZvdDBKQWlMenVpQS9mLy9oY0IwSjJvQWk4N296djcvLzBoMEgwaDFLV29CaTg3b1FRRUFBTjBGZU0xRkFOcnAzK0QyeEVSNkVUUEFYc05xQVl2TzZDVDYvLzhMd25Udk04QkFYc09BZVJjQVZsZDFCWXQ1RE9zQ2kvbHFBSXZQNklMKy8vK0xkQ1FNaVVZSVNIUWFTSFFLeHdiWXBVVUFNOERySG1vQmk4L281QUFBQU4wZTZ3NXFBWXZQNk5iNS8vK0pCb2xXQkRQQVFGOWV3Z1FBVm90MEpBaUxSZ2lGd0ZkME5YNVZnL2dDZm1xRCtBTjBINFA0QkhWR2kwWUVoY0IwSGNkR0NBRUFBQUNMQ0lrT2kwQUVpVVlFNjBhTERsYm9idi8vLytzL2l6NXFBR29CYWdCcUFWZm90UHovLzRQRUZJbEdDRWgwRjBoMENzY0cyS1ZGQURQQTZ4bFg2QUh2Ly8vZEh1c0xWK2pVKy8vL2lRYUpWZ1JaTThCQVgxN0RpMFFrQkl0SUNFbDBPVWwwTTBsMEpFbDFDb3RJQklYSmRBUGZLY09EZkNRSUFQOHdkQWZvd083Ly8xbkQ2Rzd1Ly85WncvOTBKQXlMQ09nSEFBQUF3OTBBdzk4b3cxV0w3RkZSZ0hrWEFGWjFCWXR4RE9zQ2kvR0tSaFdvSUhRRTNRYnJPNmdRZEFUZkx1c3phZ0dMenVpeSt2Ly9VT2h3N3YvLzNWMzRnMzBJQUZsMEYvWkdGWUIxRWQxRitHb0FVVkdMenQwY0pPZzVwQUFBM1VYNFhzbkNCQUJWaSt5TFJRaUxTQWd6MGl2S2RGOUpkRVZKZEJoSmRBcEpkRk80MktWRkFGM0Rpd2hxQWVoWSt2Ly9YY001VlF4MDZkMEFvUWhSUmdCUlVkMGNKSVBBZEZCb0FBRUFBUDkxRE9pbWdnQUFpMFVNZzhRVVhjTTVWUXgwdi85MURQOXdCUDh3NkpQdS8vK0R4QXhkdzRzQVhjTlZpK3lCN0FnQkFBQ0xSUWhUVm90MURGZi9jQVQvTnVoeS8vLy9pVVg0allYNC92Ly9VUDkyQk9oZy8vLy9nOFFRZzMwUUE0bEYvSHdhTTl0VC8zWUk2RDM0Ly84THdsbFpkQW5IUlF3QkFBQUE2d1V6MjRsZERLRUlVVVlBZ0xqSkFBQUFBSFFNT1YwTWRRZkhSUXdDQUFBQU0vK0RmUkFFZkh4WC8zWU02UDczLy8rTCtJUHZBWXZhZzlzQWk4Y2p3NFA0LzFsWmRTSnFBZjkxRFA5MS9QOTErT2dIZEFNQWk4Z3JUZmlEeEJCQjk5Z2J3Q1BCbWV0OWhkdDhMSDhFaGY5eUpvczJnMzRJQTNVSml3N29UL2ovLytzSi8zWDQ2SUpYQlFCWk04azcyWHdTZndRNytIWU1pMFVJZ3lBQWcyQUVBT3RKaTNYNC8zWDhBL2VEZlF3QVZuVUg2Tmh4QXdEckVvTjlEQUoxQitpcmNBTUE2d1hvMFZjRkFJWEFXVmwwRHl2R21RUEhFOU9Ed0FHRDBnRHJCRFBBTTlLTFRRaUpBWWxSQkY5ZVc4bkRWWXZzZ2V3RUFRQUFVNHRkREZaWGkzMElnMmNJQUkyRi9QNy8vMURIQjlpbFJRRC9NK2dmL3YvL2lVWDhpd09EZUFnRFdWbDFJNHNBZ0hnWEFIVUlpMGdNaWtrVjZ3T0tTQlgyd1FGMUM0dkk2TFQzLy8rTE1Pc0wvM1g4NkxsV0JRQlppL0JxQVA5ekJPak85di8vaTloTE85NVpXUStQZ0FBQUFJWGJmUVlEM25rQ005c3I4NE45RUFPSmRRaDhLWXRGREdvQS8zQUk2Si8yLy8rTDhJWDJXVmwwVm4wS0EzVUlnLzRCZkV6ckNEdDFDSDREaTNVSWkwWDhBOWc3ZFFoMUJJa2Y2elNCL3Y4QUFBQi9CWXRIQk9zVWpVWUJVT2dYMEFNQWhjQlppVWNNZEJhSmR3UldVMUNKQitnb1VBVUFpd2VEeEF6R0JBWUFYMTVieWNPTFJDUUlpd0NEZUFnRFZvdDBKQWgxSTRzSWdIa1hBRk4xQ0l0QkRJcFlGZXNEaWxrVjZOLzIvLytENHdFREdJdkRXK3NTLzNZRVVPZ0wvZi8vVU9qWFZRVUFnOFFNZzJZRUFJa0dYc05WaSt4UlUxYUw4USsyUmhjejJ5dkRWdytFOWdBQUFFaDBTRWgwSUVoMEMvOTJHUDkxQ1A5V0VPdC9pMFVJTzhNUGhJOEFBQUNJR09tSUFBQUFpM1VJVnJuWWdVWUE2QjhSQkFDRCtQOTFBalBBTy9NUGhMNEFBQUNJSEREcHRnQUFBSXZPNkgvMi8vODVIYkJ6UmdCMVdEbGVESFZUT1RWb3RFWUFpMzBJZFFRNyszVXdVNDFGLzFEL2Roai9GUkNoUlFBN3czUWFPL3VKSFdpMFJnQjBEVmYvZGhqb0ZtNERBRmxaNjJwSTYyYzcrM1FLaUIrSkhXaTBSZ0RyQm9rMWFMUkdBRFBBNjArTGZRZzcrNHRHREhSRk84TjFCSWdmNitxTFRnZzcrWFEyUGFDR0FRQnlHbEJSVitqYlRnVUFpMFlNZzhRTWlCd0hpMFlNNnhtSUIwZEJpZ0U2dzNYMmlCL3I3ZjkxQ0l0T0RPam8vdi8vWDE1YnljSUVBRldMN0lQc0RGTldWNHY1TTlzNFh3R0pmZmlKWGZ3UGh0Z0FBQUNKWGZTTGR3UURkZlNBUGdKMUlHb0JVNHZQNkNLQ0FBQ0Z3SXROQ0lrRW1RK0ZvUUFBQUlQSS8rbXRBQUFBaTBVSWd5U1lBSUIrQVFCMEhXYUxkZ0s0L3dBQUFHWTc4SElERDdmR2kwMzhqVVFCQVlsRi9PdHZnRDRCaTg5MUVHb0FVK2pUZ1FBQWkvaUYvM1M1NnlSVDZIQWNCQUNFd0hST2kwWUlnM2dNQUhWalpvdElDbVk3VGdKMVdZdDRCSVgvZEUrTFJRaUxUZmhRVTFlSlBKam9zWUFBQUlYQUQ0UjYvLy8vZy9nRWRCTnFBSXZQNkF2Ky8vK0xUZnlOUkFFQmlVWDhpMzM0RDdaSEFZTkY5QkJETzlnUGpDdi8vLytMUmZ4Zlhsdkp3Z1FBaTMzNGhjQVB0MDRDaTFYOGpVd0tBWWxOL0hUUWkvRHJGdyszUmdxTFRnUXBSZnhxQU9pNS9mLy9BVVg4ZzhZTWd6NEFkZVRycmxXTDdJdEZETUhnQkFOQkJJdE5FSVhKVm5RUGkzVUlWdWlQL2YvL2pVUXdBZXRWVTFlTGVBU0xRQWlGd0hRemkvQ0xCb1hBZEN1TFhRanJCb29QaUF0RFJ6djRjdmFMVGdSVDZGMzkvLzhEMkErM1JncUR4Z3dEK0lzR2hjQjE0dXNKaTEwSTZ3U0lBME5IaWdlRXdIWDJpQU5malVNQlcxNWR3Z3dBVlkxc0pKQ0I3THdBQUFDTFJYaUQrUDlUVmxlTDJYVVhqVVcwVU9ndC92Ly9pL2lELy85MUhUUEE2ZFlDQUFBUHRrc0JoY21KUlhoK0NJdDFmSTE5dFBPbGkzMTRPejEwVUVZQWRnNW8yS1ZGQUdvQWFBRDZSUURyWDRzTm5LdEdBRHY1ZG5PTHg4SG9EbWIzeC84L2RBRkF3ZUFPaS9DaG1LdEdBSVhBZEJsUTZBekNBd0NCUFp5clJnQUFBRUFBV1hZRy93MmdxMFlBVnVnMnpBTUFoY0JabzVpclJnQjFIU0VGbkt0R0FHallwVVVBVUdpVXZrVUFpOHZvUnBjRUFPay9BZ0FBZ2Y0QUFFQUFpODUyRGY4Rm9LdEdBT3NGb1ppclJnQXo5b2xGZUlsRllJazFtS3RHQUlrMW5LdEdBSXBEQVlUQWlVMVl4MFZzQVFBQUFIVUxpVFg0cEVZQTZXc0JBQUFyejRUQWlVMWNpWFY4RDRZeUFRQUFpWFZvaTNzRUEzMW9nSDhCQUhSQWkwVzBVYVA0cEVZQWpVVUVVSTFGV0ZDTlJXQlFqVVY0VUkxRlZGQldpOHZvdmtvQUFJTmxYQUNGd0lsRXRRUVBoZE1BQUFDTFJWU0pSV3pwTVFFQUFJQS9BblVOeDBTMUJOaWxSUURwdGdBQUFNSG1Bb3RFTmJTRndJbEZaSFUzLzNWOGk4dm91UmtFQUlUQWRRV0xSd1RyZUl0RmVHb0EvM1Y4aTh0UWlVUTFCT2pRL2YvL2hjQ0pSWGgxZW9ObGJBRHAyZ0FBQUkxTnRGSC9kWHlMeTFEbzdYMEFBSVBvQTNSR1NIWGdpZ004QjNjS1BBRnlCb045YUJCMENEd1lkeDg4RUhJYmkwMWtpa0VYaE1CMUJvdEJESXBBRnp3QmRRcTQyS1ZGQU9zS2kwMWthZ0hvbGZMLy80bEVOUVRyRjR0OWVJdE5aRmVKZkRVRTZBTDcvLytOUkFjQmlVVjRpM1Y4RDdaREFZTkZhQkJHTy9DSmRYeDlDSXROWE9uUi92Ly9NOGs0U3dGMklvdkJ3ZUFDaTFRRkJJbVFxS1JHQUl0VUJiU0prUGlrUmdBUHRrTUJRVHZJZk40UHRnTnJ3QTRQdm9nbFVVWUFEN1pEQVR2QmZSQ05QSVdvcEVZQUs4aTQyS1ZGQVBPcmkzVmdoZlowTUtHWXEwWUFoY0IwR1ZEbzM3OERBSUU5bkt0R0FBQUFRQUJaZGdiL0RhQ3JSZ0NMUlZpSk5aaXJSZ0Nqbkt0R0FJRTluS3RHQUFBQVFBQjJJbWpuTFVJQWFCQW5BQUJxRGY4MVZISkdBUDhWdktSRkFJWEFENVhBb3FKelJnQ0xSV3hmWGx1RHhYREp3Z2dBVll2c2dleVFCQUFBaTBVUWhjQ0pUYVIxQTQxRkVJTWdBSVhKVTRsRnhLRUlVVVlBVmxlSlJlQ0pUZndQaEVBQ0FBQ0xkUXlEUGZDQlJnQUF1OWlsUlFDLzRIeEdBSFFNYWdDNTJJRkdBT2d5Q2dRQS94VnNva1VBaXhVSVVVWUFpOGdyRGF5QlJnQTdpckFBQUFCMkxUUEFVRkJRVUkyRmNQLy8vMUQvRmRTa1JRQ0Z3SFFMYWdGcS8rZ2FzUUFBV1ZuL0ZXeWlSUUNqcklGR0FJdE40SUM1eEFBQUFBQjFMb0M1eGdBQUFBQjFKWXNWb0lGR0FJUDYvMzRhaTBrb084cCtESXRONE1hQnhBQUFBQUhyQjR0VjRFR0pTaWlMVGVDTEVZdEpCSVA1LzN3ZWZ3V0QrdjkyRnprTm5JRkdBSDhtZkFnNUZaaUJSZ0J6SEwvZ2ZFWUFpMDNnaTBra2cvbi9maVVyQmFpQlJnQTd3WEliNndXLzRIeEdBR29CYWdyckIyb0JhQzhCQUlEb2VyQUFBRmxaaTBYZ2dMak9BQUFBQUhYbWkwWDhveHgvUmdDTFJlQ0F1TThBQUFBQWREaWhrS3RHQUl0Ti9Ja01oVkNsUmdEL0ZXeWlSUUNMRFpDclJnQ0pCSTFvbmtZQVFZSDVrQUVBQUlrTmtLdEdBSHdIZ3lXUXEwWUFBSXRGL0lvQVBBRjBHenhwZEJlTFRmeHFBR3IvNkU3Ny8vK0w4SVArQVErRitqSUFBSXRWL0lvQ1BBb1BnaXdCQUFBOElRK0hKQUVBQUlNRm1JRkdBQUdMK292UGd4V2NnVVlBQU9neE53QUFhZ05iTzhOMWZZdFBGSUE1YkhVZmkwa1VqVVhzVVA5MURHb0M2QWIrLy8rTFR4U0xWZXc3MFl2d2RPUHJFbzFGN0ZEL2RReFQ2T3Y5Ly8rTFZleUw4RHZYRDRSMU1nQUFnMzBJQXcrRWhqSUFBSVArQVErRmN6SUFBSVhTZEE2TFFoeUxUZnc3UVJ6cGlnQUFBSXRGL0l0QUdJQTRDWWxGL0ErRlBqSUFBT2t6TWdBQWkzOFlnRDhKaVgzOGRCTTVYUWdQaFNVeUFBQXp3RUJmWGx2Sndnd0FpMDhVZ0Rsc2RSK0xTUlNOUmV4US8zVU1hZ0xvYS8zLy80dFBGSXRWN0R2UmkvQjA0K3NTalVYc1VQOTFERlBvVVAzLy80dFY3SXZ3T1YwSUQ0VDBNUUFBZy80QkQ0WGhNUUFBaGRKMEZJdENIRHRISEErRjJERUFBSWxWL09tNE1RQUFpMGNZNmEweEFBQVB0c0NEK0dvUGoxZ0VBQUFQaERFeUFBQ0QrQWgwTDRQNFh3K0U1Z0FBQUlQNFlIUklnL2htRDRUWk1RQUFnL2huRDRTYk1RQUFENDVRQkFBQWcvaHBENDlIQkFBQWkwWDhpM2dNTTl1RC93UVBoUTBCQUFCVC96V29wRVlBNkZWeUFRQlpXWWxGdE9tYkFRQUFnd1dZZ1VZQUFZdE4vSU1WbklGR0FBQ0xRaGlGd0hRUWlVWGNNOENEZVF3QkQ1VEFpL2pyTVdvQjZHZ3JBZ0NGd0lsRjNBK0V1ekVBQUl0TjRJTzVsQUFBQUFCMEVZdElCT2l5S3dJQWhjQjBCVFAvUitzR00vK0YvM1FVaTAzZ2pZR1VBQUFBaXhDRElBQ0prWmdBQUFDTFRkem9FelVBQUlYL2kvQVBoRVl3QUFDTFRlQ05nWmdBQUFDTEVJbVJsQUFBQU9rdE1BQUFnd1dZZ1VZQUFZTVZuSUZHQUFDTFFoaUZ3SWxGM0hVWWkwMzhhZ0hvM0NvQ0FJWEFpVVhjRDRRdk1RQUFpMVg4ZzMwSUE0dE40SW1CbkFBQUFJdE4zSFFQaTBFRWkxSWNPMUFjRDRSV01BQUFpMEVFaTAzRWlRSHBKLzcvLzRQL0FYZGxEN1pBQVN2RGRGcElkRGxvbE5CRkFQODFxS1JHQU9qVDh3TUFoY0JaV1hVRWFnWHJPbFAvTmFpa1JnRG9IbkVCQUZsWk04azd3dytWd1lsRnRJUEJBNHY1NnlGVGFnRnFBV29CL3pXb3BFWUE2Rkx1Ly8rRHhCU0Z3SFRJYWdKZjYzNXFBbCtEL3dOMU1JdEYvSUI0QVFGM0NjZEZ2QUVBQUFEckYvODFyS1JHQU9pcE93RUFPOE5aaVVXOEQ0UXJNQUFBb2JDa1JnRHJNNFAvQkhWQmkwWDhnSGdCQW5jSngwVzhBUUFBQU9zWC96V3dwRVlBNkhRN0FRQTd3MW1KUmJ3UGhBUXdBQUNodEtSR0FJQTRNWFVLZ0hnQkFNWkZ3QUYwQk1aRndBQ0xSZUF6MG9sVjdJdElESXRZQ0lsTm5JdElFSWxOMkl0SUZJbE55SXRJR01kQUNBRUFBQUNKVUF5SlRjeUxTQnlMeDBoSXhrVVRBSWxOOEErRUpBRUFBRWdQaFB3QUFBQklENFNxQUFBQVNIUmFTSFFmU0ErRlRnRUFBSXROL0kxRjdGQ05SUk5RLzNVTTZGWGsvLy9wTkFFQUFHaVEwRVVBL3pXd3BFWUE2SXJ5QXdCWldZdE4vSVhBalVYc1VJMUZFMUQvZFF4MEN1aUtiQUFBNlFZQkFBRG9tVzRBQU9uOEFBQUFvYXlrUmdDQU9BQjBPMmlNMEVVQVVPalR1QU1BaS9pRi8xbFpkQ2ovTmJDa1JnQ0xUZnhYalVYc1VJMUZFMUQvZFF6b1Mya0JBRmVMOE9neHR3TUFXZW01QUFBQU0vWkc2YkVBQUFDTlJkSlEveldvcEVZQTZHZHZBUUNMK0lYL1dWbDA0ZjgxcktSR0FJdE4vRmYvZGJTTlJlei9kY0QvZGJ4UWpVVVRVUDkxRE9qSWF3RUFnSDNTQUl2d2RHOVgveFZFb0VVQTYyYi9OYWlrUmdDTFRmei9kY0NOUmV6L2RieFFqVVVUVVA5MURPZ0FjQUFBNjBPTFJmeUFlQUVBZGh5TDhHb0FpODdvMEZ3QUFJQStDSFVHaThnTHluUUl4a1c0QU9zR004REdSYmdCLzNXNGkwMzhVbENOUmV4UWpVVVRVUDkxRE9peDQvLy9pL0NGOW90RjRJdE5uSWxJREl0TjJJbElFSXROeUlsSUZJdE56SWxJR0l0TjhJbFlDSWxJSEErRW9pMEFBSVArQncrRW1TMEFBSVArQ0ErRWtDMEFBSUI5RXdBUGhYVXRBQUNEZlFnRGkwWHNENFFTL2YvL2hjQVBoRmN0QUFDTFNCeUxWZnc3U2h3UGhmdjgvLy9wU1MwQUFJUG9hdytFTmk0QUFFZ1BoT1VzQUFCSUQ0VDhMUUFBZytnaEQ0VGxLd0FBZytoSUQ0UzZMUUFBZ3dXWWdVWUFBYUg0cEVZQWl6VUlVVVlBZ3hXY2dVWUFBSWxGK0lvQ0Q3YklTWUg1MWdBQUFBK0hsU3NBQUErMmljMWtRQUQvSkkxVllrQUFpMDM4NkNuZi8vL3BMQnNBQUl0Ri9JQjRBUUdMRGF5a1JnQjJab3RBQklCNEVRQVBoVDByQUFDTFFCeUZ3SFFTLzNBRS96Q0xUZmpvcmVqLy8rbjNHZ0FBb2Z5a1JnQ0Z3SFEzZ0RrQWRUS0tVQmVFMG5VR2kxQU1pbElYRDdiU1NuUVJTa3AxRzR0TitPaVdCd1FBNmNVYUFBQ0xUZmhRNk03bC8vL3B0eG9BQUdvQmFnQnEvMUdMVGZqb1NlUC8vK21qR2dBQWkwWDhpMEFFZzNnY0FIUVVnSGdSQUhVT00vWkd4MFh3QVFBQUFEUC82MUNoL0tSR0FJTmw4QUNGd0lzVnJLUkdBSFFiZ0RvQWRSYUtTQmVFeVhVR2kwZ01pa2tYZ1BrQmRRU0wrT3NDTS8rRi8yb0JkQW1MeitpWDYvLy82dzlxQVdvQWFnRlM2RWZxLy8rRHhCU0w4SXROK0dvQjZIcnIvLytMMktHd3BFWUFpZ0NFd0ErRUh3RUFBQSsrd0ZEbzh2TURBRkJvc001RkFPZzNTQVVBZzhRTWhjQVBoQUFCQUFBejJ6dnpENFFjS2dBQU9WM3dkQTJMUmZ5TFFBU0xRQnpmS09zYU8vdDBDbE9MeitpazdmLy82d3ovTmF5a1JnRG9QTnovLzFtTFRmamRYZVJxQWVocTZQLy9nRGdBZENtTFRmaU5SYXhRYWdIb1Yrai8vMURva1djREFJWEFXVmwxSjJvQlUyci9hTmlsUlFEcDJQNy8vNDFGa0ZEL0ZmaWdSUUNOUmF4UWpVV1FVUDhWOUtCRkFLR3dwRVlBRDc0QVVPaEY4d01BZy9oRTNVWGtXWFFuZy9oSWRCcUQrRTEwRFlQNFUzVWUzQTJvemtVQTZ4YmNEYURPUlFEckR0d05tTTVGQU9zRzNBMlF6a1VBaTNXc2kzMnc2SkJRQlFCcUFWTUQ4R3IvVTQxRnJGQ05oWEQ3Ly84VCtsQ0pkYXlKZmJEbzFtVURBSVBFRE9uV0JRQUFnLzRDZEU2RCt3SjBTWU45OEFCMEVJdEYvSXRBQkl0QUhJc3dpM2dFNngrRi8zUUxhZ0NMeitpZTVmLy82d3ovTmF5a1JnRG9GT2ovLzFtTDhJdjZpMDM0YWdEb2d1WC8vd1BHRTlkUzZkb0dBQUNEZmZBQWRBMkxSZnlMUUFTTFFCemZLT3NiaGY5MEMyb0FpOC9vV2V6Ly8rc00veldzcEVZQTZQSGEvLzlaaTAzNDNWM2thZ0RvUHV6Ly85eEY1RkZSaTAzNDNSd2s2TmVRQUFEcFZoZ0FBS0d3cEVZQWlnQ0V3QStFeWdBQUFBKyt3RkRvSWZJREFGQm9zTTVGQU9obVJnVUFnOFFNaGNBUGhLc0FBQUNoL0tSR0FJWEFpeldzcEVZQWRCZUFQZ0IxRW9wSUY0VEpkUWFMU0F5S1NSZUErUUYwQWpQQWhjQjBDMm9CaThqb3ArYi8vNHZ3aTAzNGpVWFJVR29CNkpmbS8vOVFWdWc3WlFNQWc4UU1nSDNSQUl2d2kvcDBER29CYWdCcS8xUHBFLzMvLzZHd3BFWUFENzRBVU9pWThRTUFnL2hFV1hRWmcvaElkQXVEK0UxMUlXb0FhanpyRUdvQWFCQU9BQURyQjJvQWFJQlJBUUJYVnVoTFRnVUFpL0NMK2xkVzZYbjgvLytMUmZ5TFFBU0RlQndBZEJTQWVCRUFkUTR6OWtiSFJmQUJBQUFBTS8vclVLSDhwRVlBZzJYd0FJWEFpeFdzcEVZQWRCdUFPZ0IxRm9wSUY0VEpkUWFMU0F5S1NSZUErUUYxQkl2NDZ3SXovNFgvYWdGMENZdlA2SEhvLy8vckQyb0JhZ0JxQVZMb0llZi8vNFBFRkl2d2kxMzRhZ0dMeStoUzZQLy9nLzRDZEV5RCtBSjBSNE45OEFCMEVJdEYvSXRBQkl0QUhJc3dpM2dFNngrRi8zUUxhZ0NMeitpbTQvLy82d3ovTmF5a1JnRG9IT2IvLzFtTDhJdjZhZ0NMeStpTDQvLy9LOFliMStrT0FRQUFNL1k1ZGZCMERZdEYvSXRBQkl0QUhOOG82eG83L25RS1ZvdlA2R1BxLy8vckRQODFyS1JHQU9qNzJQLy9XVmJkWGVTTHkraEs2di8vM0dYazZSSUJBQUNMUmZ5TFFBU0RlQndBZEJTQWVCRUFkUTR6OWtiSFJmQUJBQUFBTS8vclVLSDhwRVlBZzJYd0FJWEFpeFdzcEVZQWRCdUFPZ0IxRm9wSUY0VEpkUWFMU0F5S1NSZUErUUYxQkl2NDZ3SXovNFgvYWdGMENZdlA2R1BuLy8vckQyb0JhZ0JxQVZMb0UrYi8vNFBFRkl2d2kxMzRhZ0dMeStoRTUvLy9nLzRDZEZXRCtBSjBVSU45OEFCMEVJdEYvSXRBQkl0QUhJc3dpM2dFNngrRi8zUUxhZ0NMeitpWTR2Ly82d3ovTmF5a1JnRG9EdVgvLzFtTDhJdjZhZ0NMeStoOTR2Ly9WMVpTVU9nbFRBVUFVbENMeSttWSt2Ly9NL1k1ZGZCMERZdEYvSXRBQkl0QUhOOG82eG83L25RS1ZvdlA2RXpwLy8vckRQODFyS1JHQU9qazEvLy9XVmJkWGVTTHkrZ3o2Zi8vM0Uza1VWR0x5K254L1AvL2kwWDhpMEFFZzNnY0FIUVdnSGdSQUhVUU0vWkdNLy9IUmZBQkFBQUFNOXZyVWFIOHBFWUFnMlh3QUlYQWl4V3NwRVlBZEJ1QU9nQjFGb3BJRjRUSmRRYUxTQXlLU1JlQStRRjFCSXY0NndJei96UGJPL3RxQVhRSmk4L29ST2IvLytzT2FnRlRhZ0ZTNlBYay8vK0R4QlNMOEl0TitHb0I2Q2ptLy8rRC9nSjBZSVA0QW5SYiINCglTdGF0aWMgMiA9ICJPVjN3ZEJDTFJmeUxRQVNMUUJ5TE1JdDRCT3NlTy90MENsT0x6K2grNGYvLzZ3ei9OYXlrUmdEbzlPUC8vMW1MOEl2NmkwMzRpOFlMeDNVTGFnRlRhdjlUNmRuNS8vOVQ2RkxoLy85WFZsSlE2RHBMQlFEcHh2di8vemxkOEhRTmkwWDhpMEFFaTBBYzN5anJHanY3ZEFwVGk4L29KK2ovLytzTS96V3NwRVlBNkwvVy8vOVppMDM0M1YzazNRVjR6VVVBM1VYazJ1bmY0UGJFUkh1ZFUrajc1Ly8vM0hYazZiajcvLytMVGZ4cUF1aW1WQUFBaS9DRjluMEVNL2JyRUl0Ti9Hb0I2T3lKQUFBNzhINENpL0JxQVdvQVZ1azBBUUFBaTAzOGFnTG9lRlFBQUl2d2hmWjlBalAyaTAzOGFnSG93SWtBQUR2d2RnS0w4R29CYWdBcnhnTUZyS1JHQUZicG13QUFBSXRGL0lCNEFRUnlJSXRBQkl0QU5JQTRBSFFWaTAzOGFnUG9NRlFBQURQYmkvaERPL3Q5Q3V0Tk05dS8vLy8vZjBPTFRmeHFBdWdUVkFBQWkvQ2h1S1JHQUErK0FGRG9WdTBEQUlQNFRGbDFFanZ6ZkNHTHd5dkhBL0E3ODMwS2pYdzMvenZ6ZlFLTDg0dE4vRlBvTm9rQUFEdkdjd3hUYWdCcS8yb0E2WXo0Ly8rTHl5dk9BOEU3K0hZQ2kvaWhyS1JHQUZOcUFGZU5SQWIvVU9sdCtQLy9pMDM4YWdMb28xTUFBSXZ3aGZaOUFqUDJpMDM4YWdIbzY0Z0FBRHZ3ZGdLTDhHb0JLOFpxQUZDaHJLUkdBQVB3VnVrMytQLy9pMDM4YWdMb2JWTUFBSXZ3aGZaOUFqUDJpMDM4YWdIb3RZZ0FBRHZ3ZGdLTDhHb0JhZ0FyeGxEL05heWtSZ0RwQS9qLy80dDkrRFBiUTFPTHoraFo0Zi8vaS9BN05heWtSZ0IxRVlwSEY0VEFkUWFMUnd5S1FCYzhBWFEyaTAzOFV6UDJWbFBvWjRnQUFGQldpOC9vRmR2Ly96dkRENFVySkFBQVU0dlA2QmpoLy8vL05heWtSZ0NMOEZib0tUMEZBRmxab2JDa1JnQ0tBSVRBZENNUHZzQlE2Q1BzQXdDRCtGUlpkUlNoc0tSR0FJQjRBUUIxQ1Zib1JuQUJBRm5yRjR0Ri9JQTRNVloxQ1A4VmpLUkZBT3NHL3hWb3BFVUFhZ0NMeitpdmh3QUE2UUVTQUFDTERmeWtSZ0NGeVhRZmdIa1hBSFVJaTBFTWlrQVY2d09LUVJXb0FYUUs2TS9mLy8rTEFFRHJDb3ROL0dvQjZMaUhBQUJxQUZEcHd2Yi8vNHM5dEtSR0FJb0hnMDNZLzRUQWlYM29kQzhQdnNCUTZJM3JBd0JRYUl6T1JRRG8wajhGQUlQRURJWEFkQlNOUndHQU9BQjBERkRvV3RYLy8xbUpSZkRyQjhkRjhBRUFBQUNEZmZBQUQ0NGVBUUFBb2JDa1JnQ0FPQUIxS0lObDJBQzROS2RGQUlzTmVIdEdBRFAyUmxacUFHci9VT2p0MmYvL2kwWFlpMDM0NlIwVEFBQ0xEYXlrUmdDSlRjaUxUZnhxQklsRnpPaTdVUUFBaS9pRi8zMEVNLytGLzNRT2kwMzhhZ0hvLzRZQUFJdlk2d016MjBNNyt3K05zUUFBQUl0RjZJb0FQREYwWHcrK3dGRG8xK29EQUlQNFVsbDBVSXROL0dvQzZNNkdBQUNMMkl0RnlEUDJSZ1BIaXcwSVVVWUFpb25KQUFBQWhNbi9kY3hRZFFmb1IxZ0RBT3NSZ1BrQ2RRZm9HMWNEQU9zRjZFRStCUUNGd0ZsWmRGTTdkZkIwUGtZRHcrdkVoZjkwRUN2ZkExM0lpZ09KWGFDSVJkUEdBd0QvZGZBUHRvYkpBQUFBVVA5MXpQOTF5T2pIV1FNQWc4UVFoZjkwQ0l0Tm9JcFYwNGdSaGNCMERDdEZ5SWxGMkErSjhQNy8vN2hNdjBVQTZldisvLytMVGZ6by9aUUJBT2srRUFBQS96VzBwRVlBaTAzOC96V3dwRVlBL3pXc3BFWUE2UG5BQVFEcEh4QUFBUDgxdEtSR0FJdE4vUDgxc0tSR0FQODFyS1JHQVA4MXFLUkdBT2d5WHdJQTZmb1BBQUQvTmFpa1JnQ0xUZnpvdTFzQ0FPbm5Ed0FBL3pXc3BFWUFpMDM4L3pXb3BFWUE2TXRPQWdEcHpnOEFBSXQxL0dvQS96WElwRVlBaTg1cUIraEtVQUFBVUdvR2k4N29RRkFBQUZCcUJZdk82RFpRQUFCUWFnU0x6dWdzVUFBQVVHb0RpODdvSWxBQUFGQnFBb3ZPNkJoUUFBQlFpODdvT2RRQkFPbDdEd0FBL3pYQXBFWUFpM1g4YWdXTHp1ajVUd0FBVUdvRWk4N283MDhBQUZCcUE0dk82T1ZQQUFCUWFnS0x6dWpiVHdBQVVJdk82SjNLQVFEcFBnOEFBUDgxdEtSR0FJdE4vR29DNkw1UEFBQ0xUZnhRYWdIb3MwOEFBSXROL0ZEbzQ5a0JBT2tWRHdBQWFnRC90cXdBQUFBOFFnK1V3RkQvTmFpa1JnRG9VZ2NCQUlQRUVPa2hId0FBTThDRHZxd0FBQUFEYWdBUGxNQ05SQUFCVU9zRWFnQnFBbW9BNjlBendGQlE2OG4vTmFpa1JnRG9JZm9BQUZucHdBNEFBRk5UL3pYQXBFWUEvelc4cEVZQS96VzRwRVlBL3pXMHBFWUEveld3cEVZQS96V3NwRVlBL3pXb3BFWUFVT2hKK2dBQWc4UW82WVlPQUFEL05ieWtSZ0QvTmJTa1JnRC9OY0NrUmdEL05iaWtSZ0JUVSt2RVUxUC9OYlNrUmdEL05iQ2tSZ0JUVS84MXJLUkdBUDgxcUtSR0FGUHJ0NHROL0dvRTZORk9BQUNMVGZ4"
	Static 10 = ""
	Static 11 = ""
	Static 12 = "RjNEbHdDSFVKaXdqb3NwWC8vK3NKLzNYSTZPWDBCQUJaaTAzZ2pYUUlBVFBKTy9tSlJmUjFlSXQ5b0R2NWRCYzVUZngxRW90RitJTjRHRGgxQ2NkRm5BRUFBQURyTkl0RitJTjRHQXgxS1RsTi9IUWtpMFhVaTBEOGczZ0lBM1VZaXppS1J4ZUV3SFVHaTBjTWlrQVhQQUYxQllsTm5Pc0NNLzg3K1hRaWFnQ0x6K2dtbHYvL08wWElpVVh3ZFRQL2RlQ0x6LzkxNU9oYlB3QUFoY0IxZll0RkZJc0FLMFhBaTAwWUF3RTc4QStIbFFBQUFJdEZ3QUYxd0lrRDZkb0FBQUE3UmVSMDJXb0JhZ0JPVm1vQWk4L294SS8vLzRYQUQ0U0ZCQUFBYWdHTHorakdsZi8vaTNYMGhmYUpSZkIwRFZiL2RjaFE2QUh1QkFDRHhBeUxSZUJBVUl0RjhQOTE1QVB3VnVqcjdRUUFnOFFNYWdDTHoraUZQQUFBZzMyY0FBK0ZSZ1VBQUlORitCQ0xSZmlMUUF6L1RmeUpRd3lMUmZ5TGhJVjA4Ly8vaXdDSkErbHRBUUFBZ2Y0QkVBQUFjeCtCZmFoQW5BQUFjeGFMeG9QQUE0UGcvT2cwK1FRQUFYV29pOFNKQStzcmdYM295QUFBQUErRTBRTUFBRmJvVW0wREFJWEFXWXRONkltRWpYVDcvLytKQXcrRXRnTUFBUDlGNkRQMk9YWDBkQkQvZGZUL2Rjai9NK2hNN1FRQWc4UU1pMFhnUUZDTEF3TkY5UDkxNUZEb051MEVBSXRGM0lQRUREbHdDSFFYaTBYc09YQUlkQS9IUmVBRUFBQUFpWE1FNlZ2NS8vK0pkZURwVS9uLy80TitDQU4xS0l0MTdJc082RUFWQUFBendFQ0pRd2lMRGxEb241VC8vNW1KQTRsVEJPbWxBQUFBT1gzWWRRN0hBOWlsUlFDSmV3anBrZ0FBQURQMk04QkdPWFhZRDVUQVVQOTE3T2pla3YvL2czc0lNVmxaZFNPRjBud1pmd1NGd0hJVGhkSi9EM3dGZy9qL2R3aURZd1FBOTlEcktmZlE5OUxySUlYU2ZCbC9CejBBQVFBQWNoQ0YwbjhNZkFXRCtQOTNCUSsyQU9zQ004Q1ppVk1FaVFPSmN3aURmY3dBZENXTGRjeFRpODdvTzVILy80cEdGNFRBZFFhTFJneUtRQmM4QW5RSmlUUEhRd2dEQUFBQWczc01BSFJNVStpV2t2Ly9VRlBvM1piLy80dExESVBFRElONUNCbUw4SFJBTThDRGVRZ2FENVRBTy9CMVBZbE4rSXRKRElYSmRBYURlUWdaZGVPTHhwbkhRd2dCQUFBQWlRT0pVd1NKU3d6cnJvdEYvUDlGL0ltY2hYVHovLy9yQ29YMmRRYUxRd3lKUmZpRFJmZ1FpMDJzNlN2ci8vK0xBLzl3R0ZmcEZnSUFBUDl6Qkl0Tm9QOXpET2dpUEFBQTZSb0RBQUJxQVZHTFRhQnEvLzh6NkRpTi8vL3BCZ01BQVA4MjZlWUJBQUNOUmFSUWpVVzhVRmJvOGdNQUFJUEVET25mQVFBQWpVV2tVSTFGdkZCVzZOd0RBQUNEeEF6cDNRQUFBUDkxOE9oYThRUUFXWXROOERzTm1LdEdBSFVlZy9oQWNobFFVWXZQNkxRN0FBQ0RKWmlyUmdBQWd5V2NxMFlBQU9zTmFnRnFBRkJSaTgvb3dZei8vNDFGcEZDTlJieFFWdWlIQXdBQWc4UU02WDRDQUFDTFJmVC9NT2xiQVFBQWpVV2tVSTFGdkZCVzZHY0RBQUNEeEF5RFpiZ0E2Vm9DQUFDS0NZRDVBdytFVHdJQUFJTjkvQUYxVTR1RmRQUC8velAvT1gyZ2kvQjBEb3ROb0ZEb280Ly8vK2tzQWdBQWdQa1NENFRoQVFBQWdQbHBENFRZQVFBQWkxMFFpMGdJTzgrTEU0bFZ1SFIzZy9rQmRGT0QrUUowTGcrTyt3RUFBSVA1Qkg1ZmkwMmdoY2tQaE9zQkFBQ0RmYmdBRDRUaEFRQUFhZ0ZxQUdyLy8zVzQ2Y1ArLy8vZEFLRUlVVVlBVVZIZEhDU0R3SFJRYUFBQkFBQlM2R29hQUFDRHhCVHJGRkwvY0FUL01PaGhodi8vVU9neDhBUUFnOFFRUUFFRDZaY0JBQUNMWFJDRCtRTjFGWXNJYWdIb3hwSC8vNGxGOElzTzZNNlEvLy9yRElzQVVJbEY4T2orN3dRQVdZdE5ySXRKQkl2NGkwVUl3ZUFFWm90RUNBSkhaajMvQUlsOTFITUh1UDhBQUFEckF3KzN3SXROSUkxRUNBRTcrQStHM2dBQUFJdE5HSXN4Sy9BRDkxYUpkU0RvajJrREFJWEFXWWxGRUhVamFOaWxSUUJxQUl0TnJHaVV2a1VBNktVMEJBQ0xSUXlEWmJnQWd5QUE2ZnNBQUFDQi9nQUFRQUIyQnY4Rm9LdEdBSXQxRklzR2l6c3IrSFFOVjFEL2RSRG9aK2tFQUlQRURQOTExSXRGRVA5MThBUEhVSWtEaVVXNDZFN3BCQUQvTnVqZVhnTUFpMFVZZzhRUWdUZ0FBRUFBZGdiL0RhQ3JSZ0NMUlJpTERnTUlNOEE1UlFpSlJSUitKNHRWSEkwRWdvczRpeFk3K25JTk8vbHpDWXQ5RUN2NkF6aUpPSXRGRkVBN1JRaUpSUlI4Mll0RkVJdE5HSXQ5MUlrR2kwVWdpUUhyRklzRE8wWHdkQTFYLzNYd1VPakk4QVFBZzhRTUFUdnJRb3RJQ0N2UGRFbEpkRDFKZEIxSmRCRkpkVWlMU0FRN3ozUTJpd0VMUVFUcksvOHc2QkNVLy8vckxkMEZlTTFGQU4wQTJ1bmY0UGJFUkhvbHgwVzQyS1ZGQUl0MTZPc3dpd2dMU0FSMUV1dnIvekRvaEpQLy8xbUpSUmc1ZlJoMDI4ZEZ1RXkvUlFEcjJmKzB0WEQ3Ly85TzZQSmRBd0JaaGZaMTdvdEZ1STJsYVBMLy8xOWVXOG5DSEFEdWdFQUFLb0ZBQURPQlFBQThnVUFBUllGQUFFNkJRQUJYZ1VBQVlJRkFBR21CUUFCeWdVQUFlNEZBQUlTQlFBQTRna0FBT0lKQUFFT0NRQUJPZ2tBQVc0SkFBR2lDUUFCMWdrQUE5NEpBQUl1Q1FBQ1Zna0FBTG9aQUFGdUdRQUJtaGtBQW9JWkFBTStHUUFEK2hrQUFNNGRBQUhXSFFBQldpL0dMVENRSXh3SFlwVVVBb1FoUlJnQlhCWlFBQUFDTE9Hb0FVWWt3aTA0RS8wWW9hZ0xvdHAzLy8vOU9LSXNOQ0ZGR0FJbTVsQUFBQUY5ZXdnUUFWWXZzVTFhTGRRaFhNLzh6MjBjNVhoeCtFNHRHRklzTW1GZFg2SmFJLy85RE8xNGNmTzB6MnpsZUpINFRpMFlZaXd5WVYxZm9mSWovLzBNN1hpUjg3WXQxRERQL09UNTBWSXRWRURrNmZrS0pmUWlMQmdORkNJTkZDQ0NMV0F5TFNBaUpXUWlMR0lrWmkxZ0VpVmtFaTFnUWlWa01pMWdVaVZrUWlsZ1lpRmtVaWxnWmlGa1Zpa0FhUjRoQkZ6czZmTUgvTnVpTVhBTUFneVlBV1Y5ZVcxM0RvUWhSUmdDTFFCeUZ3RmFMOEhVRnZ0aWxSUUNEZkNRSUFIUU1WdjkwSkF6b2wrb0VBRmxaVnVpLzdBUUFXVjdEZzN3a0JBQjBIdjkwSkFTaENGRkdBUDl3RFA5d0NPakxndi8vVU9pYjdBUUFnOFFRdzJvVVdNT0xSQ1FFaGNCMEZJdE1KQWlBZVFRQUQ1VEJnTUV3aUFqR1FBRUFNOEJBd3crMlVRR0xSQ1FFTzhKOEJqUEFNOUxyZjFOV1Y0djR3ZWNDaTdmNHBFWUFoZlowWG9wZUY0VGJkUWlMUmd5S1FCZnJBb3JEUEFGMVNRKzJBV3ZBRHZhQUpsRkdBSUIxT29NOXNITkdBQUIxQzR2TzZBNlAvLytGd0hRbU96VjRlMFlBZEI2RTIzVUlpMFlNaWtBVjZ3T0tSaFdvQVhVTGFnQ0x6dWpDaS8vLzZ3ei90NmlrUmdEb09JNy8vMWxmWGx2Q0JBQVB0bEVCaTBRa0JEdkNmQWpkQlhqTlJRRHJmMU5XVjR2NHdlY0NpN2Y0cEVZQWhmWjBYb3BlRjRUYmRRaUxSZ3lLUUJmckFvckRQQUYxU1ErMkFXdkFEdmFBSmxGR0FJQjFPb005c0hOR0FBQjFDNHZPNkhpTy8vK0Z3SFFtT3pWNGUwWUFkQjZFMjNVSWkwWU1pa0FWNndPS1JoV29BWFVMYWdDTHp1Z3Rrdi8vNnd6L3Q2aWtSZ0RveFlELy8xbGZYbHZDQkFCVmkreUQ3Q1NMUlFoVFZvdDFERFBiVjRzNGlWMzhPL3NQaEhrQkFBQVB2Z2RRNkFLWUF3Q0QrRlZaZFFmR1JnMEJSK3NEaUY0TmFpQ05SZHhYVU9pbkJnTUFqVVhjYU1UclJRQlE2RlVKQXdDRHhCUTd3M1F2alUzY084SEdSZ3dCZGlDTlNQK0tFWUQ2SUhRRmdQb0pkUkZSalVYY1VPaDJDQU1BV1ZtSVdBSHJCNGdZNndPSVhndzRYZHgxRE1kR0NBSUFBQURwb0FBQUFJMUYzR2pBNjBVQVVPanlrZ01BaGNCWldRK0Vud0FBQUkxRjNHaTg2MFVBVU9qYWtnTUFoY0JaV1ErRWtBQUFBSTFGM0dpMDYwVUFVT2pDa2dNQWhjQlpXUStFZ1FBQUFJMUYzR2lzNjBVQVVPaXFrZ01BaGNCWldYUjJqVVhjYUtUclJRQlE2SmFTQXdDRndGbFpkR3VOUmR4b3NNUkZBRkRvZ3BJREFJWEFXVmwwWUkxRjNHaWM2MFVBVU9odWtnTUFoY0JaV1hSVk9WMzhmMW1KWGdqL1JmeUxUZnlEK1FLTFJRaUxQSWdQak1iKy8vL3JSY2RHQ0FJQUFBRHJQTWRHQ0FFQUFBRHJNOGRHQ0FNQUFBRHJLc2RHQ0FRQUFBRHJJY2RHQ0FVQUFBRHJHTWRHQ0FZQUFBRHJEOGRHQ0FjQUFBRHJCb2hlREloZURWOWVXOG5EVll2c2dldzhBZ0FBaTBVSVUxYUxkUXhYTS8rSmVBakhBTmlsUlFDTEJvdElDQ3ZQYWdHSmZlUmJkRTVKZEVSSmRESkpkQmRRNk5hSi8vODd3MWwxT2xQL051aUhpZi8vV1ZucktZc0lWK2luamYvL084TjFJb3NHaXdoVDZCcUovLy9yRVdvQlYyci9hRURpUlFEcFJ3WUFBSXNBaVVYODZ3T0pmZnd6d0kxOTNLdXJpMFVRYWdKWm1ZdjU5Ly9IUmZBZ0FBQUFoZEowQ0lsTjNPbkJBQUFBaTBVUWkzU0cvSXRHQ0R2REQ0VDhCUUFBTzhFUGhQUUZBQUNEK0FOMUZJc09VK2lWaXYvL2kvaUxCb3RBR0lsRitPc0dpejZEWmZnQWFnVytaUFpGQUZaWGlYMzA2RmFSQXdDRHhBeUZ3SFVXZzhjRlY4ZEY4QkFBQUFEb29vci8vMW1KUmZUcklvTjkrQUIwSEdvRlZ2OTErT2dva1FNQWc4UU1oY0IxQ2lGRitNZEY4QkFBQUFDTlJkUlFqVVgwVU9ncy9mLy9nMzNjQUZsWkQ0UnNCUUFBLzAwUWdIM2dBSFVXZzMzY0IzVUdnRTN4QXVzS2czM2NCblVFZ0UzeEFZdEZFSmtyd3RINGRCUEI0QVNEd0FPRDRQem8wdTBFQUlsbDZPc0VnMlhvQUlObCtBQXoyME01WFJBUGpnUUJBQUNMZmVpTFJReU5OSmlMQm90SUNJUDVBUStFVXdFQUFJUDVBZytFU2dFQUFJUDVBM1VZaXdocUFlaWNpZi8vaVVYTWl3YUxBSXRBR0lsRjBPc0ppd0NEWmRBQWlVWE1pMFVNaTNTWUJJMUZ6RmRRNkhuOC8vK0xSd2lGd0ZsWkQ0UUdBUUFBZy9nQmRHV0QrQVYrSG9QNEIzOFphZ0JxQVZib0pvNy8vOTBYZzhRTWczOElCblZwMlIvclo0Qi9EUUIwSllQNEJYVWdpMFlJZy9nQmRCaUQrQUowRTJvQVZ1aWJqdi8vVU9nVWUvLy9nOFFNNndwcUFGYm9mSWYvLzFsWmczOElCWWtIaVZjRWRDZnJINHRHQ0lQNEFRK0VrQUFBQUlQNEFnK0Vod0FBQUdvQVZ1aGNqdi8vV1ZtSkIrc0MzZGovUmZpRHh4QkRRenRkRUErTS8vNy8vNE45L0FBUGhib0JBQUQyQmVDelJnQUJpejFjb2tVQWRUZUREZUN6UmdBQmFMREFSUUQvMTJqVThrVUFvOUN6UmdELzEyZ2twa1VBbzlTelJnRC8xMmhjOWtVQW85aXpSZ0QvMTZQY3MwWUFpMFVNaXdDRGVBZ0RkUktMQ0dvQjZHS0kvLy9yQ1dvQjZhd0RBQUNMQUdnSEFnQUFVSTJGeFAzLy8xRG9OUUlEQUkyRnhQMy8vMnBjVU9nVzdnUUFpOWlEeEJTRjJ3K0Zqd0FBQUlzMVlLSkZBRFAvT1QzQVpFWUFmak9MQkwzUXMwWUFoY0IwRlkyTnhQMy8vMUZRLzlhRndJbEYvQStGK0FBQUFFYzdQY0JrUmdCODE0TjkvQUFQaGVVQUFBQ05oY1Q5Ly85b0VNNUZBRkRvQmVRRUFEUC9PVDNBWkVZQVdWa1BqcWtBQUFDTEJMM1FzMFlBaGNCMEZZMk54UDMvLzFGUS85YUZ3SWxGL0ErRnBBQUFBRWM3UGNCa1JnQjgxK3Q0allYRS9mLy94Z01BVUVQLzE0djRoZjkxSlkyRnhQMy8vMUQvRmFDaFJRQ0Z3SWxGNUl2NGRROXFBVkJxLzJoWTlrVUE2YjhDQUFDTE5XQ2lSUUJUVi8vV2hjQ0pSZngxVUtIQVpFWUFNOG1Gd0g0a096eU4wTE5HQUhRSFFUdklmUExyR21nUXprVUFVK2hiNHdRQVdWbFRWLy9XaVVYOGczMzhBSFViaXcxNGUwWUFhZ0ZxQUdyL2FGVDJSUURvOUlELy8rbERBZ0FBTS85WFY0MUYrRkQvZGZqL2Rlai9kZnovZGZEb1d3SUFBSVBFSElBOVpMUkdBQUNMMklsZDdJbFY4SFFvYU5pbFJRQys0SHhHQUdqNDlVVUFpODdHQldTMFJnQUE2TlFyQkFCWFYyb0JpODdvNWVVQUFEUDJSamw5K0hRUmkwVUlpWGdJeHdEWXBVVUE2Y1FBQUFDTFZlQ0UwblFkaTBYY2crZ0ZkQWhJU0hRRWl4dnJDb3ZEaXhpTFFBU0pSZkNKWGV5TFJkeElENFNGQUFBQVNIUnRTSFJNU0hReFNIUWdTSFFZU0ErRmdBQUFBTjFGN0l0RkNOMFl4MEFJQWdBQUFPdHYyVVhzNisyTFJRaUxUZkNKY0FpSlNBVHJXb1QyaTAwSWlYRUlkQW1Md3lYL0FBQUE2eFlQdnNQckVZVDJpMDBJaVhFSWRBK0x3eVgvL3dBQW1Za0JpVkVFNnlzUHY4UHI4NFQyaTAwSWlYRUlkQWVKR1lsNUJPc1ZpOFByM2p2ZmkwVUlpWGdJZFFXNzJLVkZBSWtZT1hVUUQ0NElBUUFBaTEwUWkwVU0iDQoJU3RhdGljIDQgPSAiaTNYb2c4UCtnOEFJMGV0RGlVVUlpVjBNaTBVSWl3Q0RlQWdERDRYUUFBQUFpemlMUmdpRCtBRjFRVkNMeitpT2hmLy9pOCtMMk9oZkxBQUFoY0IwQmNaRUdQOEFpOC9vczRULy8xT0pSZmpvdStNRUFGbUxUZmlKQVdvQWk4L29VaXdBQUl0ZERPbUZBQUFBZ0g0TUFIUi9TRWgwWVVoMFJraDBLMGgwR2toMEUwaDFiTjBHVVZHTHo5MGNKT2oyTGdBQTYxelpCdXZ1LzNZRWk4Ly9OdWdaaFAvLzYwcUFmZzBBaTg5cUdIUUppd1lsL3dBQUFPc3ZENzRHNnlxQWZnMEFpODlxR0hRSml3WWwvLzhBQU9zWEQ3OEc2eEtBZmcwQWk4OXFHSFFHYWdEL051c0Zpd2FaVWxEb2pvTC8vNE5GQ0FpRHhoQkxpVjBNRDRVUS8vLy9nMzNrQUhRZy8zWGsveFdjb1VVQTZ4VlRhZ0JxLzJqMDlVVUFpdzE0ZTBZQTZJWisvLytOcGJqOS8vOWZYbHZKdzJwVWFKRHJSUURvS2U0RUFEUDJpMFVZaVRDaENGRkdBUDl3TVA4VlNLRkZBSWwxNUlsMXZEUEFqWDNBcTR0RkZJdkl3ZUVEaVUzWWlXWGNLMlhZU0l0MTNHb0VXNFA0LzM1YWk4akI0UVNMVlJDTlRCRUlRSWxGNElCNUJBQjBEQ3Z6alVINGlRWUJYZVRyTUlzQmcvZ0ZkQW1EK0FkMEJJdkQ2d05xQ0ZnQlJlU05WQUgwaGNCK0VvMTQvOEh2QWtlTEFpdlRLL09KQms5MTlZUHBFUDlONEhXMmkwVWNNLzg3eDNRVDlrVUlBWFVHZzMwZ0NINEhBVjNrSy9PSkJwdUpmZndEWmRpSlpjd3JaZVQvVlF5YmcwMzgvK3NmaTBYc2l3Q0xBSWxGeURQQVFNT0xaZWlMUmNpTFRSaUpBWU5OL1A4ei80bGx4SXRseklsRjBJbFYxSXRkQ1BiSEFYUUYyVjI4NnpiMnh3SjBCZDFkdk9zc09YMGNkUTZMUmRDSlJieUxWZFNKVmNEckdmYkRBWFVVZzMwZ0NIOE9pMDBjaTBYUWlRR0xWZFNKVVFUL0ZTeWlSUUNMRFFoUlJnQ0pRVENMUmN3clJjUjBGL2JESUhRU3hrV2NRV29LalUyZFVWRG9HSGYvLytzZGkwVVlpd0E3eDNRaXhrV2NNTVpGblhocUVJMU5ubEZRNk9CMC8vK0R4QXhxQVZkcS80MUZuRkRyQ21vQlYyci9hRFNuUlFDTERYaDdSZ0RveUh6Ly80dEZ2SXRWd09peTdBUUF3MVdMN0ZGUlUxYUxkUXlMSG9ON0NBTlhkUm1MQzJvQjZMT0MvLytMQzR2NDZJUXBBQUFEeDRsRitPc01hZ0JUNkF5Qi8vOVpXWXY0ZzMwUUFYNE9hZ0QvZGdUbytJRC8vMWxaQS9pRGZSQURpM1VJeDBYOEJBQUFBSDBKZzJVUUFPbU5BQUFBLzNZRWkwVU0vM0FJNk5tSC8vK0pSUXdQdmdCUTZIK05Bd0NEeEF5RCtGVjFDZjlGRElObEVBRHJCOGRGRUFFQUFBQ0xSUXdQdmdCUTZGdU5Bd0NENkVOWmRFSklkQzlxQWxrcndYUXZnK2dEZEFxRDZBcDFOWWxOL09zd2FqYi9kUXpvZ3VFRUFJWEFXVmwwSU1kRi9BZ0FBQURyRjhkRi9BZ0FBQURIUmdnQ0FBQUE2d2ZIUmZ3QkFBQUFnZjhBQkFBQWNtNkRld2dEZFFxTFJmd0R4enRGK0hkZWkwWDhTRWgwUVVoSWRDR0Q2QVIwRUlOOUVBQjBCUSsrQitzMkQ3WUg2ekdMQjRrR2kwY0VpVVlFNnp5RGZnZ0NkUWJaQjkwZTZ6Q0RmUkFBaXdkMUVZTm1CQUNKQnVzZ2czMFFBSFFMRDc4SG1Za0dpVllFNnc4UHR3ZnI4NE5tQ0FESEJ0aWxSUUJmWGx2SncxV0w3SVBzRkZPTFhReUxBMWFMY3dTRGZnZ0RWNGxGRElsMThHb0FkUmVMRHVneWdmLy9pdzZMK09nREtBQUFBOGVKUmV6ckNsYm9qWC8vLzFsWmkvaURmUkFDZmc1cUFQOXpDT2g1Zi8vL1dWa0QrSU5sOUFDRGZSQURpM1VJeDBYOEJBQUFBTWRGK0FFQUFBQitlZjkyQlA5ekRPaGJodi8vaTlnUHZnTlE2QUtNQXdDRHhBeUQrRlYxQ01kRjlBRUFBQUJERDc0RFVPanBpd01BZytoRFdYUTlTSFF0YWdKWks4RjBMWVBvQTNRS2crZ0tkVENKVGZ6cksybzJVK2dTNEFRQWhjQlpXWFFkeDBYOENBQUFBT3NVeDBYOENBQUFBSU5sK0FEckI4ZEYvQUVBQUFDTFRmeU5CRG1KQmpQQWdmOEFCQUFBaVVZRUQ0TGJBQUFBaTEzd2czc0lBM1VYaTlBNzBBK1B5QUFBQUh3TGl3WTdSZXdQaDdzQUFBQ0x3VWhJRDRTUkFBQUFTRWgwYUlQb0JIUVJhZ0QvZFF6b2kzNy8vNGdINllRQUFBQXowamxWK0hRNU9WWDBkQ0tMVFF5TFFRaUQrQUYwRjRQNEFuUVNVbEhvYllYLy8xRG81bkgvLzRQRURPc0xVdjkxRE9oTmZ2Ly9XVm1KQjRsWEJPdEdVbW9CLzNVTTZLR0UvLy9kSDRQRURPczBNOEE1UmZoUWRBei9kUXpvSW43Ly80a0g2eDVxQWY5MURPaDhoUC8vMlIrRHhBenJEMm9BLzNVTTZBTisvLzltaVFkWldZTjdDQU4xRllzTGFnRG9jeVlBQU9zS2cyWUlBTWNHMktWRkFGOWVXOG5EZ0hrWEFGWjFCWXR4RE9zQ2kvSDJSaFdBZFJHTHp1aTlmdi8vaWtZVkpBOE1nSWhHRlY3RFZZdnNnZXdZQkFBQW9heWtSZ0NBT0FCVFZsZUpUZkFQaE93QkFBQnFBZWhZSmdBQVFEMUFuQUFBZHhXRHdBT0Q0UHpvL3VJRUFJdkVpVVhzaVVYNDZ5dFE2Q2hYQXdDRndGbUpSZmgxR2Y4MXJLUkdBSXROOEZCb1VMMUZBT2crSWdRQTZhUUJBQUNEWmV3QS96V3NwRVlBLzNYNDZPdmFCQUMrQUFJQUFGYi9OYkNrUmdDTmhlajcvLzlRNktUNEFnQlcvelcwcEVZQWpZWG8vZi8vVU9pUitBSUFpeDBJVVVZQWkzWDRnOFFnZ0wzbysvLy9BSFFpallYbysvLy9VRmJvSy9zQ0FJdjRoZjlaV1hVNlZ1akEzQVFBaS9oWkEvN3JMWUM5NlAzLy93QjBJUSsrQmxDTmhlajkvLzlRNk5EZEJBQ0Z3RmxaZEF0R2dENEFkYkRwOUFBQUFJMStBWW9IeGdjQWdMM28vZi8vQUloRi8zUkNnRDRBZEQyQXZlajcvLzhBZERTTHh5dkdVSTJGNlAzLy8xQlc2Qjc2QWdDTDhJUEVESUErQUhRWWpVZi9VSTJGNlAzLy8xQlc2RVA2QWdDRHhBekdCREFBaVhNY2kzWHdpMDRVZ0Rsc2RSNkxTUlNOUmVoUS8zVUlhZ0xvTG96Ly80dE9GRGxONklsRjlIVGs2eEdOUmVoUS8zVUlhZ1BvRTR6Ly80bEY5SU5EQ0FHRFV3d0FnMzMwQVhRR2czMzBCblVvaTBYb2hjQjFOWXBGLzRUQWREK0lCNEM5NlB2Ly93QjBDSTEzQWVuai92Ly9pL2ZwM1A3Ly80dEYrRHRGN0hRSFVPaEpTd01BV1l0RjlPc2pPOFoxQ0l0RkRNWUFBZXNGaTAwUWlRR0xSZmc3UmV4MEIxRG9KRXNEQUZrendFQ05wZHo3Ly85Zlhsdkp3Z3dBVll2c2dld2NBZ0FBb2F5a1JnQ0FPQUJUVmxlSlRlUVBoUFlCQUFCcUFlZy9KQUFBUUQxQW5BQUFkeFdEd0FPRDRQem81ZUFFQUl2RWlVWG9pVVgwNnl0UTZBOVZBd0NGd0ZtSlJmUjFHZjgxcktSR0FJdE41RkJvVUwxRkFPZ2xJQVFBNmE0QkFBQ0RaZWdBL3pXc3BFWUFpM1gwVnVqUjJBUUFhQUFDQUFEL05iU2tSZ0NOaGVUOS8vOVE2SXYyQWdDTEhRaFJSZ0NEeEJTSlhmQ0FQaUoxQjhaRi93Rkc2d1RHUmY4QWdIMy9BQStVd1A3SUpQWUVMQSsrd0ZCV2lVWDQ2T1RiQkFCWldlc3NnSDMvQUhROGpWOEJnRHNpZFRGVDZKemFCQUJBVUZOWDZJUGNCQUQvZGZoVDZMcmJCQUNMWGZDRHhCaUwrSVgvZGM1VzZIamFCQUNMK0ZrRC91c0RpMTN3aWdmR0J3Q0F2ZVQ5Ly84QWlFWC9kRG1BUGdCME5JdkhLOFpRallYay9mLy9VRmJvQ2ZnQ0FJdndnOFFNZ0Q0QWRCaU5SLzlRallYay9mLy9VRmJvTHZnQ0FJUEVETVlFTUFDSmN4eUxkZVNMVGhTQU9XeDFIb3RKRkkxRjdGRC9kUWhxQXVnWml2Ly9pMDRVT1Uzc2lVWDRkT1RyRVkxRjdGRC9kUWhxQStqK2lmLy9pVVg0ZzBNSUFZTlREQUNEZmZnQmRBYURmZmdHZFRhTFJleUZ3SFZET0VYL2RFK0FmZjhzZFFpTmR3SHAyLzcvLzBlQVB3QjBPMm9zVitqYjJnUUFpL0NGOWxsWmRDdEc2Yi8rLy8rTFJmUTdSZWgwQjFEb0pra0RBRm1MUmZqckl6dkdkUWlMUlF6R0FBSHJCWXRORUlrQmkwWDBPMFhvZEFkUTZBRkpBd0JaTThCQWphWFkvZi8vWDE1YnljSU1BRldOYkNTZ2dleFVBd0FBVTFaWGFBUUJBQUQvZFh5TmhSRCsvLzlRaVUxVTZOWDBBZ0NOaFJEKy8vOXFYRkRvdHVBRUFJUEVGSVhBZENlTmNBR05oUXo5Ly85V1VPamYxZ1FBallVUS92Ly9VTVlHQU9nQTJRUUFnOFFNaVVWYzZ5Q05oUkQrLy85UWpZVU0vZi8vVU9pMTFnUUFnMlZjQUZsWnhvVVEvdi8vQUlzZEFLSkZBSTJGRlAvLy8xRC9kWHovMHpQSmcvai9ENVhCaVVWOGkvbnJNdjkxWEkyRkVQNy8vMUQvZFhTTmhSVC8vLzlRNkh1YkFRQ0R4QkNFd0hRV2pZVVUvLy8vVVA5MWZQOFZCS0pGQUl2NGhmOTF5b3MxQ0ZGR0FPbU1BQUFBaTMxVWpZVVUvLy8vaVVZUWkwOFVnRGxzZFJ1TFNSU05SVmhRLzNWb2FnTG9aWWovLzR0UEZEbE5XSFRuNnc2TlJWaFEvM1ZvYWdQb1RZai8vNFA0QVhRRmcvZ0dkVStMUlZpRndIVlBqWVVVLy8vL1VQOTFmUDhWQktKRkFJdjRoZjkwSVA5MVhJMkZFUDcvLzFEL2RYU05oUlQvLy85UTZOYWFBUUNEeEJDRXdIWEtnMFlJQVlOV0RBQ0YvdytGYlAvLy8rc1lpL0RwTWdFQUFEdkhkUWlMUld6R0FBSHJCWXROY0lrQmczMTgvM1FKLzNWOC94VUlva1VBZ0gxNEFIUTNpMzFjZ2Y4QUFRQUFkeXlOdEQwUS92Ly9hTnpLUlFCVzZHYlZCQUJaV1kyRkZQLy8vMUNOaFJEKy8vOVEvOU9EK1ArSlJYeDFDRFBBUU9uWUFBQUFqWVVNL2YvL1VPaG8xd1FBaTlnRDMxbUpYVnoyaFJULy8vOFFENFNSQUFBQWdMMUEvLy8vTG5VYmdMMUIvLy8vQUhSL2dMMUIvLy8vTG5VSmdMMUMvLy8vQUhSdGpZVkEvLy8vVU9najF3UUFBOE05QWdFQUFGbDNWNDJGRFAzLy8xQ05oVUQvLy85UWFPekVSUUJXNlA4QkFBQ0xYWENMZld5TFRWU0R4QkNOaFJEKy8vOVEvM1Y0LzNWMFUxZi9kV2pvaFAzLy80UDRBWFFKZy9nR0Q0WHYvdi8vZ0Q4QWRTQ0RPd0IxRzR0ZFhJMkZGUC8vLzFEL2RYei9GUVNpUlFDRndBK0ZTdi8vL3pQMlJ2OTFmUDhWQ0tKRkFJdkdYMTViZzhWZ3ljSVlBRk9MWENRSWdEc0FkUVF6d0Z2RFZsZUwrNG9IUENCMEJEd0pkUU5INi9PTGRDUVVpOGNydzNRZ2cvNy9kUXRYNkY3V0JBQlppL0RyQWl2d2pVWUJVRmRUNkR6WUJBQ0R4QXhmaThaZVc4TldpM1FrQ0lBK0FIUTlpMFFrRElQNC8zVUhWdWdxMWdRQVdZMU1CditLRVlENklIUUZnUG9KZFFnN3puUUtTVWpyN01aQkFRQmV3NG9SZ1BvZ2RBV0ErZ2wxQmNZQkFEUEFYc1AvZENRSS8zUWtDT2haLy8vL1VQOTBKQkRvbnYvLy80UEVFTU5WaSt4V2kzVU1nLzRCVjN3eWkzMEloZjkwSzROOUVBQjBKWTFGRkZEL2RSQldWK2dkQUFBQWc4UVFPOGJHUkRmL0FIVUJTSVA0LzM4SGpVYi82d0l6d0Y5ZVhjTlZpK3lEN0NDTFJReFdpM1VJVi85MUZJbEY1UDkxRUkxRjRGREhSZXhDQUFBQWlYWG9pWFhnNkZ0WkF3Q0R4QXlGOW92NGRCci9UZVI0Q0l0RjRNWUFBT3NOalVYZ1VHb0E2RUluQXdCWldZdkhYMTdKdzFaWGkzd2tERmZvTnRVRUFJdDBKQlFyOElQK0FWbDlCRFBBNnlJRCtJMUVKQmhRLzNRa0dGWlg2SHovLy8rRHhCQ0QrUC9HUkQ3L0FIOERqVWIvWDE3RFZZdnNnK3dnVm90MUNGZU5SUkJRLzNVTWpVWGdVTWRGNVAvLy8zL0hSZXhDQUFBQWlYWG9pWFhnNk1KWUF3Q0R4QXlGOW92NGRCci9UZVI0Q0l0RjRNWUFBT3NOalVYZ1VHb0E2S2ttQXdCWldZdkhYMTdKdzFOV1Y3N0FaVVlBVnVnektnTUFpL2lOUkNRWVVQOTBKQmhXNkhwWUF3QldWNHZZNk4wcEF3Q0R4QmhmWG92RFc4T0xSQ1FFTThtSmlKUUFBQUNKaUpnQUFBQ0ppSndBQUFDSmlLQUFBQUNKaUtRQUFBQ0lpTTRBQUFDSlNDakhRRkJqQUFBQWlJakFBQUFBaVVoTWlVZ0lpVWdNaVVnUWlVZ1VpVWdZaVVnY3cxTldpM1FrREZib3BQLy8velBiYWdwWWc4ci9pVVlraVVaY2lVWnN1UUFBQUlDTlJuVEhCQ1FRcGtVQVVJbWVyQUFBQU1kR0lBRUFBQURHaHNFQUFBQUJpSjdDQUFBQXhvYkRBQUFBQVlrV2lWWUV4NGF3QUFBQUJRQUFBTWFHeEFBQUFBR0pucmdBQUFER2hzVUFBQUFCaUo3R0FBQUFpVjRzaVY0d2lWNDBpVjQ0aVU0OGlVNUF4MFpFWXdBQUFNZEdTUGdxQUFDSlhrekhSbFJrQUFBQXgwWllGQUFBQUlsV1lJbFdaSWxXYUlsV2NNYUd4d0FBQUFLSW5zZ0FBQUNJbnNrQUFBREdoc29BQUFBQnhvYkxBQUFBQWVnZTBRUUFXVm1JbnN3QUFBREdoczhBQUFBQlhsdkRWWXZzVjR2NWdEODRkUVZxQTFqclFsT0xYUWlBZXhjQWRRT0xXd3lLUXhlRXdIVUdpME1NaWtBWFBBSldkU2lMTlZDbFJRQnFBZi9XaGNBUGhaWUFBQUJxRC8vV2hjQVBoSW9BQUFCcUExaGVXMTlkd2d3QVBBRjE4alAyT1RXd2MwWUFkUXVMeStqRGRmLy9oY0IwM1RzZGVIdEdBSFRWRDdZSGE4QU85b0FtVVVZQWdIUlFnSDhCQUhaS2cyVUlBRHQxREhRMGkwY0VpMDBJZ0R3QkFuVW9PM1VNZlFpTFJSQ0xCTERyQ21vQVZvdlA2Q3dBQUFDRndIUWhnSGdYQUhVRGkwQU1POE4wZ3crMlJ3R0RSUWdRUmp2d2ZMcHFCT2x4Ly8vL004RHBhLy8vLzFXTDdGRVB0bEVCaTBVSU84S0pUZng4QnpQQTZaMEJBQURCNEFRRFFRU0FPQUNKUlFoMDYxT0xXQVNBT3dCMUNJdEFDT2w5QVFBQVZvdHdDRmN6LzRYMkQ0U1dBQUFBNjFzNzJuTVdnZi85QUFBQWZSYUtFNGlYNEt0R0FFZERPeDV5Nm9ILy9RQUFBSHdFT3g1eVBZdE9CR29BNkJK"
	Static 13 = ""
	Static 14 = ""
	Static 15 = ""
	Static 16 = ""
	Static 17 = ""
	Static 18 = "VFZtZzh3RVVBVitqOVBRSUFnOFFRaGNBUGhQUUFBQUJUVm1nd3dFVUFWK2psUFFJQWc4UVFoY0FQaE53QUFBQlRWbWdvd0VVQVYrak5QUUlBZzhRUWhjQVBoTFFBQUFCVFZtZ2N3RVVBVitpMVBRSUFnOFFRaGNBUGhKd0FBQUJUVm1nUXdFVUFWK2lkUFFJQWc4UVFoY0IxRWpoRkdIUUdpMFVVZ0FoQXNGdnBtd0FBQUZOV2FBakFSUUJYNkhjOUFnQ0R4QkNGd0hVUE9FVVlkQWFMUlJTQUlMK3dXK3RFVTFaby9MOUZBRmZvVkQwQ0FJUEVFSVhBZFE4NFJSaDBCb3RGRklBSWdMQmM2MVZUVm1qMHYwVUFWK2d4UFFJQWc4UVFoY0IxR0RoRkdIUUdpMFVVZ0NCL3NGeUxUUkRIQVFFQUFBRHJMekxBNnl1QWZSZ0FkQWFMUlJTQUlQeXdFZXZoZ0gwWUFIUU5pMDBVaWdHb0EzVUVEQUdJQWJBUmkwMFFneUVBWDE1YlhjTlZpK3hUVm90MUNEUGJPQjUxQnpMQTZhY0FBQUJXNkFJaEJBQ0QrQUZaZFJML2RSZ3p3SW9HLzNVTVVPZzZ4Zi8vNnpBNFhSUjBNQSsrQmxEb3ZNMENBSVA0VmxsMUlRKytSZ0ZRNkt6TkFnQ0QrRXRaZFJGcUVJUEdBbE5XNkxpMC92K0R4QXpyVkZjei96a2QrR0ZHQUg0Y1Z2ODAvU2hlUmdEbzc4Z0NBSVhBV1ZsMEVrYzdQZmhoUmdCODVEaGRFSFFOTXNEckk0b0UvU3hlUmdEckdsYm9BZjMvLzJZN3cxbDBERkRvaytILy8xa1B0c0RyQWpQQVgxNWJYY05SVVErMlJDUU1WWXN0MktSRkFGZFEvOVdMVENRWUpBSDIyQnZBTS85QVFFYzd6NGxFSkF4MENZUDVBZytGeXdBQUFEdkJENFREQUFBQVV6UGJnSHdrR0pCV3ZrM1V3LzkxSkRnZG1ZTkdBSFFLNktzQUFBRHBtd0FBQUZaVFUxTm9rQUFBQUZmb1A5RC8vNFBFR0ZaVFUxUC9kQ1FzYWdMb0xkRC8vNFBFR0ZQL0ZjaWtSUUJRL3hYTXBFVUFPd1djZkVZQUQ1UkVKQk00WENRVGRCWlhhditKSFd4UVJnRG9ib0gvLzFsWmlUMXNVRVlBZ0h3a0hCUjFPNE44SkNBQ2RUUnFGUC9WcUFGMExGWlRVMU5xRUdvQzZOTFAvLytEeEJnNFhDUVRkQlpYYXYrSkhXeFFSZ0RvTElILy8xbFppVDFzVUVZQWkwUWtGRjViWDExWldjTlZpK3lCN0FBQkFBQ05oUUQvLy85US94VllwRVVBZ0hXUUFZMkZBUC8vLzFEL0ZWeWtSUURKdzFXTDdGR2hqSHhHQUlYQUQ0VDlBQUFBaXcyUWZFWUFpbFVJYThsd2lGUUJCYUdRZkVZQWl3Mk1mRVlBYThCd2lsVU1pQlFJb1pCOFJnQ0xEWXg4UmdCcndIQm1pMVVRWm9sVUNBS2hrSHhHQUlzTmpIeEdBR3ZBY0ZiR1JBZ0VhZjhWYktKRkFLT1VmRVlBS3dXMGcwWUFoY0NKUmZ6YlJmeDlCdGdGdkxwRkFLR1FmRVlBMkEyNHVrVUFpdzJNZkVZQWE4QncyVndJQ0tHVWZFWUFvN1NEUmdEL0ZjaWtSUUNMRFl4OFJnQ0w4S0dRZkVZQWE4QndoZlowSHpzMW1IeEdBSFFRYW1TTlJBZ01VRmIvRldDa1JRRHJHTVpFQ0F3QTZ4R05SQWdNYUxTNlJRQlE2QmNjQkFCWldmOEZrSHhHQUtHUWZFWUFPd1Z3VUVZQWlUV1lmRVlBWG53SGd5V1FmRVlBQU1uRFZZdnNvZmhoUmdDTFZRZ3p5WVhBZmc0NEZNMHNYa1lBZEJsQk84aDg4djkxRlA5MUVQOTFERkxvMU1YLy80UEVFRjNELzNVVS96VE5LRjVHQVA5MUVPaCtPUUlBaTBVUWc4UU1YY1AvRFFoaVJnQjFCZWhCcGdNQW9aaVVSZ0NMQ0lNRm1KUkdBQVNMd2NIb0N6UElpOEVsclZnNi84SGdCelBJaThFbGpOLy8vOEhnRHpQSWk4SEI2Qkl6d2RIb3cvOE5DR0pHQUhVRjZQMmxBd0NobUpSR0FJc0lnd1dZbEVZQUJJdkJ3ZWdMTThpTHdTV3RXRHIvd2VBSE04aUx3U1dNMy8vL3dlQVBNOGlMd2NIb0VqUEJ3MUgvRFFoaVJnQjFCZWk2cFFNQW9aaVVSZ0NMQUlNRm1KUkdBQVNMeU1IcEN6UEJpOGlCNGExWU92L0I0UWN6d1l2SWdlR00zLy8vd2VFUE04R0x5TUhwRWpQSWhjbUpEQ1RiQkNSOUJ0d0Z3TUJGQU53TnVNQkZBRm5EaTBRa0JGWXo5a2Fqb0pSR0FGZUwxcmlnbEVZQWl3aUwrY0h2SGpQNWFmOWxpUWRzQS9xSmVBU0R3QVJDUFZ5ZVJnQjg0VitKTlFoaVJnQ0pOV0NlUmdCZXcxTXoyNGhaRWY4TldJRkdBSFV3T1IyMGMwWUFkU2c1SGR5VFJnQjFJRGdkbjNOR0FIUVlhZ24vTlZSeVJnRC9GVVNsUlFDRndIUUdpQjJmYzBZQVc4T0x3WXRNSkFTSkNEUEp4MEFFK2dBQUFJbElDSWxJREloSUVJaElFWWhJRW9sSUZNSUVBSXRFSkFSSWREZElkRENENkFOMEdFaElkQlQvTmFpa1JnQnFBR2hReTBVQTZERmhBd0RyVHFFSVVVWUFPd1ZnYjBZQWRncUFlUDRBZEFScUFPc0pnSHdrQ0FCMENtb0I2Q3dBQUFCWjZ5UG9jcmovLzZFSVVVWUF4b0RPQUFBQUFmOEZ2SE5HQUdvQXVlQjhSZ0RvZDNmLy96UEFRTUlJQUtFSVVVWUFPd1ZnYjBZQWRoMktUQ1FFT0VqK2RCU0V5WWhJL25RSC93VzhjMFlBdy84TnZITkdBTU5XaTNRa0NJWDJENFMzQUFBQWdENEFENFN1QUFBQWFBUzNSUUJXNk5qREFnQ0Z3RmxaZFFOQVhzTm9OTHRGQUZib3hNTUNBSVhBV1ZsMUIyb0M2WVFBQUFCb25MUkZBRmJvck1NQ0FJWEFXVmwxQkdvSTYyOW96TU5GQUZib2w4TUNBSVhBV1ZsMUJHb0o2MXBvdk1ORkFGYm9nc01DQUlYQVdWbDFCR29LNjBWb3RNTkZBRmJvYmNNQ0FJWEFXVmwxQkdvTDZ6Qm9rTE5GQUZib1dNTUNBSVhBV1ZsMUJHb002eHRvcE1ORkFGYm9ROE1DQVBmWVdSdkFXWVBnODRQQURWN0RhZ2RZWHNOV2kzUWtDSVgyRDRTS0FRQUFnRDRBRDRTQkFRQUFhS0QyUlFCVzZBL0RBZ0NGd0ZsWmRRTkFYc05vYVBkRkFGYm8rOElDQUlYQVdWbDFCMm9DNlRrQkFBQm90T1JGQUZibzQ4SUNBSVhBV1ZsMUIyb0Q2U0VCQUFCb3JPUkZBRmJveThJQ0FJWEFXVmwxQjJvRTZRa0JBQUJvNk9WRkFGYm9zOElDQUlYQVdWbDFCMm9GNmZFQUFBQm80T1ZGQUZib204SUNBSVhBV1ZsMUIyb0c2ZGtBQUFCb3pPUkZBRmJvZzhJQ0FJWEFXVmwxQjJvSDZjRUFBQUJveE9SRkFGYm9hOElDQUlYQVdWbDFCMm9JNmFrQUFBQm9XUGRGQUZib1U4SUNBSVhBV1ZsMUIyb0o2WkVBQUFCb1NQZEZBRmJvTzhJQ0FJWEFXVmwxQkdvSzYzeG9RUGRGQUZib0pzSUNBSVhBV1ZsMUJHb0w2MmRvTlBkRkFGYm9FY0lDQUlYQVdWbDFCR29NNjFKb0tObEZBRmJvL01FQ0FJWEFXVmwxQkdvTjZ6MW9jS2hGQUZibzU4RUNBSVhBV1ZsMUJHb082eWhvTFBkRkFGYm8wc0VDQUlYQVdWbDFCR29QNnhOb0hQZEZBRmJvdmNFQ0FJWEFXVmwxQldvUVdGN0RhQkQzUlFCVzZLZkJBZ0QzMkZrYndGbUQ0TytEd0JGZXd6UEFYc05XaTNRa0NJWDJENFJhQVFBQWdENEFENFJSQVFBQWFMajNSUUJXNkhUQkFnQ0Z3RmxaZFFOQVhzTm9zUGRGQUZib1lNRUNBSVhBV1ZsMUIyb0M2UWtCQUFCb3FQZEZBRmJvU01FQ0FJWEFXVmwxQjJvRDZmRUFBQUJvZkt0RkFGYm9NTUVDQUlYQVdWbDFCMm9FNmRrQUFBQm9uUGRGQUZib0dNRUNBSVhBV1ZsMUIyb0Y2Y0VBQUFCb2xQZEZBRmJvQU1FQ0FJWEFXVmwxQjJvRzZha0FBQUJvbk9SRkFGYm82TUFDQUlYQVdWbDFCMm9INlpFQUFBQm9pUGRGQUZibzBNQUNBSVhBV1ZsMUJHb0k2M3hvZlBkRkFGYm91OEFDQUlYQVdWbDFCR29KNjJkb2NQZEZBRmJvcHNBQ0FJWEFXVmwxQkdvSzYxSm85TUZGQUZib2tjQUNBSVhBV1ZsMUJHb0w2ejFvbFBCRkFGYm9mTUFDQUlYQVdWbDFCR29NNnlob3pPUkZBRmJvWjhBQ0FJWEFXVmwxQkdvTjZ4Tm94T1JGQUZib1VzQUNBSVhBV1ZsMUJXb09XRjdEYUJUbFJRQlc2RHpBQWdEMzJGa2J3Rm1ENFBHRHdBOWV3elBBWHNOV2kzUWtDSVgyZEhLQVBnQjBiV2hneEVVQVZ1Z1J3QUlBaGNCWldYVUVzQUZldzJqTXcwVUFWdWo4dndJQWhjQlpXWFVFc0FKZXcyaTR0VVVBVnVqbnZ3SUFoY0JaV1hVRXNBUmV3MmhZeEVVQVZ1alN2d0lBaGNCWldYVUVzQWhldzJoY3JVVUFWdWk5dndJQWhjQVBsY0QreUZsWlhvUGdFTU15d0Y3RFZvdDBKQWlGOW5SZGdENEFkRmhvUk9SRkFGYm9rcjhDQUlYQVdWbDFBMEJldzJnODVFVUFWdWgrdndJQWhjQlpXWFVFYWdMckUyZzA1RVVBVnVocHZ3SUFoY0JaV1hVRmFnTllYc05vTE9SRkFGYm9VNzhDQVBmWVdSdkFXWVBnL0lQQUJGN0RNOEJldzFhTGRDUUloZllQaFBZQUFBQ0FQZ0FQaE8wQUFBQm9uT1JGQUZib0lMOENBSVhBV1ZsMUEwQmV3MmlRNUVVQVZ1Z012d0lBaGNCWldRK0V3QUFBQUdpTTVFVUFWdWozdmdJQWhjQlpXUStFcXdBQUFHZ3M1RVVBVnVqaXZnSUFoY0JaV1hVSGFnUHBrQUFBQUdvSmFJRGtSUUJXNkF1L0FnQ0R4QXlGd0hVRWFnVHJlR2g0NUVVQVZ1aXl2Z0lBaGNCWldYVUVhZ1hyWTJodzVFVUFWdWlkdmdJQWhjQlpXWFVFYWdiclRtaG81RVVBVnVpSXZnSUFoY0JaV1hVRWFnZnJPV2hjNUVVQVZ1aHp2Z0lBaGNCWldYVUVhZ2pySkdoUTVFVUFWdWhldmdJQWhjQlpXWFFSYUV6a1JRQlc2RTIrQWdDRndGbFpkUWxxQ1ZoZXcyb0M2L2t6d0Y3RFZvdDBKQWhYYWpwVzZBb1hCQUNMK0lYL1dWbDBKU3ZHZy9nRGZSNVRpMXdrRklYYmRBcFc2SW1zL3Y5SVdZa0RSMWZvcWJmKy8xbUw4RnVMUkNRVWhjQjBBb2t3aWdhRXdBK0Vxd0VBQUR3ckQ0U2pBUUFBUEMwUGhKc0JBQUJvS05sRkFGYm8wTDBDQUlYQVdWbDFCMm9DNldNQkFBQm82T1ZGQUZib3VMMENBSVhBV1ZsMUIyb0Y2VXNCQUFCb3RQcEZBRmJvb0wwQ0FJWEFXVmwxQjJvRzZUTUJBQUJvclBwRkFGYm9pTDBDQUlYQVdWa1BoRG9CQUFCbzRPVkZBRmJvYzcwQ0FJWEFXVmtQaENVQkFBQm9vUHBGQUZib1hyMENBSVhBV1ZsMUIyb0k2ZkVBQUFCb2xQcEZBRmJvUnIwQ0FJWEFXVmwxQjJvSjZka0FBQUJvalBwRkFGYm9McjBDQUlYQVdWbDFCMm9LNmNFQUFBQm9vTmhGQUZib0ZyMENBSVhBV1ZsMUIyb0w2YWtBQUFCb2hQcEZBRmJvL3J3Q0FJWEFXVmwxQjJvRDZaRUFBQUJvWEsxRkFGYm81cndDQUlYQVdWbDFCR29FNjN4b2ZQcEZBRmJvMGJ3Q0FJWEFXVmwxQkdvTTYyZG9mS3RGQUZib3ZMd0NBSVhBV1ZsMUJHb042MUpvY1BwRkFGYm9wN3dDQUlYQVdWbDFCR29PNnoxb1pQcEZBRmJva3J3Q0FJWEFXVmwxQkdvUDZ5aG90TU5GQUZib2Zid0NBSVhBV1ZsMUJHb1E2eE5vWFBwRkFGYm9hTHdDQUlYQVdWbDFCV29SV09zZ2FGVDZSUUJXNkZLOEFnRDMyQnZBV1lQZzdsbUR3QkxyQjJvSDYrQXp3RUJmWHNOV2kzUWtDSVgyRDRUd0FRQUFnRDRBRDRUbkFRQUFhUEQyUlFCVzZCbThBZ0NGd0ZsWmRRU3dBVjdEYUd5dFJRQlc2QVM4QWdDRndGbFpkUVN3REY3RGFHajdSUUJXNk8rN0FnQ0Z3RmxaZFFTd0JGN0RhRno3UlFCVzZOcTdBZ0NGd0ZsWmRRU3dCVjdEYUZUN1JRQlc2TVc3QWdDRndGbFpkUVN3Qmw3RGFGRDdSUUJXNkxDN0FnQ0Z3RmxaRDRSbEFRQUFhRUQ3UlFCVzZKdTdBZ0NGd0ZsWkQ0UlFBUUFBYURUN1JRQlc2SWE3QWdDRndGbFpkUVN3Q0Y3RGFDejdSUUJXNkhHN0FnQ0Z3RmxaZFFTd0NWN0RhSEQ2UlFCVzZGeTdBZ0NGd0ZsWmRRU3dDbDdEYUdUNlJRQlc2RWU3QWdDRndGbFpkUVN3QzE3RGFDVDdSUUJXNkRLN0FnQ0Z3RmxaZFFTd0VGN0RhQno3UlFCVzZCMjdBZ0NGd0ZsWmRRU3dFVjdEYU15MVJRQlc2QWk3QWdDRndGbFpkUVN3RWw3RGFIeXJSUUJXNlBPNkFnQ0Z3RmxaZFFTd0UxN0RhQlQ3UlFCVzZONjZBZ0NGd0ZsWmRRU3dGRjdEYUFqN1JRQlc2TW02QWdDRndGbFpkUVN3QTE3RGFBVDdSUUJXNkxTNkFnQ0Z3RmxaZEdsby9QcEZBRmJvbzdvQ0FJWEFXVmwwV0dqdytrVUFWdWlTdWdJQWhjQlpXWFVFc0ExZXcyamsra1VBVnVoOXVnSUFoY0JaV1hVRXNBNWV3MmdBczBVQVZ1aG91Z0lBaGNCWldYVUVzQTlldzJqWStrVUFWdWhUdWdJQWhjQVBsY0QreUZsWlhvUGdGY093QWw3RHNBZGV3ekxBWHNOVFZvdDBKQXhYYWpwVzZBZ1RCQUNMK0lYL1dWbDBJeXZHZy9nRGZSeUxYQ1FVaGR0MENsYm9pS2orLzBoWmlRTkhWK2lvcy83L1dZdndpMFFrR0lYQWRBS0pNSW9HaE1CMUIyb0M2YUVBQUFBOEt3K0VUUUVBQUR3dEQ0UkZBUUFBYVBEMlJRQlc2TTI1QWdDRndGbFpkUVJxQSt0OGFNajZSUUJXNkxpNUFnQ0Z3RmxaZFFScUJPdG5hTHo2UlFCVzZLTzVBZ0NGd0ZsWmRRUnFCZXRTYUtqMlJRQlc2STY1QWdDRndGbFpkUVJxQnVzOWFDejNSUUJXNkhtNUFnQ0Z3RmxaZFFScUMrc29hQnozUlFCVzZHUzVBZ0NGd0ZsWmRRUnFET3NUYUh6NlJRQlc2RSs1QWdDRndGbFpkUWhxRFZqcHNRQUFBSUErQUl2K2RCTVB2Z2RRNkpGZ0FnQ0Z3RmwxQlVjNEIzWHRnRDhBZEJGWDZKZW4vditMMlBmYkd0dFovc1ByQWpMYmFnWm90T1JGQUZib1Jia0NBSVBFRElYQWRRcUUydytWd0lQQUIrdGhhZ2Rvck9SRkFGYm9KN2tDQUlQRURJWEFkUW4yMnh2Ymc4TUk2emxxQkdqbzVVVUFWdWdLdVFJQWc4UU1oY0IxQ29UYkQ1WEFnOEFKNnlacUJHamc1VVVBVnVqc3VBSUFnOFFNaGNCMUMvYmJHOXVEd3dxTHcrc0hNOERyQXpQQVFGOWVXOElNQUZhTGRDUUlWMm82VnVoYUVRUUFpL2lGLzFsWmRDVXJ4b1A0QTMwZVU0dGNKQlNGMjNRS1Z1alpwdjcvU0ZtSkEwZFg2UG14L3Y5WmkvQmJnRDRBZFFnendFRHBnUUFBQUdpRThFVUFWdWczdUFJQWhjQlpXWFVGYWdKWTYydG9xUFpGQUZib0liZ0NBSVhBV1ZsMUJHb0Q2K2hvMFBwRkFGYm9ETGdDQUlYQVdWbDFCR29FNjlOb3NQZEZBRmJvOTdjQ0FJWEFXVmwxQkdvRjY3NW9xUGRGQUZibzRyY0NBSVhBV1ZsMUJHb0c2NmxvRk9WRkFGYm96YmNDQVBmWUc4QlpnK0Q1V1lQQUIxOWV3LzkwSkFUb01LYisvNFBvQUZsMEVVaDBDa2gwQXpQQXcyb0RXTU5xQWxqRE04QkF3MWFMZENRSWhmWVBoT1FBQUFDQVBnQVBoTnNBQUFCb1JNUkZBRmJvZWJjQ0FJWEFXVmwxQjJvRzZhZ0FBQUJvUU1SRkFGYm9ZYmNDQUlYQVdWbDFCMm9INlpBQUFBQm9QTVJGQUZib1NiY0NBSVhBV1ZsMUEwQmV3MmcweEVVQVZ1ZzF0d0lBaGNCWldYVUVhZ0xyWjJnc3hFVUFWdWdndHdJQWhjQlpXWFVFYWdQclVtZ2t4RVVBVnVnTHR3SUFoY0JaV1hVRWFnWHJQV2djeEVVQVZ1ajJ0Z0lBaGNCWldYVUVhZ1RyS0dnUXhFVUFWdWpodGdJQWhjQlpXWFVFYWd2ckUyZ0V4RVVBVnVqTXRnSUFoY0JaV1hVRmFncFlYc05vL01ORkFGYm90cllDQVBmWUc4QlpnK0FDV1VoSVhzTXp3RjdEVm90MEpBaUY5blEwZ0Q0QWRDOW9rTU5GQUZib2pMWUNBSVhBV1ZsMUEwQmV3Mmc4dkVVQVZ1aDR0Z0lBaGNCWldYVUVhZ0xyQ0l0RUpBeGV3Mm9IV0Y3RFZvdDBKQWlGOW5SZWdENEFkRmxvQkxkRkFGYm9TcllDQUlYQVdWbDFBMEJldzJnMHUwVUFWdWcydGdJQWhjQlpXWFVFYWdMck1taGc1VVVBVnVnaHRnSUFoY0JaV1hVRWFnUHJIV2hVNVVVQVZ1Z010Z0lBaGNCWldYVUVhZ1RyQ0l0RUpBeGV3Mm9IV0Y3RFZvdDBKQWlGOW5SSmdENEFkRVJvQkxkRkFGYm8zclVDQUlYQVdWbDFBMEJldzJnMHUwVUFWdWpLdFFJQWhjQlpXWFVFYWdMckhXZ3N1MFVBVnVpMXRRSUFoY0JaV1hVRWFnWHJDSXRFSkF4ZXcyb0hXRjdEVm90MEpBaUY5blJlZ0Q0QWRGbG9CTGRGQUZib2g3VUNBSVhBV1ZsMUEwQmV3MmcwdTBVQVZ1aHp0UUlBaGNCWldYVUVhZ0xyTW1nc3UwVUFWdWhldFFJQWhjQlpXWFVFYWdYckhXaWN3MFVBVnVoSnRRSUFoY0JaV1hVRWFnYnJDSXRFSkF4ZXcyb0hXRjdEVm90MEpBaUY5blJ5Z0Q0QWRHMW9VTDlGQUZib0c3VUNBSVhBV1ZsMUEwQmV3MmdrNUVVQVZ1Z0h0UUlBaGNCWldYVUVhZ0xyS0dpRXcwVUFWdWp5dEFJQWhjQlpXWFVFYWdQckUyZ2M1RVVBVnVqZHRBSUFoY0JaV1hVRmFnUllYc05vRU9SRkFGYm94N1FDQVBmWVdSdkFXWVBnKzRQQUJWN0RNOEJldzFhTGRDUUloZlowUklBK0FIUS9hRlRFUlFCVzZNMG1BZ0NGd0ZsWmRBUnFCdXNUYUZERVJRQlc2TGdtQWdDRndGbFpkQVZxQTFoZXcyaEl4RVVBVnVpaUpnSUFXZmZZV1J2QVFGN0RNOEJBWHNOV2kzUWtDR2owdzBVQVZ1aFR0QUlBaGNCWldYVUVhZ0xyVW1qc3cwVUFWdWcrdEFJQWhjQlpXWFVDWHNOcUJXaW90VVVBVnVoc3RBSUFnOFFNaGNCMU00UEdCVGdHZENkbzRNTkZBRmJvRUxRQ0FJWEFXVmwwRm1qVXcwVUFWdWovc3dJQWhjQlpXWFVLYWdOWVhzTXp3RUJldzR0RUpBeGV3MWFMZENRSWFBUzNSUUJXNk5tekFnQ0Z3RmxaZENob05MdEZBRmJveUxNQ0FJWEFXVmwxQWw3RGFKVERSUUJXNkxXekFnRDMyQnZBV1lQZ0FsbEFRRjdEVm90MEpBZ3p3RHZ3RDRTTkFBQUFPQVlQaElVQUFBQlFVR29CVUZib1FLNysvNFBFRklYQWRBVXp3RUJldzJnQTVFVUFWdWh2c3dJQWhjQlpXWFVFYWdMclBXanc0MFVBVnVoYXN3SUFoY0JaV1hVRWFnUHJLR2pvNDBVQVZ1aEZzd0lBaGNCWldYVUVhZ1RyRTJqWTQwVUFWdWd3c3dJQWhjQlpXWFVGYWdWWVhzTm96T05GQUZib0dyTUNBUGZZV1J2QVdZUGcrb1BBQmw3RE04QmV3MWFMZENRSWhmWjBTSUErQUhSRGFJVERSUUJXNk8reUFnQ0Z3RmxaZFFOQVhzTm9lTU5GQUZibzI3SUNBSVhBV1ZsMUJXb0NXRjdEYUd6RFJRQlc2TVd5QWdEMzJGa2J3Rm1ENFAyRHdBTmV3elBBWHNOV2kzUWtDRFBKTy9GMGNvb0dPc0YwYkR3eGRRbzRUZ0YxQlRQQVFGN0RQREoxQ1RoT0FYVUVhZ0xyTlR3emRRazRUZ0YxQkdvRDZ5aG9xTUpGQUZib2I3SUNBSVhBV1ZsMUJHb0U2eE5vb01KRkFGYm9XcklDQUlYQVdWbDFCV29GV0Y3RGFKakNSUUJXNkVTeUFnRDMyRmtid0ZtRDRQcUR3QVpld3pQQVhzTldpM1FrQ0lYMkQ0UjZBZ0FBZ0Q0QUQ0UnhBZ0FBYUdqRFJRQlc2Qkd5QWdDRndGbFpkUU5BWHNOb1pNTkZBRmJvL2JFQ0FJWEFXVmwxQjJvQzZTa0NBQUJvWE1ORkFGYm81YkVDQUlYQVdWbDFCMm9ENlJFQ0FBQm9WTU5GQUZib3piRUNBSVhBV1ZsMUIyb0U2ZmtCQUFCb1RNTkZBRmJvdGJFQ0FJWEFXVmwxQjJvRjZlRUJBQUJvU01ORkFGYm9uYkVDQUlYQVdWbDFCMm9HNmNrQkFBQm9STU5GQUZib2hiRUNBSVhBV1ZsMUIyb0g2YkVCQUFCb1FNTkZBRmJvYmJFQ0FJWEFXVmwxQjJvSTZaa0JBQUJvT01ORkFGYm9WYkVDQUlYQVdWbDFCMm9KNllFQkFBQm9OTU5GQUZib1BiRUNBSVhBV1ZsMUIyb0s2V2tCQUFCb01NTkZBRmJvSmJFQ0FJWEFXVmwxQjJvTDZWRUJBQUJvS01ORkFGYm9EYkVDQUlYQVdWbDFCMm9NNlRrQkFBQm9JTU5GQUZibzliQUNBSVhBV1ZsMUIyb042U0VCQUFCb0dNTkZBRmJvM2JBQ0FJWEFXVmwxQjJvTzZRa0JBQUJvRk1ORkFGYm94YkFDQUlYQVdWbDFCMm9QNmZFQUFBQm9FTU5GQUZib3JiQUNBSVhBV1ZsMUIyb1E2ZGtBQUFCb0RNTkZBRmJvbGJBQ0FJWEFXVmwxQjJvUjZjRUFBQUJvQ01ORkFGYm9mYkFDQUlYQVdWbDFCMm9TNmFrQUFBQm9BTU5GQUZib1piQUNBSVhBV1ZsMUIyb1Q2WkVBQUFCbytNSkZBRmJvVGJBQ0FJWEFXVmwxQkdvVTYzeG84TUpGQUZib09MQUNBSVhBV1ZsMUJHb1Y2MmRvNk1KRkFGYm9JN0FDQUlYQVdWbDFCR29XNjFKbzRNSkZBRmJvRHJBQ0FJWEFXVmwxQkdvWDZ6MW8yTUpGQUZibythOENBSVhBV1ZsMUJHb1k2eWhvME1KRkFGYm81SzhDQUlYQVdWbDFCR29aNnhOb3dNSkZBRmJvejY4Q0FJWEFXVmwxQldvYVdGN0RhTERDUlFCVzZMbXZBZ0QzMkZrYndGbUQ0T1dEd0J0ZXd6UEFYc05XaTNRa0NJWDJENFFPQVFBQWdENEFENFFGQVFBQWFMakVSUUJXNklhdkFnQ0Z3RmxaZFFkcUF1blJBQUFBYUxERVJRQlc2RzZ2QWdDRndGbFpkUWRxQSttNUFBQUFhS2pFUlFCVzZGYXZBZ0NGd0ZsWmRRTkFYc05vb01SRkFGYm9RcThDQUlYQVdWbDFCMm9FNlkwQUFBQm9tTVJGQUZib0txOENBSVhBV1ZsMDZHaVF4RVVBVnVnWnJ3SUFoY0JaV1hVRWFnWHJaMmlJeEVVQVZ1Z0Vyd0lBaGNCWldYVUVhZ2JyVW1pQXhFVUFWdWp2cmdJQWhjQlpXWFVFYWdmclBXaDR4RVVBVnVqYXJnSUFoY0JaV1hVRWFnanJLR2h3eEVVQVZ1akZyZ0lBaGNCWldYVUVhZ25yRTJob3hFVUFWdWl3cmdJQWhjQlpXWFVGYWdwWVhzTm9kS3RGQUZib21xNENBUGZZV1J2QVdZUGc5WVBBQzE3RE04QmV3MWFMZENRSWhmWVBoRHNCQUFDQVBnQVBoRElCQUFCb1VPVkZBRmJvWjY0Q0FJWEFXVmtQaEIwQkFBQm9TT1ZGQUZib1VxNENBSVhBV1ZsMUIyb0M2ZjRBQUFCb1JPVkZBRmJvT3E0Q0FJWEFXVmwxQjJvRDZlWUFBQUJvT09WRkFGYm9JcTRDQUlYQVdWbDFCMm9FNmM0QUFBQm9NT1ZGQUZib0NxNENBSVhBV1ZsMUIyb0Y2YllBQUFCb25PUkZBRmJvOHEwQ0FJWEFXVmwxQjJvRzZaNEFBQUJvS09WRkFGYm8ycTBDQUlYQVdWbDFCMm9INllZQUFBQm96T1JGQUZib3dxMENBSVhBV1ZsMUJHb0s2M0ZveE9SRkFGYm9yYTBDQUlYQVdWbDFCR29MNjF4b0FPVkZBRmJvbUswQ0FJWEFXVmwxQkdvTTYwZG85T1JGQUZib2c2MENBSVhBV1ZsMUJHb042ekpxQzJnYzVVVUFWdWl2clFJQWc4UU1oY0IxSVlQR0N6Z0dkUVJxQ09zVGFCVGxSUUJXNkUrdEFnQ0Z3RmxaZFFWcUNWaGV3elBBWHNNendFQmV3MWFMZENRSWhmWVBoQ3NCQUFDQVBnQVBoQ0lCQUFCb0RPVkZBRmJvR3EwQ0FJWEFXVmtQaEFnQkFBQm9BT1ZGQUZib0JhMENBSVhBV1ZrUGhQTUFBQUJvOU9SRkFGYm84S3dDQUlYQVdWbDFCMm9DNmJzQUFBQm82T1JGQUZibzJLd0NBSVhBV1ZrUGhNSUFBQUJvNE9SRkFGYm93NndDQUlYQVdWa1BoSzBBQUFCbzJPUkZBRmJvcnF3Q0FJWEFXVmwxQkdvRTYzeG8xT1JGQUZib21hd0NBSVhBV1ZsMUJHb0Y2MmRvek9SRkFGYm9oS3dDQUlYQVdWbDFCR29HNjFKb3hPUkZBRmJvYjZ3Q0FJWEFXVmwxQkdvSDZ6MW92T1JGQUZib1dxd0NBSVhBV1ZsMUJHb0k2eWhvdE9SRkFGYm9SYXdDQUlYQVdWbDFCR29KNnhOb3JPUkZBRmJvTUt3Q0FJWEFXVmwxQldvS1dGN0RhS1RrUlFCVzZCcXNBZ0QzMkZrYndGbUQ0UFdEd0F0ZXcyb0Q2K0F6d0VCZXd6UEFYc05WaSt4UlU0dGRDRlpYYWpwVDZNc0VCQUNMOElYMldWbUpkZngwQkN2ejZ3bFQ2SVlEQkFCWmkvQ0xmUXlGLzNRaWkwWDhoY0IwRlVCUTZEdWEvdjlaTThsQk84R0pCMzBLaVEvckJzY0hBUUFBQUlQUC8xZFdhQnpDUlFCVDZBc2ZBZ0NEeEJDRndBK0Vjd0VBQUZkV2FCRENSUUJUNlBNZUFnQ0R4QkNGd0ErRVd3RUFBRmRXYUFUQ1JRQlQ2TnNlQWdDRHhCQ0Z3SFVIYWdYcFFnRUFBRmRXYVB6QlJRQlQ2TUFlQWdDRHhCQ0Z3SFVLdUFFUUFBRHBKUUVBQUZkV2FQVEJSUUJUNktJZUFnQ0R4QkNGd0hVS3VBSVFBQURwQndFQUFGZFdhT2pCUlFCVDZJUWVBZ0NEeEJDRndIVUt1QU1RQUFEcDZRQUFBRmRXYU9EQlJRQlQ2R1llQWdDRHhCQ0Z3SFVLdUFRUUFBRHB5d0FBQUZkV2FOekJSUUJUNkVnZUFnQ0R4QkNGd0hVS3VBVVFBQURwclFBQUFGZFdhTkRCUlFCVDZDb2VBZ0NEeEJDRndIVUt1QVlRQUFEcGp3QUFBRmRXYU1UQlJRQlQ2QXdlQWdDRHhCQ0Z3SFVIdUFjUUFBRHJkRmRXYUx6QlJRQlQ2UEVkQWdDRHhCQ0Z3SFVIdUFnUUFBRHJXVmRXYUxqQlJRQlQ2TllkQWdDRHhCQ0Z3SFVIdUFrUUFBRHJQbGRXYUxEQlJRQlQ2THNkQWdDRHhCQ0Z3SFVIdUFvUUFBRHJJMWRXYUxTNlJRQlQ2S0FkQWdDRHhCRDMyQnZBSlFEdy8vOEZBQkFBQU9zRGFnUllYMTVieWNOV2kzUWtDRFBBVUdvQlVGQlc2TDZrL3YrRHhCU0Z3SFFKVnVqM28vNy9XVjdEYUpUQ1JRQlc2T21wQWdDRndGbFpENFFpQVFBQWFJekNSUUJXNk5TcEFnQ0Z3RmxaRDRRTkFRQUFhSVRDUlFCVzZMK3BBZ0NGd0ZsWmRRZTRBUUFCSUY3RGFIekNSUUJXNktlcEFnQ0Z3RmxaZFFlNEFnQUJJRjdEYUhUQ1JRQlc2SStwQWdDRndGbFpkUWU0QXdBQklGN0RhR2pDUlFCVzZIZXBBZ0NGd0ZsWmRRZTRCQUFCSUY3RGFGekNSUUJXNkYrcEFnQ0Z3RmxaZFFlNEJRQUJJRjdEYUZEQ1JRQlc2RWVwQWdDRndGbFpkUWU0ZHlJQklGN0RhRXpDUlFCVzZDK3BBZ0NGd0ZsWmRRZTRBUUFDUUY3RGFFRENSUUJXNkJlcEFnQ0Z3RmxaZFFlNEFnQUNRRjdEYURqQ1JRQlc2UCtvQWdDRndGbFpkUWU0QWdBRFVGN0RhRERDUlFCVzZPZW9BZ0NGd0ZsWmRRZTRBd0FEVUY3RGFDVENSUUJXNk0rb0FnRDMyRmtid0ZrbCsvLzhyd1VFQUFOUVhzTzRBUUFEVUY3RFUxWlhpL0ZvNkFFQUFEUGJqWDVTVTFmb0h2OERBTWNINkFFQUFLRlVja1lBaVVaV3VBUUVBQUNKUmxxSlJtS0xodHdFQUFDRHhBdzd3OGRHWGdjQUFBQjFLemllc1FRQUFMaWZBQUFBZFFXaHJJTkdBR2dBZ0FBQVUxTVB0OEJxQVZEL05VeHlSZ0QvRlJ5a1JRQ0pSbWFMaHVnRUFBQTd3M1FFT0JoMUQ0dUduQVFBQUR2RGRRVzRLS2RGQUdpQUFBQUFVSTFHYWxEb2FCc0NBSVBFREZkVC94WDhva1VBaGNCMUE0bGVWbDllVzhOVGkxd2tDRmFMTlNDa1JRQlhpM3drRkZkb2dmOEFBRlAvMWxkb2Z2OEFBRlAvMWxkb2YvOEFBRlAvMWxkb2dQOEFBRlAvMWw5ZVc4SUlBRFBBUU1QL2RDUUUveFZrcEVVQWFnQnFBT2pEd2dJQW9aQnpSZ0NGd0ZsWmRBZFEveFY0cEVVQW9RQmlSZ0JXTS9abU9UQjJINHNNdFNpRVJnQ0Z5WFFIYWdIb3Q0SC8vNkVBWWtZQUQ3Y0FSanZ3Zk9I"
	Static 19 = ""
	Static 20 = ""
	Static 21 = ""
	Static 22 = "QWozUlFCVzZCWStBZ0NGd0ZsWmRRaUlYZjdwakFFQUFJQStBQStGZ3dFQUFJaGQvK2w3QVFBQWFBRDNSUUJXNk93OUFnQ0Z3RmxaZFJXRFRjd1FoTnNQaEY0QkFBQ0RUY2dRNlZVQkFBQnFCbWo0OWtVQVZ1Z0hQZ0lBZzhRTWhjQjFZSVBHQmpnR2RCQlc2Q3NzL3YrRndGbDFCWVRiRDVURGdIMExBSFFWaE5zUGhCd0JBQUNEVGN3Z2cwM0lJT2tQQVFBQS8zWEVNOENFMncrVndFQlFhQUlSQUFDTFJmRC9NUDhWNEtSRkFJWEFENFhyQUFBQUlRY2hSd1RwNFFBQUFHb0ZhS0QyUlFCVzZKTTlBZ0NEeEF5RndIVXdnOFlGT0FaMEVGYm90eXYrLzRYQVdYVUZoTnNQbE1PQVRjM3c5dHU0QUJBQUFCdmJJOWdEMkFsZHlPbWRBQUFBYWdSbzhONUZBRmJvVHowQ0FJUEVESVhBZFI2RTJ3K0VnUUFBQUlOTndDS0R4Z1JXNkdzci92OUlpVVhZaVVYYzYycG85TFJGQUZibzNEd0NBSVhBV1ZsMUhUaEZDM1FKeDBXOEF3RC8vK3RNLzNYRWFnQm9FeEVBQU9rLy8vLy9nSDBMQUhRM2FBajNSUUJXNktnOEFnQ0Z3RmxaZFFuSFJid0JBUC8vNngwendGQlFVRkJXNkVjMy92K0R4QlNGd0hRS1Z1aUFOdjcvaVVXOFdZcEYvWXROK0lnQmk4RlE2QkkyL3YrTDhJQStBRmtQaGJuOS8vK0xYZkNBZlFzQWREVC9kZlNMUlF6L01PZ21PLzcvZzAzQUFWbFppVVhRalVXNFVHb0FhQUFSQUFEL00vOFY0S1JGQUlsRnhKbUpCNGxYQk90R2czMFFBbjRYLzNYMGkwVU0vM0FJNk9zNi92K0RUY0FCV1ZtSlJkQ0RmY0FJZFFhRGZjd0FkQjJOUmNCUU0vWldhQTBSQUFEL00vOFY0S1JGQUlYQWRRV0pONGwzQklCOS93QjBFdjkxeEdvQWFCUVJBQUQvTS84VjRLUkZBSUI5L2dDK0N4RUFBSFFPLzNYRWFnVlcvelAvRmVDa1JRQ0RmZXdBZEIvL2RjVC9kZXhXL3pQL0ZlQ2tSUUNGd0hVTU9FVUxkUWVESndDRFp3UUFXMTlleWNOVmkreTRNQ0FBQU9qRG1BTUFVMWFMZFFpTEJnKytRQVpRNlBJL0FnQ0QrRlNMUmdSWkQ1VEJNOXVKUlFpSkhvbGVCS0VJVVVZQWkwQk1pd1NGZ0hsR0FEdkRENFFCQVFBQWkwQlFPOE1QaFBZQUFBQTZ5NHNBVjRsRitBK0ZoQUFBQUl0OURGUC9OK2psTXY3Ly8zVUlpVVg4LzNjRTZPTTUvdjlRNktjMC92OFB2Z0JRNklZL0FnQ0R4QmlENkVLL0FQQUFBSFFWU0hRTlNFaDFGY2RGQ0NBQUFBRHJESWw5Q09zSHgwVUlFQUFBQVA5MUNQOTEvR2duRVFBQS8zWDQveFhncEVVQUkwVUlPWDBJZFJFOUFDQUFBSFZ6aTBYOGlRYUpYZ1RyYVR2RGRHWHI4SXRORElzQmczZ0lBM1ZZaXpoVC8zRUU2Rll5L3Y5WmlVWFVXWTJGME4vLy80bEY0STFGMEZCVGFBd1JBQUQvZGZqSFJkQUJBQUFBeDBYay94OEFBUDhWNEtSRkFJWEFhZ0ZUaTg5cS8zUU4vM1hnNkpBdC92K0xSZFRybGxQb2hTMysvMTllVzhuRFZZdnNVVkZXaTNVSWkwWUVNOGxYaXo2SlJmaUpEb2xPQktFSVVVWUFpMEJNaXdTRmdIbEdBRHZCRDRRQ0FRQUFpMEJRTzhFUGhQY0FBQUNEZlJBQml3QlRpMTBNaVVVSWZRV0pUZnpyRFZIL00raXRNZjcvV1ZtSlJmeURmUkFDRDQyRkFBQUFENzVIQjFEb1VqNENBSXJZRDc1SEJsRG9SajRDQUlQb1ExbFpkRENENkF0MEdVaElkQW1ENkFOMVEyb0o2end6d0lEN1FRK1V3RUJBNnpZendFQTVSUkI4Qm9OOS9BQjFLRFBBNnlTQSswOTFGelAvVjFkb0JSRUFBUDkxQ1A4VjRLUkZBSWwrQk90Z2FnUlk2d09MUlFqL2RmeFFhQW9SQUFEL2RRai9GZUNrUlFEclFQOTErUDl6Qk9nYU9QNy9VT2plTXY3L0Q3NEFVT2k5UFFJQWc4UVFQRU4xQkxNQjZ3WThSblVkTXR2L2Rmei9kUWpvWm13QUFJVGJXVm1MK0hVM2k4ZVppVllFaVFaYlgxN0p3MmdBOEFBQVYyZ25FUUFBLzNVSS94WGdwRVVBd2VnTVNJUDRBWFRXVi85MUNPZ3JiQUFBV1ZtTCtJWC9kZExyeTFXTDdJSHNGQVFBQUZOWGkzMElpd2NQdmtBR1VPaENQUUlBTTl0WmkwOEVpVTM0aVIrSlh3U0xEUWhSUmdDTFNVeUxESTJBZVVZQU84c1BoUDhCQUFDTFNRUTd5NGxOQ0ErRThRRUFBRHhKVmcrRU5RRUFBRHhRZEg0OFZBK0Yyd0VBQUlOOUVBSjlCelAyaVYzMDZ4aUxSUXhULzNBRTZDSXcvditMOElQdUFWa2IwMW1KVmZTRGZSQURmUVdKWGZUckdvdEZERlAvY0Fqby95LysvNHZZRDZUYUNGbFp3ZU1JaVZYMC8zWDRpMFVNL3pEbzhEYisvMWxaVUF2elZtZ0JCQUFBLzNVSS94WGdwRVVBbVlrSGlWY0U2V1VCQUFBejlqbGRFSWxkL0g0NGkwVU1qWTNzKy8vL0s4R0pSZlRyQTR0RjlJMEVzRlAvdEFYcysvLy82Smd2L3Y4QlJmeUxSZnlKaExYcysvLy9SanQxRUZsWmZOaURqTFhzKy8vLy8xTlRpeDNncEVVQWFBWUVBQUQvZFFoRy85TTc4SWxGOUgwb2lYWDhhZ0QvZGZ4b0ZBUUFBUDkxQ1AvVGhjQjBCMUQvRlNpa1JRRC9SZnlMUmZ3N1JmUjgyNDJGN1B2Ly8xQldhQVFFQUFEL2RRai8wNFhBZEFpTFJRanBTLy8vL3pQQU05THBRLy8vLzROOUVBSjhFNHRGREZQL2NBVG9BQy8rLzRQNEFWbFpmUU16d0VDTE5UeWtSUUJUVUkxRjdGQnFNdi9XVUdveC85YUxkUXhRLzNYNC96Ym8zelgrLzFsWlVPaDhvUUVBZzhRWU84T0pSZmgwWVlOOUVBTjlCWWxkL09zUFUvOTJDT2l0THY3L1dVaFppVVg4aXpYZ3BFVUFVLzkxL0dnVUJBQUEvM1VJLzliL2RmaUpSZlQvZGZ4b0R3UUFBUDkxQ1AvV2hjQjBFemxkOUl0RitKbUpCNGxYQkhRTy8zWDA2d1AvZGZqL0ZTaWtSUUJlWDF2Snc0dEVKQWhXaTNRa0NQOTJCUDh3NkZRMS92OFB0Z0JabVZtSkJvbFdCRjdEaTBRa0NHb0EvekRvTGk3Ky80WEFpMVFrREZsWmkwb0VmQTg5L3dBQUFIOElpQUhHUVFFQTZ3UEdBUUNEWWdnQWlRckRWWXZzZ2V3RUFRQUFWbzJGL1A3Ly8xQ0xSUXovTU9qNU5QNy9pM1VJaTA0RWcyWUlBSWtPalUzOFVWRG80YkFCQUlQRUVJVEFkQjcvZGZ6L051aGVzUUVBaXdhQU9BQlpXWFVReGdCWWl3YkdRQUVBNndXTEJzWUFBRjdKdzFXTmJDU1lnZXpRQVFBQVZvdDFlSXNHVjR0OWNJWC94Z0FBZFF2ZEJYak5SUURwZUFNQUFJUC9ERk44QzRQL0szOEd4a1Y3QWVzMWcvOEh4a1Y3QUhRc3U1UUJBQUJUallXWS92Ly9VUDkxZFA4VmVLVkZBSVhBZEJKVGpZV1kvdi8vYWdCUTZPNkxBd0NEeEF5RC93Z1BoSWtBQUFDRC93a1BoSUFBQUFDRC93cDBlNFAvQzNSMmpVVTBVUDkxZE1kRk5EUUFBQURIUlRqL0FBQUEveFZ3cFVVQWhjQjBDOTBGZU0xRkFPbnJBZ0FBZ0gxN0FIUkdpMTFValUvMDArdUE0d0dBZlh3QWRCSVB0c09aeDBZSUFRQUFBSWtHaVZZRTZ4V0xEb1RiRDVUQS9zZ2s3d1JWaUFHTEJzWkFBUUFQdHNPSlJYamJSWGpwbndJQUFFK0Qvd29QaDRrQ0FBRC9KTDNPOGtFQWk0WEEvdi8vMjBVOGk4Z3JqYnorLy84NWhieisvLzhid0NQQmRCNkxUVHlGeVgwRzNBWEF3RVVBM0ExQTUwVUFpVVY0MjBWNDZVRUJBQUNMUlR6cFRRRUFBSXVGeVA3Ly85dEZRSXZJSzQzRS92Ly9PWVhFL3YvL0c4QWp3WFFlaTAxQWhjbDlCdHdGd01CRkFOd05RT2RGQUlsRmVOdEZlT24rQUFBQWkwVkE2UW9CQUFDTGhkRCsvLy9iUlVTTHlDdU56UDcvL3ptRnpQNy8veHZBSThGMEhvdE5SSVhKZlFiY0JjREFSUURjRFVEblJRQ0pSWGpiUlhqcHV3QUFBSXRGUk9uSEFBQUFpNFhrL3YvLzIwVklpOGdyamVEKy8vODVoZUQrLy84YndDUEJkQnVMVFVpRnlYMEczQVhBd0VVQTNBMUE1MFVBaVVWNDIwVjQ2M3VMUlVqcGh3QUFBSXVGN1A3Ly85dEZUSXZJSzQzby92Ly9PWVhvL3YvL0c4QWp3WFFiaTAxTWhjbDlCdHdGd01CRkFOd05RT2RGQUlsRmVOdEZlT3M3aTBWTTYwcUxoZlQrLy8vYlJWQ0x5Q3VOOFA3Ly96bUY4UDcvL3h2QUk4RjBLb3ROVUlYSmZRYmNCY0RBUlFEY0RVRG5SUUNKUlhqYlJYaUZ3SDBHM0FYQXdFVUEzdm5wK0FBQUFJdEZVSVhBRDQzdEFBQUEzQVhBd0VVQTZlSUFBQUNMUlZ3OS8vOEFBSFVaYUVEaVJRRC9OdWlQaUFNQTNRVlE3RVVBV1ZucHlBQUFBSWxGZU50RmVJTm1CQUNGd01kR0NBRUFBQUNKQmcrTnJRQUFBTndGd01CRkFPbWlBQUFBallXYy92Ly9VUDgyNkU2SUF3QlpXZW1YL2YvL2k0WFUvdi8vaVVWNDIwVjQ2NzJMaFFELy8vK0pSWGpiUlhqcnIvYUYrUDcvL3dHTE5uUUV4Z1phUnZhRitQNy8vd0owQk1ZR1VrYjJoZmorLy84RWRBVEdCbFZHOW9YNC92Ly9DSFFFeGdaV1J2YUYrUDcvL3hCMEhzWUdVRWIyaGZqKy8vOGdkQVRHQmtSRzlvWDQvdi8vUUhRRXhnWkRSc1lHQU9rVy9mLy8zVVVzM1JiSFJnZ0NBQUFBVzE5ZWc4Vm95Y000OEVFQWUvQkJBTDd3UVFBQjhVRUFRZkZCQUg3eFFRRGI4VUVBSlBKQkFEbnlRUUJIOGtFQVZmSkJBRk9MWENRSWhOdDFCRExBVzhPTFJDUU1TSFJYU0hSRmdEMlpnMFlBQUhVWWdEMmFnMFlBQUhVUEQ3YkRVUDhWMktSRkFPbUZBQUFBVmcrMjgxYi9GVWlrUlFDRTVIZ1BWdjhWMktSRkFJVGtlQVF6d09zRE04QkFYbHZERDdiRFVQOFYyS1JGQUZ1RDRBSERVK2dsWGdJQWhNQlpkQmVEUFl4elJnQUFEN2JEZERTS2dIaHlSZ0RBNkFkYnd6UEFPUVdJYzBZQWRCeFFVRlBvYUQ3Ly80UEVESVRBZEFocUFlaXhNZi8vV1ErMncrdlBEN2JEVVA4VlNLUkZBTUhvRHlRQlc4TlZpK3lCN0FRQ0FBQlRWb3QxREZlTmhmeisvLzlRL3pib0F6RCsvMWxaTTl0VGkvai9GWVNrUlFCUWFnRlRVMWZvb0dmLy80UEVGRHJEaUVYOGRUaUxkUWhUalVYOFVGZUpYZ2pvVWpnQUFJUEVERHZEZFFqSEJ0aWxSUURyYVl0T0JHb0JWdjkxL0lrT1VPajYrdi8vM2RpRHhCRHJVWU45RUFGK0U0MkYvUDMvLzFEL2RnVG9sQy8rLzFsWjZ3VzQyS1ZGQUErK0FGRG9ORFVDQUlQNFVGbDBDb1A0VkhVSWFnSmI2d016MjBOVC8zWDg2SUwrLy84UHRzQlptVm1MVFFpSkFZbFJCRjllVzhuRGkwUWtDRmFMZENRSS8zWUUvekRvUUMvKy8xbFpVTG5nZkVZQTZQMEZBd0QzMkJ2QTk5aVppUWFKVmdSZXc0dEVKQWhXaTNRa0NHb0EvM1lFL3pEb0VDLysvMWxaVUxuZ2ZFWUE2RUgwQWdDRndIUU1pMEFRbVlQQUFZUFNBT3NFTThBejBva0dpVllFWHNOVmkreUQ3QkJUaTEwSWcyTUlBRmFMY3dSWGkzME14d1BZcFVVQWFnRC9ONGwxOU9pMEovNy9nMlg0QUlOOUVBRlpXWWxGOE1aRkN3QithMWIvZHdUb3BDNysvNEE0QUZsWmRGZHFBRkM1NEh4R0FPak84d0lBaGNDSlJmZ1BoRjRCQUFDQWVERUFENFZVQVFBQWkwZ01nL2tFRDQ5SUFRQUFPVWdRRDR3L0FRQUFNOUtGeVg0ZWkwQUlnOEFFWm9NNEFBK0ZLUUVBQUVLRHdCQTcwWHp1NndUR1JRc0JvV0I3UmdDRndIVVlhSEFYQUFEbzJ3QUNBSVhBV2FOZ2UwWUFENFQ2QUFBQWl4VmtlMFlBTS8rRjBuNFJpOGlMZGZBNU1YUUlSNFBCRER2NmZQRTcrZytjUmYrTHo0SHA5QUVBQVBmWkc4a2p6NEI5L3dDTkRFbU5OSWgwV1l0R0JQOHcvM1gwNkhtRUF3Q0FmUXNBaTBYMFdWbUpBM1Ezb1dSN1JnQklPL2lqWkh0R0FBK05rQUFBQUlzVllIdEdBQ3ZIalFSQXdlQUNqUXgvalF5S1VJMUJERkJSNkZxSUF3Q0R4QXpyYklOOUVBSjhadXN5Z0gwTEFIVmVnMzBRQW54WWdmLzBBUUFBZEZDTFJmaUxmZlJDaVJWa2UwWUEvekJYNkFTRUF3QlppVHRtZzJZSUFGbURmUkFDaTBYd2lRYUxSZmlKUmdSK0ZZdEZER29BLzNBSTZDOG0vdjlaV1dhSlJncnJESUI5L3dCMUJtYkhSZ29CQUY5ZVc4bkRpMFFrQklPZ3VBQUFBQURHZ01RQUFBQUJ4b0RHQUFBQUFNYUF4UUFBQUFISFFDd0FBQUNBdzFXTDdJSHNsQUFBQUZPTFhReUFleElBVm90ekYzUktvYmh6UmdBN0JYeFFSZ0I4QnpQQTZhc0JBQUNMRFhoN1JnQm9nQUFBQUdvQjZFQW4vdjlRallWcy8vLy9VT2dqb1FFQWkwWUVEN1lBVUdvQmFnQnFBT2pHNVA3L2c4UWM2eU9oQ0ZGR0FJdElPQVhPQUFBQWlVMzBEN1lJaGNtSlRmQjBDY1lBQVA4TnZITkdBSXRERTRzTkNGRkdBRmN6LzRsQk9JbDkvRGwrS0g0WmpVWDRVSTFGL0ZCVzZJSE8vditEeEF5RndBK0VJUUVBQUlCN0VRQjJLWU5sREFDTFJRaUxUUXhxR0dvQS96UzRpMFlJaXd3QjZHVWsvdjhQdGtNUmcwVU1FRWM3K0h6Yk8zNE1mVldMeDhIZ0JJbEZESXRHQ0FORkRBKzNTQVpKZENaSmRCUkpkVERkUUFoUlVZc0kzUndrNkRQUS92L3JILzl3RElzSS8zQUk2RmtsL3YvckVJc0lhZ0ZxQUdyLy8zQUk2RGNnL3YrRFJRd1FSenQrREh5ei94VnNva1VBbzZ5QlJnQ2pxSUZHQUkxRjdGQ0x6dWltbHY3L2kwWHNnRGdBZEF0UTZMZ20vdjlaaS9qckFqUC9qVVg0VUkxRi9GQlc2TU9XL3YrRHhBeUFleElBZEErTmhXei8vLzlRNkdEai92OVo2MENoQ0ZGR0FJdE45SWxJT0tFSVVVWUFPd1ZnYjBZQWRSV0FQWTJCUmdBQWRReFE2QjcrLy8raENGRkdBRm1EZmZBQWRBM0dnTTRBQUFBQi93VzhjMFlBaThkZlhsdkp3Z2dBVll2c2dld0VBZ0FBVTR0ZENJTmpDQUJXaTNVTWpZWDgvdi8vVU1jRDJLVkZBUDgyNlBVcS92K0FPQUJaV1ErRVJRRUFBRmRxQUZDNTRIeEdBT2dhOEFJQWkvaUYvdytFTEFFQUFJQi9NUUFQaFNJQkFBQ0RmUkFDZlFuSFJmellwVVVBNnhTTmhmejkvLzlRLzNZRTZLb3EvdjlaV1lsRi9JTjlFQUorSTJvQS8zWUk2SWtqL3Y4N1J3eFpXWWxGQ0ErUDRRQUFBRHRIRUErTTJBQUFBT3NHaTBjUWlVVUlnL2dmRDQvSEFBQUFpMDhNTTlLRnlYNFlpMGNJZzhBRVpvTTRBQStGcmdBQUFFS0R3QkE3MFh6dWFpQnFBUDhWUEtKRkFJdndoZllQaEpJQUFBQm9tUFpGQVA5MS9NY0c2QUFBQU1kR0JBQ05SQ1RIUmdnSVVQOFZ4MFlNeEdSR0FPZy9vUUVBV1ZtTFRRakI0UnIzMkJ2QTk5QWp3UVZaZzhRQWczMFFCSWxHRUdiSFJoVC80WDBFaThickQ0dEZER29BLzNBTTZNOGkvdjlaV1lsR0dJcEZDR2lVOWtVQS8zWDhpWDRjaUVZVzZPK2dBUUQzMkJyQS9zQ0lSaGVMeHBsWldjZERDQUVBQUFDSkE0bFRCRjllVzhuRFZZdnNnZXdVQkFBQVU0dGRERmFMZFFpTEJvbEY3STJGN1B2Ly8xY3ovNGxGQ0kxRjhJbCtDQ3ZZTzMwUWZBZTQyS1ZGQU9zUi8zVUlqUVM3LzNRRjhPaGNLZjcvV1ZtQlJRZ0FBUUFBaVVTOThFZUQvd1I4MG90RjdBKytRQU5RNk80dUFnQ0QrRVZaZFNNendGQlFhZ0ZRLzNYOC8zWDQvM1gwLzNYdy96VUlVVVlBNk9uUEFRQ0R4Q1RySEdvQi8zWDgvM1g0LzNYMC8zWHcvelVJVVVZQTZDUE5BUUNEeEJpTFRnU0pEc1lCTUlzT3hrRUJlSXNPUVdvUVFWRlE2RUVWL3YrRHhBeGZYbHZKdzR0RUpBaFRpMXdrQ0ZhTE1GZUwrNldscFZPbDZKTW4vditGd0ZsME1ZTjdDQUYxSFl0REJJWEFpd3QvSW53RWhjbHpIUGZaZzlBQTk5aUpDNGxEQk9zTzNRTlJVZDBjSk9oNkJBQUEzUnRmWGx2RFZZdnNVVkZXaTNVTS96Ym9TU2YrLzRYQVdYUnUvM1lFNkR3bi92K0Z3RmwwWVlzR2czZ0lBWFVxaTA0RWcza0lBWFVoaXhHTFNRU0w4Z3Z4ZEVWUlV2OXdCUDh3Nk1tSkF3Q0xUUWlKQVlsUkJPczhhZ0JxQVZEb2Z5ZisvOTFkK0dvQWFnSC9kZ1RvY0NmKy85MEZlTTFGQU5uQmc4UVkydW5mNFBiRVJIb1MzZGlMUlFpRFlBZ0F4d0RZcFVVQVhzbkRpM1VJZyt3UTNWd2tDTWRHQ0FJQUFBRGRSZmpkSENUbzlnTUFBTjBlNjkxVmkreFJVWU45RUFGVGkxME1Wb3QxQ0ZlTGZnUitKV29BLzNNRTZLRWcvditKUlFqYlJRamRIQ1JSM1FWQThFVUFVZDBjSk9qNEF3QUE2d2FEWlFnQTJlaHFBTjFkK0dvQi96UG8yaWIrLzl3VmVNMUZBTnhOK0lQRURGRlIzK0QyeEFGMUVOd0YwT1ZGQU4wY0pPaFhBd0FBNnc3Y0pkRGxSUURkSENUbzdnSUFBSU45Q0FEY2RmamRGbjRlVVZIZEhDVC9kUWhvalBaRkFGZm8vcXIrLzRQRUZJTm1DQUNKUHVzdDNCVjR6VVVBMytEMnhFRjFDTjBGT1BCRkFPc0czUVV3OEVVQTJjSFl3ZWc4aWdNQTNkamQySWtHaVZZRVgxNWJ5Y05WaSt4UlVZdEZERlpxQUdvQi96RG9PQ2IrLzkxZCtJdDFDSXNHRDc0QVVPaDlMQUlBZzhRUWcvaEczVVg0VVZIZEhDUjFCK2l5QWdBQTZ3WG9VZ0lBQU53VmVNMUZBTi9nOXNSQmRRamRCVGp3UlFEckJ0MEZNUEJGQU5qQjZNdUpBd0RkMklrR2lWWUVYc25EaTBRa0NGYUxkQ1FJYWdESFJnZ0NBQUFBYWdIL01PakVKZjcvV2QwY0pPZzNBZ0FBM1I1ZXcxV0w3RkZSaTBVTWFnQnFBZjh3NktRbC92L2RWZmpjSFhqTlJRQ0R4QXpmNFBiRUJYb1BpMFVJZzJBSUFNY0EyS1ZGQU1uRFZvdDFDSXNHeDBZSUFnQUFBQSsrUUFGUTZNRXJBZ0NENkUvZFJmaFpVVkhkSENSMEVraElkQWZvUWdJQUFPc002SUVDQUFEckJlaEJBZ0FBM1I1ZXljT0xSQ1FJVm90MEpBaHFBTWRHQ0FJQUFBQnFBZjh3NkNZbC92OVozUndrNkpBQkFBRGRIbDdEaTBRa0NGYUxkQ1FJYWdESFJnZ0NBQUFBYWdIL01PaitKUDcvV2QwY0pPZ2dBZ0FBM1I1ZXc0dEVKQWhXaTNRa0NHb0F4MFlJQWdBQUFHb0IvekRvMWlUKy8xbmRIQ1RvQ2dJQUFOMGVYc05WaSt4UlVZdEZER29BYWdIL01PaTJKUDcvM0JXUTFFVUFnOFFNM1ZYNDMrRDJ4RUYwUTl3ZFVPeEZBTi9nOXNRRmV6aFdpM1VJaXdiSFJnZ0NBQUFBRDc1QUFWRG8xU29DQUlQNFU5MUYrRmxSVWQwY0pIVUg2SE1BQUFEckJlZytBQUFBM1I1ZXljUGQySXRGQ0lOZ0NBREhBTmlsUlFESnc0dEVKQWhXaTNRa0NHb0F4MFlJQWdBQUFHb0IvekRvTkNUKy8xbmRIQ1RvWndBQUFOMGVYc1BkUkNRRTJlalo0TmpabTkvZ2RCVFp3Tm5vM3VIWnlkbm8zc0hlK2RuNjJlanJCTm5vMmU3Wjg5ekF3Z2dBM1VRa0JObkEyZUhZRlZoaVJnQ2IzK0NlZGhEWjZON2gyY0Rjd05uSjNNamU2ZXNLM2RqWndOekkyZWplNGRuNjJmUENDQURkUkNRRTJlalo4OElJQU4xRUpBVFo0Tm5vMmNIWitJUHNCTmtVSk5uS2l3UWtQUUFBQUlCMkF0amgyT0xkMmQzWjJlQll3Z2dBM1VRa0JObi93Z2dBM1VRa0JObnEzc25aNk5uQjJmalo4TjdCMmYzWnlkM1l3Z2dBM1VRa0JObmh3Z2dBM1VRa0JObm8yY0haK0lQc0JOa1VKTm5LaXdRa1BRQUFBSUIyQXRqaDJPTGQyZDNaV01JSUFOMUVKQXpkUkNRRTJmalp5ZDNZd2hBQTNVUWtETjFFSkFUY3lObkozTWpld2RuNndoQUEzVVFrQk5udDJjblo4Y0lJQU4xRUpBVFo3Tm5KMmZIQ0NBRGRSQ1FNM1VRa0JObmttOS9nbm5RTzJmSFo2Tm5CMmZqWjhON0IyZjNkMmNJUUFOMUVKQVRaL3NJSUFOMUVKQVRaK3NJSUFOMUVKQVRaOHQzWXdnZ0FWWXZzZyt3d1UxWlhpejM0cEVZQS8zVUlpVTMwaVgzODZERnkvLytMOERQYk8vTlpENFRkQmdBQWpVYi9nL2dhRDRkZkFRQUEveVNGblFoQ0FJdEZESW9BT3NPTHozUU1EN2JBbVdvWVV1bGhCd0FBYWdGVGF2OVQ2YkFHQUFEL2RRem9sQkwrL3p2RFdRK01sd1lBQUQzL0FBQUFENCtNQmdBQWFnRlRpRVhRYXYrTlJkQ0lYZEZRNlg0R0FBRC9kUXlMVGZSWDZPd0hBQURwOXdBQUFJcEhGenJEZFFhTFJ3eUtRQmM4QW5Wc1UxTnEvLzkxREw3cC9RQUFVMWIvRmV5Z1JRQTd3NGxGRUErRU53WUFBQVBBdjlpQlJnQlFpOC9vQ2pvQ0FEdkRkUTZMVGZ4cUFWTnEvMVBwSGdZQUFQOTFFRkJxLy85MURGTlcveFhzb0VVQWhjQ0x6M1VNYU5pbFJRRG9aRFVDQU92UGFnM28rVFVDQU90NmFnMy9GVkNsUlFDRndIUzZ2OWlCUmdDTHorZ3NPUUlBaGNCMHFtb05pOC9vM1RjQ0FEdkRvOWlCUmdBUGhJNEFBQUJRL3hWQW9rVUFPOE9qNElGR0FIUitVMU5UVTJyL1VGTys2ZjBBQUZiL0ZWU2hSUUE3dzRsRkVIUmppMDM4YWdGVFNGQlQ2RVFXL3YrRCtBRlRkQkNMeitnek5RSUFNOEJmWGx2Sndnd0FpMDM4VS85MUVHb0I2RE1jL3Y5UWF2Ly9OZUNCUmdCVFZ2OFZWS0ZGQUZPTHo0dnc2QUUxQWdDTFRmeFQ2QVREL3Y4Nzh3K0Y0d1VBQU9rRy8vLy9VNHZQNk9NMEFnRHArZjcvLzR0OUREUDJPQitKZlF4MFZJdEZESW9RRDdiS2k4R0Q2QXAwT0lQb0dIUXVnK2dFZEM2RDZCWjBIMGhJZEJ1QStuOTJFLzgwamNCZ1JnRG9CWG9EQUZtTmRBWUM2eEJHNncyRHhnVHJDSVBHQnVzRGc4WUYvMFVNaTBVTU9CaDFySXROL0dvQlUxWlQ2SFVWL3YrRCtBRVBoVFgvLy8rTFRmeFE2SFliL3YrTDhPbUtBQUFBaWc4UHRzR0Q2QXAwYjRQb0dIUmFnK2dFZEU2RDZCWjBPVWhJZEM2QStYOTJKY1lHSmcrMkIvODBoY0JnUmdCR1Z1aFlkd01BVnVpQ2VRTUFnOFFNQS9ER0JqdEc2MEtJRHV2NWFIRHdSUURyQldobzhFVUFWdWd4ZHdNQWc4WUU2eVZvWVBCRkFPc1ZhRmp3UlFCVzZCcDNBd0NEeGdickRtaFE4RVVBVnVnS2R3TUFnOFlGV1ZsSE9COFBoVzcvLy8rTFRmeFRpQjdveDhIKy8rbUYvdi8vLzNVUTZJa08vdi9kQlhqTlJRRFp3Vm5hNmQvZzlzUkVENHZWQXdBQVVWSGRIQ1QvZFF6b1pnNysvMUhkSENUb092ei8vMVBkWGZBejlrWldVMWIvZFF6bzRodisvMU5XVTFiL2RSQ0pSUXpvMHh2Ky80UEVLSU45REFJUGhIY0NBQUNEK0FJUGhHNENBQURkUmZEb0ZZTURBT21EQkFBQS8zVU02QkVPL3YvZFhmRC9kUkRvQmc3Ky85MWQrTjBGZU0xRkFGbmRSZkJaMk5uR1JRc0IzK0QyeEFWN0E0aGRDOW5BM1VYdzJ1bmY0UGJFUkhvUzNVWDQzdG5mNFBiRUJRK0xMZ01BQU9zQzNkZzRYUXQwTDRQc0VObm8zVndrQ04xRitOMGNKT2lLKy8vLzNRVjR6VVVBMnVuZjRQYkVSQStLL2dJQUFOMUY4Tm5nM1YzdzNVWDRnK3dRM1Z3a0NOMUY4TjBjSk9pYSsvLy9PRjBMM1Yzd2REbmRCVWp3UlFDRDdCRGRYQ1FJM1VYNDNSd2s2RHI3Ly85UlVkMGNKT2ovK3YvLzNRV1ExRVVBMnVuZjRQYkVSSG9JM1VYdzJlRGRYZkJUTS9aR1ZsTlcvM1VNNk1RYS92OVRWbE5XLzNVUWlVVU02TFVhL3YrRHhDaURmUXdDRDRSWkFRQUFnL2dDRDRSUUFRQUEzVVg0M0IxNHpVVUEzK0QyeEFVUGl6d0JBQURweWY3Ly8vOTFET2puRFA3L1VkMGNKT2h2K3YvLzZXQUNBQUQvZFF6bzBReisvOXdWZU0xRkFGbmY0UGJFQlErTElRSUFBRkZSM1J3azZQNzYvLy9wTndJQUFQOTFET2lvRFA3LzNCMTR6VVVBV2QvZzlzUUZENHY2QVFBQS8zVU02STRNL3Y5UjNSd2s2Slg2Ly8vcEJ3SUFBUDkxRE9oNERQNy8zQjE0elVVQVdkL2c5c1FGRDR2S0FRQUEvM1VNNkY0TS92OVIzUndrNkZqNi8vL3Axd0VBQUl0MUVGYm9udzMrL3pnZVdZbEZFSFFhMjBVUWcrd1EzVndrQ04wRlFQQkZBTjBjSk9oRSt2Ly82d0xaNlA5MUROMWQ4T2dZRFA3LzNCVjR6VVVBM1VYd1dWSFl5VkhmNFBiRUFYVVMzQVhRNVVVQTNSd2szZGpvcVBuLy8rc1EzQ1hRNVVVQTNSd2szZGpvUGZuLy85eDE4Rk5xQVZOcUFmOTFETjFkOE9oa0dmNy9nOFFVZy9nQ0Q0V2IvZi8vT1YwUUQ0NlMvZi8vM1VYdzZUY0JBQUQvZFF6b3FBdisvNFArRGxsUlVkMGNKSFVINkUzNS8vL3JCZWp0K1AvLzNCVjR6VVVBMytEMnhFRjFDTjBGT1BCRkFPc0czUVV3OEVVQTJNSG9ab0FEQU4zWTZkSUJBQUQvZFF6bzR4ZisvNEE0TFZscUFWT0x6MnIvZFFGQVVPbTRBQUFBLzNVTTZFUUwvdjlSM1J3azZIdjUvLy9wdlFBQUFQOTFET2d1Qy83L1VkMGNKT2l0K1AvLzZhY0FBQUQvZFF6b0dBdisvMUhkSENUb1lmbi8vK21SQUFBQS8zVU02QUlML3YvY0ZaRFVSUUJaMytEMnhFRjBWdHdkVU94RkFOL2c5c1FGZTB2L2RRem8zd3IrLzFIZEhDVG84dmYvLyt0Yi8zVU02TXdLL3YvY0ZaRFVSUUJaMytEMnhFRjBJTndkVU94RkFOL2c5c1FGZXhYL2RRem9xUXIrLzFIZEhDVG9qdmYvLytzbDNkaHFBVk5xLzFPTHoraTRFUDcvNlg3Ni8vLy9kUXpvZ2dyKy8xSGRIQ1RveXZmLy8xRlJpOC9kSENUb2NjRCsvK2xjK3YvLy8zVU02RDBYL3YvL2RSQ0w4SXZhNkRFWC92OGo4Q1BhV1ZsVFZ1bXpBQUFBLzNVTTZCd1gvdi8vZFJDTDhJdmE2QkFYL3Y4TDhBdmE2OTMvZFF6b0FoZisvLzkxRUl2d2k5cm85aGIrL3pQd005cnJ3LzkxRE9qb0Z2Ny9POU5aZkNaL0JEdkRjaUE3MDM4Y2ZBV0QrUDkzRldvWTk5QlRpODlRNk9JVC92OHp3RURwMVBuLy8vZlE5OUxyUlA5MURPaXZGdjcvLzNVUWkvQ0wydWdlQy83L1dWbUx5SXZHaTlQb0pJRURBT3NoLzNVTTZJd1cvdi8vZFJDTDhJdmE2UHNLL3Y5WldZdklpOGFMMCtqUmdBTUFVbENMeitqR0ZQNy82WHo1Ly8rL0FFSUE0UUJDQUJFQlFnQWlBVUlBYkFKQ0FKUURRZ0FNQkVJQU5nVkNBRXdGUWdCMUJVSUFwUVZDQU5VRlFnQjFCa0lBZFFaQ0FMMEdRZ0RaQmtJQTd3WkNBQVVIUWdBYkIwSUFVUWRDQUpzSFFnQzlCMElBM2dkQ0FQZ0hRZ0FTQ0VJQVN3aENBRzRJUWdCVmkreUI3Q2dCQUFDTFJRaFRNOXM0V0JkV1YzVUdpMEFNaVVVSWFqOVpNOENJbmRqKy8vK052ZG4rLy8venExT3FhZ0dOaGRqKy8vOVFqVTNZNkF5ei92K0xkZnlKWGZnNVhmaDBLSXROQ0dvQlUvOTE5RlBvNlE3Ky80UDRBUStGbFFFQUFJdE5DRkRvNmhUKy80dndpWFg4NndPSlhmU0xUUXlLQVRyREQ0UTVBUUFBT2dXU1VFWUFkQjg2QlpGUVJnQjBGemxkK0hRSWlBWkdpWFg4NndQL1JmUkJpZ0U2dzNYWmlnRTZ3dytFQ0FFQUFEb0ZrbEJHQUhWZU9WMzRkRkNLVVFFUHZzS0Q2R0YwUEVoME5JUG9CSFFxZytnSWRDQ0Q2QVIwRmtoSWRBMUlTSFFFaUJickljWUdDK3NjeGdZSjZ4ZkdCZzNyRXNZR0N1c054"
	Static 23 = ""
	Static 24 = ""
	Static 25 = ""
	Static 26 = ""
	Static 27 = "L2c5c1JCZFIzZFhWVHJHb3NOK0tSR0FEUDJSbFpUYXY5VGlVMU02S21CL2YvckJkM1lNL1pHZzMxNC93K0VyUU1BQURsZGNBK0VwQU1BQUZOVFUvOTFmSTFGWUZEL0ZZeWxSUUNGd0hRT1ZsTnEvMmpjOUVVQTZZc0RBQUJxTUkyRnBQNy8vMUQvZFdEL0ZaQ2xSUUNGd0hVTGk0WFEvdi8vaVVWSTZ3T0pkVWhxS1RQQU9YVjBXWTI5MlA3Ly8vT3J4NFhVL3YvL3FBQUFBSFU2aTBWd2lZWHMvdi8vYWdPTmhkVCsvLzlRLzNWZy94V0lwVVVBaGNBUGhNNEFBQUQvZFdEL0ZaU2xSUUJXVTJyL2FMRDBSUURwRVFNQUFEUDJPVjFJeGtWL0FJbGRVQStPaUFBQUFJc2RpS1ZGQUlCOWZ3QVBoWkFBQUFBei8xZU5oZFQrLy85US8zVmdpYlhZL3YvLy85T0Z3SFZSaTRYMC92Ly9oY0NKUlVCK1JJQjlmd0IxUG1vQmpZWFUvdi8vVVA5MVlJbTEyUDcvLzRtOTNQNy8vLy9UaGNCMUdvdEZjRG1GN1A3Ly8zVVAvMFZRaTBWUU8wVjBkUVRHUlg4QlJ6dDlRSHk4Ump0MVNIeUdnSDEvQUhVYU05di9kV0QvRlpTbFJRQnFBVk5xLzJoODlFVUE2VjhDQUFBejlqUGJSbzJGZlAvLy80bEZKSXVGNFA3Ly80bEZGSXRGZUlsRkdHb0NqVVVRVVA5MVlNZEZFQmdBQUFESFJTQ1VBQUFBaVhVYy94V0FwVVVBaGNCMEYvOTFZUDhWbEtWRkFGWlRhdjlvVVBSRkFPa0hBZ0FBaTAxc084dDBLNG9CUEMxMEh6d3JkQnVMUlVTQWVBRUFkZ2lMUUFTTFFBVHJCYmpZcFVVQWdEZ3JkUWJHUlhNQjZ3VEdSWE1BTThBN3k0MTlMS3VycTZ1cmkwV0FpVVVzalVWY3gwVW9HQUFBQUlsMU1JbEZQTWRGT0FRQUFBQjBCb0I5Y3dCMEtWT05SU2hRLzNWZy94V0VwVVVBaGNCMEYvOTFZUDhWbEtWRkFGWlRhdjlvTlBSRkFPbDNBUUFBZ1gxNEFRQUJJSElXZ1gxNEJRQUJJSFlKZ1gxNGR5SUJJSFVFc3dIckFqTGJNLzg1Zld3UGhNTUFBQUNFMjNSZGdIMXpBSFE5aTBYZ09VVmNka1dKUlZ4WGpVVW9VUDkxWVA4VmJLVkZBUDkxWUl2dy94V1VwVVVBTy9lNE5LZEZBSFFGdUJ6MFJRQnFBVmRxLzFEcEJBRUFBTjFGVk53ZGVNMUZBTi9nOXNSQmRRV0xSZVRydG90RjRPdXhpMFhrSzBYZ2hjQ0pSWGpiUlhoOUJ0d0Z3TUJGQU4xRlZOd05PT2RGQU43SjZIVHRBZ0NBZlhNQWRJV0xUVnd6OWdQSUUvSXp3RHZ3Znd4OEJUdE40SE1GaTAzZzZ4QXp3RHZ3ZkExL0JUdE41SFlHaTAza2lVVllpVTFjNlZMLy8vLy9kV0QvRlpTbFJRQ0xEWGg3UmdCcUFWZHEvMmcwcDBVQTZFeCsvZitFMjNRYU9YMWN1QVMzUlFCMUJiZzB1MFVBaTAxTWFnRlhhdjlRNjFLTFJWd3JSZUNGd0lsRmVOdEZlSDBHM0FYQXdFVUFpMFhrM0ExQTUwVUFLMFhnaGNDSlJYamJSWGg5QnR3RndNQkZBTjc1VVZHTFRVemRIQ1RveUMzKy8rc1VWbE5xLzJqMDgwVUFpdzE0ZTBZQTZOZDkvZjlmWGx1RHhXVEp3aFFBVll2c1UxYUxkUWhYVm92WjZKTjMvZi9jRlVqblJRQlozK0QyeEFWNkN0M1kzUVZJNTBVQTZ4WGNGVURuUlFEZjRQYkVRWFVJM2RqZEJVRG5SUURjRFRqblJRRGNEVERuUlFEb1RPd0NBSXY0aWdZOExYUWpQQ3QwSDRCN0FRQjJDSXREQkl0QUJPc0Z1TmlsUlFDQU9DdDBCdyszeDR2STYwV05SUWhRLzNVTS94VjhwVVVBaGNCMVU0dE5DQSszd2NIcEVBUEhBOCtGd0xyLy93QUFmUVF6d09zR084SitBb3ZDaGNsOUJEUEo2d1k3eW40Q2k4b1B0OGtQdDhEQjRSQUx5RkgvZFF6L0ZaaWxSUUNGd0hVTWFnRlFhdjlvTktkRkFPc0xhZ0ZxQUdyL2FFeS9SUUNMRFhoN1JnRG8yWHo5LzE5ZVcxM0NDQUNEN0JpS1FRRlRzUUU2eUZVYjdTTXQvS1JHQVA3Qk9zaFdWeHYvSXowQXBVWUEvM1FrTExFRE9zZ2IyeU1kQktWR0FEUEpzUVE2eUw3WXBVVUFpWFFrR0J2Skl3MElwVVlBaVV3a0pMRUZPc2did0NNRkRLVkdBSWxFSkNqb3lvTDkvOGNFSkJUblJRRC9kQ1F3aVVRa0lPaE80UUlBaGNCWldZbEVKQndQaElBQUFBQ05jQU5xTDFibzFlRUNBSVhBV1ZtSlJDUVFkU2hxWEZib3crRUNBSVhBV1ZtSlJDUVFkUkwvZENRYzZJRGdBZ0FEUkNRZ1dZbEVKQkNMUkNRUWdEZ0EiDQoJU3RhdGljIDE1ID0gImkvQVBoTEVBQUFDQWVBRUFENFNuQUFBQWFpLy9kQ1F3Nk9QbkFnQ0w4SXRFSkNTRHdBSTc4RmxaZFE5cVhQOTBKRERveWVjQ0FGbFppL0NOUmdIcmRZdEVKQmlBT0Z4MUw0QjRBVngxS1lQQUFtcGNVT2hHNFFJQWhjQlpXWWxFSkJCMUovOTBKQmpvQStBQ0FBTkVKQnhaaVVRa0VPc1RnSGdCT25VRmc4QUM2KytKZENRUWlYUWtHR3BjLzNRa01PaHE1d0lBaS9DRjlsbFpkWjFxT3Y5MEpERG9WK2NDQUl2d2hmWlpXWFdLaTBRa0xJbEVKQlNGN1hRWmFnRnFBR3IvLzNRa0lJdk42RUI3L2YrRndBK0V5QUFBQURQSk8vbDBFVHZ4ZFRWcUFWRnEvMUdMeitnaGUvMy9haTcvZENRWTZBam5BZ0F6L3p2ZldWbUw4SFJLTy9kcUFWZUx5MnIvZFRKWDZQdDYvZi9yTjRvR1BGeDBIand2ZEJvcmRDUXNSbW9CVVZiL2RDUTRpOC9vMjNyOS80WEFkYmJyWlN0MEpDenI1WTFHQVZEb3hucjkvNFhBZEZJNWZDUWdkQ3M3OTNRSUszUWtGSXZHNndyL2RDUVU2QW5mQWdCWmkwd2tJR29CVjFEL2RDUWc2SlY2L2YrRndIUWhpMHdrSkR2UGRCMkxSQ1FRSzBRa0dHb0JWMUQvZENRazZIUjYvZitGd0hVRU04RHJBelBBUUY5ZVhWdUR4QmpDQkFCVmkreFcvM1VZLzNVVS8zVVEvM1VNNkhFVEFRQ0Z3SFFSYUtEd1JRQlE2RXNVQVFCWldZdnc2d0l6OW1veWF2OW8yS1ZGQVA5MUNPaFJkZjMvV1ZCVy96WDRwRVlBNkRjbkFRQ0R4QmhlWGNJVUFGV0w3TGdBRUFBQTZBSGtBZ0JXVi85MUpQOTFJUDkxR1A5MUZPZ1RFd0VBYUFBUUFBRC9kUWlMOEkyRkFQRC8vMURvMmZrQUFJUEVESVgyZEJGb29QQkZBRmJvMUJNQkFGbFppL2pyQWpQL2kwVU1nRGdBZEJaUTZJVnovZi9jRFhqT1JRQlo2SERvQWdDTDhPc0RnODcvLzNVYzZNSjAvZjlaVUZhTmhRRHcvLzlRLzNVUTZMQjAvZjlaVUZkcUFPaWFKZ0VBZzhRWVgxN0p3aUFBVll2c2dld2tBUUFBVTFkby9nQUFBUDkxQ0kyRjNQNy8vMUNMK2VoUStRQUFqWVhjL3YvL1VPaWozUUlBall3RjNQNy8vNHRIRERQYmc4UVFPOE9KVGZpLzRIeEdBSFF0aVVYOGkwMzhNOEE0V1JZUGxjQkFpVVgwaTBVTU9CaDFPbW9CVTJyL2FEU25SUURvL25qOS8rbXdBUUFBVTJvRFU0MkYzUDcvLzhZQk1JaFpBVkNMeitpS0lmNy9POE9KUmZ4MXR6UEE2WW9CQUFDTFRSQTRHVllQaFBRQUFBQ0w4R29LLzNYNE04QkFpVVVJVU90ay8zVVFWdWh0K3dBQU84TlpXWWxGREhSL2kwMFVLOFk0R1hRcE84TjJKVkJSVnVpMStnQUFpL0NMUlF5RHhBd3J4blFSaTBVTVNGRC9kUlJXNk52NkFBQ0R4QXlMVGZCcUFWTlFWdWhtZVAzL2hjQjBOWXQxREdvSy8zWDRSdjlGQ1A5MUNPaERjUDMvZzhRTVUvOTE5STJGM1A3Ly8xT0x6MURvNFNEKy96dkRpVVh3RDRWMi8vLy9NOERwM0FBQUFGYm9ndHdDQUl2NGkwVVVPQmhaZENvNyszWW1WMUJXNkMvNkFBQXI4SVBFREFQK2kvQjBFNDFNT1A5Ui8zVVVVT2hXK2dBQWc4UU1pL2lMVGZCcUFWTlhWdWpmZC8zL2hjQjBybW9ZVS85MUNPdCtpVVVReDBVSUFRQUFBSXQxRklvR09zTjBFSXRORUlvSk9zaDBCMGFLQmpyRGRmVTRIblZGYWdyL2Rmai9kUWpvbEcvOS80UEVERlAvZGZTTmhkeisvLzlUVUl2UDZESWcvdjg3d3crRVZQLy8vMm9CVTJvQi8zVVFpOGpvY25mOS80WEFENFE5Ly8vLy8wVUkvMFVRaTBVUU9CaDFsSXRGQ0dvWVNGTlFpMDM4NkI1Ny9mOHp3RUJlWDF2SndoQUFWWXZzZ2V5RUFRQUFVMWFMTmZpa1JnQlgvM1VJaS9ub005RCsvNHZRTTlzNzAxbUpWZngxRmY5MUNJdlBVMmhZMEVVQTZIa2dBZ0RwQVFNQUFHb1RNOEJaalgyVWlWMlE4NnN6LzBmMkJiU3pSZ0FCeDBXWVNBQUFBSFVuQ1QyMHMwWUFhRFR4UlFCb3NNQkZBUDhWWEtKRkFGRC9GV0NpUlFDTFZmeWpzTE5HQU9zRm9iQ3pSZ0E3MXcrRWp3SUFBSVA2QWcrRVl3SUFBSVA2QXcrRVZBSUFBQStPU2dJQUFJUDZCWDVXZy9vR0Q0VThBZ0FBTzhOME9QOTFET2l2Y2YzL1dZbEZsSTFGa0ZCb1dUZENBRk5UL3hXd3MwWUFPVjJRZEJhTFJaUTd3M1FGTzBXUWRRcFhVMnIvalVYQVVPc0ZWMU5xLzFPTHp1aEVkdjMvNlRvQ0FBQXp3RGhlRmxNUGxjQkFVUDkyR0lsRkNHZ3M4VVVBallWOC92Ly9hQkVCQUFCUTZKMEUvditEeEJCUWpZVjgvdi8vditCOFJnQlFpOC9vcWg3Ky96dkRpVVh3RDRTbUFRQUFVLzkxQ0kyRmZQNy8vLzkyR0dnazhVVUFhQkVCQUFCUTZGNEUvditEeEJCUWpZVjgvdi8vVUl2UDZIQWUvdjg3dzRsRjlBK0ViQUVBQUZQL2RRaU5oWHorLy8vL2RoaG9IUEZGQUdnUkFRQUFVT2drQlA3L2c4UVFVSTJGZlA3Ly8xQ0x6K2cySHY3L084T0pSZmdQaERJQkFBQlQvM1VJallWOC92Ly8vM1lZYUJEeFJRQm9FUUVBQUZEbzZnUCsvNFBFRUZDTmhYeisvLzlRaTgvby9CMysvenZEaVVVSUQ0VDRBQUFBT1Iyd3MwWUFkSDcvZFF6b1ozRDkvMW1KUlpTTlJaQlFhRmszUWdCVFUvOFZzTE5HQURsZGtIUWhpMFdVTzhOMEJUdEZrSFVWZzMzOEJJMTFuSFFEalhXc2pYM2dwYVdscGV0cGkwM3dNLzlIVjFPRHp2OVdVK2pyZFAzL2kwMzBWMU5XVStqZmRQMy9pMDM0VjFOV1UralRkUDMvaTAwSVYxTldVK2pIZFAzLzZic0FBQUNEZmZ3RVUzVWFpelU4cEVVQWlWM2dpVjNrLzlacUFZbEY2UC9XaVVYczZ3Mk5SZUJRVTJvdy94WDRwRVVBaTBYZ2kwM3dhaGhlbVZaU1VPaFRlUDMvaTBYa2kwMzBtVlpTVU9oRWVQMy9pMFhvaTAzNG1WWlNVT2cxZVAzL2kwWHNpMDBJbVZaU1VPZ21lUDMvTThCQTYwc3p3T3RITzhOMUUrc0VPOE4xQm1vWVUxZnJMc2RGbEFBQUFJQ05UWkJSYUZrM1FnQlRVLy9RaTBXUTZ4RC9kUWpvU20vOS8xbFEveFU4cEVVQW1Xb1lVbENMenVqWWQvMy9pOGRmWGx2SndnZ0FWWXZzZyt4NFUxYUxkUlF6MnpnZVY0djVkQXBXNkJOdi9mOVpTT3NDTThBN3d3K01Sd0lBQUlQNEZBK05QZ0lBQUkwOGhSQjdSZ0NMUlFnNEdJczNpWDM0aVhYOGRSMDc4M1FTVnY4VlBLVkZBSVhBZEFkVy94VWtwRVVBaVIvcEJnSUFBSTFGdUZEbzQrY0FBSXQxRERnZVdYUU1pMFVRT0JoMEJZaGRGK3NnalVYb1VNWkZGd0gvRlV5a1JRQ0xSZWlEd0JDSlJmQ0xSZXlEd0JDSlJmUXp3RGdlaVYzSWpYM01xNnVyaTMwUWRRUTRIM1Fub1FoUlJnRDJnTWdBQUFBRWRSbU5SY2hRL3hYSXBFVUFVUDhWR0tORkFJWEFENFNNQVFBQU9CNTBEVmJvUlc3OS93TkZ5Rm1KUmZBNEgzUU5WK2cwYnYzL0EwWE1XWWxGOUlzMTRLUkZBR29MTThBNVhmeFpqWDJNODZ1TFJRakhSWWdzQUFBQXgwV01JQUFBQUlsRnJIUU4vM1g4L3hVOHBVVUFoY0IxYWxOVFUxTzRBQUFBZ0ZCUVVGQnFBMU5vS09aRkFHb0kveFVRcFVVQWkwMzRpL2lKQVkxRmlGQlRhQVFFQUFCWGlYMzgvOVpUL3hVOHBFVUFVRk5vR0FRQUFGZi8xZyszUmZRUHQwM3d3ZUFRQzhGUVUyZ1NCQUFBVi8vV2pVV0lVR29CYUJFRUFBQlgvOWFOUlloUVUyZ01CQUFBLzNYOC85WXp3SWxkMkkxOTNLdXJxNDFGMkZEL2Rmei9GUmlqUlFDTFJlQXJSZGlMVmZDTFRlUXJUZHlOUEJDTFZjQTcrbndHSzlCS2lWWHdpMVgwalR3UmkxWEVPL3A4Qml2UlNvbFY5RGhkRjNSRGkzM3dpMVgwaVZYY2pSUTRpVlhnaTFYMEE5R0pWZVNMVmVnNzE0bDkySHdpTzFYZ2Z4MkxmZXc3ZmZSOEZUdDk1SDhRSzlDRDZnTXIrWVB2QTRsVjhJbDk5QSszUmZRUHQwM3d3ZUFRQzhGUVUyZ1NCQUFBLzNYOC85YU5SWWhRYWdGb0VRUUFBUDkxL1AvV004QkE2dzVXVTJqdzVVVUFpOC9vN3hvQ0FGOWVXOG5DRUFCVmkreUI3T2dCQUFBendEZ0Zvb05HQUErRWlBQUFBRmRxZVZuL2RSQ052UnorLy8venE2RlVja1lBeDRVWS92Ly82QUVBQU1lRklQNy8vd1FFQUFDSmhSeisvLy9IaFNUKy8vOFFBQUFBNkZWcy9mOXB3T2dEQUFEL2RSU0pSYmpvUkd6OS8ycEEvM1VJaVVYOGpVVzhVT2dIOFFBQWFBQUJBQUQvZFF5TmhiaisvLzlRNlBQd0FBQ0R4Q0NOaFJqKy8vOVFhZ0gvRmZ5aVJRQXp3RjlBeWNJUUFGV0w3SVBzTkZOV2FnRnFBR3IvaS9HTERYaDdSZ0JvVEw5RkFPaTJjUDMvLzNVSTZESzYvditMMklYYldYVUdRT2wwQmdBQVYvOTFJSXZPLzNVYy8zVVkvM1VVNkxRSkFRQ0wrSVgvZFFnendFRHBVUVlBQUl0MUVGWlg2SVVLQVFDRndGbFppVVVJZE9XTlEvK0QrQkFQaCs0RkFBRC9KSVVucmtJQWpVWDhVR2pRQndBQWFnSnFBR29BYVBBQUFBRC9kUWovRlFTbFJRQ0Z3SFN4TThDRCt3RVBsTUE1UmZ3UGhMVUZBQUJxQUZmR1JROEEveFhNcEVVQWkvQ0Y5b2wxSUhRb096V2NmRVlBZENCWDZQc1lBUUNFd0ZsMUZXb0JWdjgxbkh4R0FQOFZOS1JGQUlYQUQ1VkZENHRkQ0R2N2RRbFQ2QTBSQVFCWjZ3S0x4MUQvRlV5alJRQ05SZXhRVS84VkdLTkZBSVhBZFF5SlJmQ0pSZlNKUmV5SlJmaUxSZmdyUmZDTFBiaWtSUUNaSzhMUitBKzM4SXRGOUN0RjdNSG1FSmtyd3RINEQ3ZkFDL0JXYWdGb0FRSUFBRlAvMTFacUFHZ0NBZ0FBVS8vWGdIMFBBQStFL0FRQUFHb0EvM1VnL3pXY2ZFWUEveFUwcEVVQTZlWUVBQUJxQWVzQ2FnRC9kUWovRlZpalJRRHAwZ1FBQUdvRTZ3SnFBUDkxQ1A4VjZLUkZBT20rQkFBQWkzVU1NOEE0QmcrRW52Ny8vNHM5M0tSRkFJUDdCdytVd0kwRWhlei8vLzlRLzNVSWlVVU0vOWVMMkErK0JsQm84UEJGQU9pSjFBSUFoY0JaV1hVSlZ1aWZkZjMvV2VzbVJsYm9sWFg5LzFrUHZrNy9nK2tyZEJOSlNYUUpnK2t4ZFJBencrc0k5OUFqdytzQ0M4T0w4T3NEaTNVTU8vTVBoRzhFQUFCcUFQOFZTS0ZGQUZiL2RRei9kUWovRlNTbFJRQ0Z3SFVPL3hVc29rVUFoY0FQaFFYKy8vLy9kUXovZFFqLzF6dkRENFQxL2YvL2FnRnFBUDkxQ1A4VlhLTkZBT2ttQkFBQWpVWDhVRFBBZy9zSmFOQUhBQUFQbE1CcUFtb0FVR2hQQVFBQTZjY0RBQUNMUlF5QU9BQjBDMURvYTJuOS8xbUw4T3NETS9aR2cvc0xENVhEYWdDTlhCc2xpRjBNLzNVTTZHdVUvdjhQdDhCWndlQVFoZlpaRDQ2YkF3QUFNLzlIaVVVTUNYME1pVVVnZ1UwZ0FRQUF3SWwxSElzMXVLUkZBQSsyMi85MURGTm9BQUVBQVA5MUNQL1dneVZzVUVZQUFGZHFBT2p4TS83L1dWbi9kU0NKUFd4UVJnQlRhQUVCQUFEL2RRai8xdjlOSEhYSTZUOERBQUNBUGdCMUVtb2dqVVhNVVA5MUNQOFYwS1JGQUkxMXpHak05MFVBVnVoMDdBQUFoY0JaV1hRSHVFTUJBQURyR21pYzVFVUFWdWhjN0FBQWhjQlpXUStFNXZ6Ly83aUFBUUFBalUzOFVXalFCd0FBYWdML2RReHFBRkQvZFFqL0ZRU2xSUUNGd0ErRXYvei8vNE45L1A4UGhMWDgvLytEZmZ6KzZic0NBQUNMUlF5QU9BQVBoS0Q4Ly85UTZGQm8vZitMK0U5WkQ0aVEvUC8vZ0Q0QWRSSnFJSTFGekZEL2RRai9GZENrUlFDTmRjeG96UGRGQUZibzJ1c0FBSVhBV1ZsMEI3aEVBUUFBNnhwb25PUkZBRmJvd3VzQUFJWEFXVmtQaEV6OC8vKzRnZ0VBQUkxTi9GRm8wQWNBQUdvQ2FnQlhVUDkxQ1A4VkJLVkZBSVhBRDRRbi9QLy9nMzM4LytrdEFnQUFpMFVNZ0RnQUQ0UVMvUC8vVU9qQ1ovMy9pOWhMV1ErSUF2ei8vNEErQUhVU2FpQ05SY3hRLzNVSS94WFFwRVVBalhYTWFNejNSUUJXNkV6ckFBQ0Z3RmxaYWdKZmRDYTRUZ0VBQU1kRklBa0FBQUNOVGZ4UnZ0QUhBQUJXVjJvQVUxQ0xIUVNsUlFEcGhBRUFBR2ljNUVVQVZ1Z1M2d0FBaGNCWldRK0VuUHYvLzJydy8zVUkveFhjcEVVQUpRZ0lBQUQzMkJ2QUJZWUJBQUM1aFFFQUFEdkJpWDBnZGF5TlJmeFF2dEFIQUFCV1YxTnFBVkhycXY5MUNQOFZUS1ZGQUlYQWlVVU1ENFJTKy8vLy8zVUkveFZJcFVVQWhjQVBoRUg3Ly8rTlRmeFJWZyszd0dvQy8zVUlpVVVjRFFBQUFRQlF2eEVCQUFCWC8zVU0vOU9Gd0ErRUdQdi8vNDFGL0ZBUHQwVWdWbW9DLzNVSXdlQVFDMFVjVUZmL2RRei8wK2tGQVFBQWdENEFkUkpxSUkxRnpGRC9kUWovRmRDa1JRQ05kY3hvelBkRkFGYm9RdW9BQUlYQVdWbDBJcmhOQVFBQXgwVWdDUUFBQUkxTi9GRyswQWNBQUZacUF2OTFER29CNmZIKy8vOW9uT1JGQUZib0Qrb0FBSVhBV1ZrUGhKbjYvLzlxOFA5MUNQOFYzS1JGQUNVSUNBQUE5OWdid0lQZ0F3V01BUUFBdVk4QkFBQTd3Y2RGSUFJQUFBQjFxWXNkQktWRkFJMUZERkMrMEFjQUFGWnFBdjkxREdyL1VmOTFDUC9UaGNBUGhFajYvLytEZlF6L0Q0USsrdi8valVYOFVGWnFBdjkxREdvQmFJVUJBQUQvZFFqLzA0WEFENFFnK3YvL2czMzgvdytGc1A3Ly8ra1Irdi8valVYOFVHalFCd0FBYWdML2RReHFBV2pDQUFBQS8zVUkveFVFcFVVQWhjQVBoT3Y1Ly8raENGRkdBSXRBV0lQNC8zNGhnL2daZlJLQVBabURSZ0FBZEFsUS94Vmtva1VBNndwcUFWRG9aakQrLzFsWml3MTRlMFlBYWdGcUFHci9hRFNuUlFEb0xtcjkvMTllVzhuQ0hBRDFwMElBOWFkQ0FQYW9RZ0Q2cUVJQUNxbENBQTZwUWdBZXFVSUFIcWxDQU9TcFFnRGtxVUlBQktwQ0FBU3FRZ0NkcWtJQUc2dENBS21yUWdEUHJFSUF0cTFDQUZXTDdJUHNTRk5XVjRzOStLUkdBR29CTTl0VGF2K0pUZHlMRFhoN1JnQm9UTDlGQUlsOS9PaTNhZjMvLzNVSTZNNjAvdjg3dzFtSlJkZ1BoR0lGQUFEL2RTQ0xUZHovZFJ6L2RSai9kUlRvdGdJQkFEdkRENFJHQlFBQWkzVVFWbERvalFNQkFEdkRXVm1KUlFnUGhDOEZBQUNMUmRoSWcvZ09ENGNHQmdBQS95U0ZFTFZDQUkxRjlGQm8wQWNBQUdvQ1UxTm84QUFBQVA5MUNQOFZCS1ZGQUlYQUQ0VDRCQUFBZzMzMEFiaE12MFVBRDRTMEJRQUE2eUgvZFFqL0ZhaWpSUURyQ2Y5MUNQOFZGS05GQUlYQXVFeS9SUUFQaFpFRkFBQzROS2RGQU9tSEJRQUFqVVhzVUdqUUJ3QUFhZ0pUVTJnTEV3QUE2MWs0SG5VU2FpQ05SYmhRLzNVSS94WFFwRVVBalhXNGFNejNSUUJXNkszbkFBQ0Z3RmxaZEFlNFdBRUFBT3NhYUp6a1JRQlc2SlhuQUFDRndGbFpENFJsQkFBQXVLSUJBQUNOVGV4UmFOQUhBQUJxQXY5MURHb0JVUDkxQ1A4VkJLVkZBSVhBRDRRK0JBQUFpMFhzZy9qL0Q0UXlCQUFBYWhoQVU0dlA2Wm9EQUFBNEhuVVNhaUNOUmJoUS8zVUkveFhRcEVVQWpYVzRhTXozUlFCVzZDem5BQUNGd0ZsWmRCVzRSd0VBQU1kRklFa0JBQURIUlJ4SUFRQUE2eWhvbk9SRkFGYm9CdWNBQUlYQVdWa1BoTllEQUFDNGlBRUFBTWRGSUlvQkFBREhSUnlKQVFBQWl6MEVwVVVBalUzc1ViN1FCd0FBVm1vQ1UxTlEvM1VJLzllRndBK0VQUVFBQUlOOTdQOFBoRE1FQUFDTlJmaFFWbW9DVS85MTdQOTFJUDkxQ1AvWGhjQVBoQmdFQUFDRGZmai9ENFFPQkFBQWkwMzhhZ0ZULzNYNFUraWtaLzMvZy9nQkQ0VktBUUFBaTAzOGpVWDRVRlpxQW1vQjZKMXQvZjlRLzNYcy8zVWMvM1VJLzllRndIUUtnMzM0L3crRmh3RUFBSXROL0ZQb2J4VCsvK205QXdBQU9CNTFFbW9nalVXNFVQOTFDUDhWMEtSRkFJMTF1R29OYU9pbFJRQlc2RFowQVFDRHhBeUZ3SFVVLzNVTWkwM2MvM1VJVitpSGNmLy82ZHdEQUFCb3pQZEZBRmJvL3VVQUFJWEFXVmwwRmJoR0FRQUF4MFVnU1FFQUFNZEZIRWdCQUFEcktHaWM1RVVBVnVqWTVRQUFoY0JaV1ErRXFBSUFBTGlMQVFBQXgwVWdpZ0VBQU1kRkhJa0JBQUNMTlFTbFJRQ05UZWhSdjRnVEFBQlhhZ0pUVTFEL2RRai8xb1hBRDRRUEF3QUFpMFhvZy9nQkQ0SURBd0FBTzhPTlNQK0pUZmlKWFF4Mk5ZMUY1RkJYYWdKVC8zVU0vM1VnLzNVSS85YUZ3QStFMndJQUFJdEY1SVA0L3crRXp3SUFBQUZGK1A5RkRJdEZERHRGNkhMTGkwMzhhZ0ZxQWY5MStGUG9WbWI5LzRQNEFYUUhNOERwQWdNQUFJdE4vR29CNkZOcy9mK0pSU0NMUmVnN3c0MUkvNGxOK0lsZERIWkVqVVhrVUZkcUF2OTFJUDkxRFA5MUhQOTFDUC9XaGNCMERvdEY1SVA0LzNRR0FVWDRBVVVnaTBYb1NEbEZESE1KaTBVZy8wVWd4Z0FLLzBVTWkwVU1PMFhvY3J5TFRmeFQ2T2dTL3YrTFRmem9LV3Y5LzR0TitJa0k2WEVDQUFDTlJmUlFhTkFIQUFCcUFsTlRhTG9BQUFEL2RRai9GUVNsUlFDRndJdlBkQzFxR0ZQL2RmVHAxUUFBQUkxRjlGQm8wQWNBQUdvQ1Uyci9hTWtBQUFEL2RRai9GUVNsUlFDRndJdlBkUXRxQVZOcS8xUHBLQUlBQUl0RjlHb1lRRlBwbXdBQUFJczlCS1ZGQUkxRjlGQyswQWNBQUZacUFvMUY0RkNOUmZCUWFMQUFBQUQvZFFqLzE0WEFENFNZQVFBQWpVVU1VRlpxQWxQL2RmQm95UUFBQVA5MUNQL1hoY0FQaEhzQkFBQTVYUXlMUmZCMUJtb1lRRlByUVkxTjlGRldhZ0pUaVVVZ1VPc1dpMFgwTzBVTWRTSC9UZkNOUmZSUVZtb0NVLzkxOEdqSkFBQUEvM1VJLzllRndIWGM2VFlCQUFDTFJTQXJSZkJxR0psU2kwMzhVT2laYVAzLzZXWUJBQUNMUlF3NEdIUjdVT2psWC8zL1NGbUpSUXg0YnJnQWdBQUE2S2ZPQWdDTDlJMUY5RkJvMEFjQUFHb0NWdjkxRE1jR0FJQUFBR2pFQUFBQS8zVUkveFVFcFVVQWhjQjBPNHRGOUR2RGREUnFBVk5xLzRnY0JsYnA5d0FBQUkxRjlGQyswQWNBQUZacUFvMUY0RkNOUmZCUWFMQUFBQUQvZFFqL0ZRU2xSUUNGd0hVTmFnRlRhdjlUaTgvcDV3QUFBSXRGOER0RjRIVUxhZ0ZUYXY5VDZiRUFBQUNOUmZoUVZtb0NVMU5xRHY5MUNQOFZCS1ZGQUlYQWRHU0xSZmc3dzNSZFFGRG9OMElCQUl2NE8vdFpkRStOUmZoUWkwWDRWbW9DVjBCUWFnMy9kUWovRlFTbFJRQ0Z3SFFzT1YzNGRDZUxSZUE3UmZoM0g0dE4vR29CaUJ3SGkwWHdVMnIvQThkUTZMVmovZjlYNktnM0FRQlo2MDlYNko4M0FRQlppMDM4YWdGVGF2OVQ2MDFxOE9zQ2F1ei9kUWovRmR5a1JRQlFqVVc0YUREMVJRQlE2TjN5L2YrRHhBeU5SYmhxQVZOcS8xQ0x6K2hwWS8zLzZ3ci9kUWlMeitoT0UvNy9pdzE0ZTBZQWFnRlRhdjlvTktkRkFPaElZLzMvaldXc1gxNWJ5Y0ljQVBLdVFnQW1yMElBTWE5Q0FGR3ZRZ0JscjBJQTVxOUNBT3l3UWdDQXNrSUFyTEpDQU9XeVFnQ0xzMElBNTdOQ0FMUzBRZ0M0dEVJQTU3UkNBRldMN0ZPTFhSUldpM1VNVjR0OUNJdE5FRHY1ZFFvNzh3K0VyUUFBQUR2NWZTR0x3U3ZIbWZkOUdJWEFkQVdEK0NCOUEyb2dXQVBIaTMwUU84ZC9LWXY0NnlVNytYNGhpOGNyd1puM2ZSaUZ3SFFGZy9nZ2ZRTnFJRmlMejR0OUVDdklPODk4QW92NU8vTjlJb3ZESzhhWjkzMFloY0IwQllQNElIMERhaUJZQThZN3czNEVpL1BySm92dzZ5SitJSXZHSzhPWjkzMFloY0IwQllQNElIMERhaUJZaTg0cnlEdkxpL044QW92eFZsZHFBR2dCZ0FBQTZBT0MvditEeEJEb0VHNysvK2xFLy8vL1gxNWJYY05WaSt5QjdBd0NBQUNMRFhoN1JnQlRWelAvUjFjejIxTnEvMmhNdjBVQTZBNWkvZjlUL3hYTXBVVUFqVVg4VUdnTUNVWUFWMU5vSEFsR0FQOFZ5S1ZGQUlYQUQ0d2JBUUFBaTBYOC8zVUlpd2hRLzFGUWkwVVFPQmgwQ290Ti9Jc1JVRkgvVWlTTFRSUTRHWFFLaTBYOGl4QlJVUDlTTEl0TkdEZ1pkQXFMUmZ5TEVGRlEvMUljVm90MUhEZ2VkQjZMUlNRNEdIUUtVT2pFWFAzL1dVanJBalBBaTAzOGl4RlFWbEgvVWtTTGRTQTRIblFyVS84VmhLUkZBRkJYVTFOVzZMR2svditEeEJRNnczUVRpMDM4aXhGbUQ3YkFEUUFHQUFCUVVmOVNOSXRGS0RnWWRCT0xUZnlMTVZEb2IxejkvMWxRLzNYOC8xWThpMFg4aXdpTlZRaFNhRHdKUmdCUS94R0Z3RjU4UzJnRUFRQUFqWVgwL2YvL1VHci8vM1VNVTFQL0ZleWdSUUNMUlFpTENGZU5sZlQ5Ly85U1VQOVJHSVhBZkJTTERYaDdSZ0JYVTJyL2FEU25SUURvNEdEOS80dEZDSXNJVVA5UkNJdEYvSXNJVVA5UkNQOFZ4S1ZGQUl2SFgxdkp3aVFBVll2c2dldzRBd0FBaWtFQlU3RUJPc2hXVnh2L0l6MzhwRVlBL3NFNnlCdjJJelVBcFVZQU04bXhBenJJaVhYZ0c4a2pEUVNsUmdBejBySUVPdENKVGZnYjBpTVZDS1ZHQUlsVjZEUFNzZ1U2MEJ2U0l4VU1wVVlBaVZYME05S3lCanJRRzlJakZSQ2xSZ0NKVmV5eUJ6clFHOEFqQlJTbFJnQXoyenY3aVVYd2RCQnFBVk5xLzFPTHorZ3dZUDMvaTAzNE8vTjBFR29CVTJyL1U0dk82QnhnL2YrTFRmaUR6djg3eTNRS2FnRlRWbFBvQ0dEOS80dE42RHZMZEFwcUFWTldVK2ozWC8zL2kwMzBPOHQwQ21vQlUxWlQ2T1pmL2YrTFRldzd5M1FLYWdGVFZsUG8xVi85LzR0TjhEdkxkQXBxQVZOV1UrakVYLzMvaXcxNGUwWUFhZ0ZUVm1oTXYwVUE2TEJmL2YvL2RRam9YUTBBQUlUQVdRK0V6d0VBQUZQL0ZjeWxSUUNOUmZ4UWFBd0pSZ0JxQVZOb0hBbEdBUDhWeUtWRkFJWEFENHlqQVFBQWkwWDhpd2lOVmVSU2FEd0pSZ0JRL3hHRndBK01nUUVBQUdnRkFRQUFqWVhJL1AvL1VGYi9kUWhUVS84VjdLQkZBSXRGNUlzSVU0MlZ5UHovLzFKUS8xRVVoY0FQakVjQkFBQTcrNzRFQVFBQWRDZUxSZnlMQ0dvQ1UxYU5sZFQrLy85U1VQOVJER29CVTJyL2pZWFUvdi8vVUl2UDZQOWUvZjg1WGVCMEpZdEYvSXNJVm8yVjFQNy8vMUpRLzFFZ2kwM2dhZ0ZUYXYrTmhkVCsvLzlRNk5WZS9mODVYZmgwSll0Ri9Jc0lWbzJWMVA3Ly8xSlEvMUVvaTAzNGFnRlRhditOaGRUKy8vOVE2"
	Static 28 = ""
	Static 29 = ""
	Static 30 = ""
	Static 31 = ""
	Static 32 = ""
	Static 33 = ""
	Static 34 = ""
	Static 35 = "aWdZOExRK0VyUUFBQUR3ckQ0U2xBQUFBRDc0R1JsRG8vWGtBQUlQNFJWa1BoSXNBQUFDRCtFaDBlNFA0VW5RM2cvaFhENFY4QVFBQWFnTm9YT1pGQUZib2lIVUFBSVBFRElYQWRRekhSZWdDQUFBQTZaUUFBQUJXNktkai9QK0pSZnpwaFFBQUFJb0doTUIwTGp3Z2RDcFc2STlqL1A5cUxWYUpSZlRvNTgwQkFJdndnOFFNaGZZUGhDWUJBQUJHVnVod1kvei9pVVh3NjFGcUhsaUpSZlNKUmZEclIxYm9XbVA4LzRsRitPczd4a1VQQWVzMlZ1aEpZL3ovYWkxR1ZvbUUzV2pCLy8vb25NMEJBSXZ3ZzhRTWhmWVBoTnNBQUFCR1Z1Z2xZL3ovaVlUZGJNSC8vME9KWGV4WmFpQlc2SFROQVFDRndGbFpkQk5RNkRCdS9QK0w4SW9HaE1CWkQ0WFUvdi8vaGRzUGhKOEFBQUE1ZmZ5TGhXekIvLytMaldqQi8vOTBKemw5K0hRaUFVMzhBVVg0c2dHQWZROEFkQmlFMG5SMy8zWDQvM1g4VUZIL0ZheWdSUURyU2pMUzYrSTVmZlIwR29UU2RGci9kZkQvZGZUL2Rmai9kZnhRVWY4VnNLQkZBT3NuaE5KMEVQOTErUDkxL0ZCUi94VzBvRVVBNnhQL2RlaU5oV2pCLy8vL2RleFEveFc0b0VVQWkvQ0Y5blFYYWdGVy8zVUkveFVnbzBVQWhjQjFERmIvRmR5Z1JRQXp3RURyRm9zTmVIdEdBR29CYWdCcS8yZzBwMFVBNkFkbi9QOWZYbHZKdzFXTDdQOTFHUDkxRlA5MURQOTFDT2dWQUFBQWhjQjBDdjkxRUZEL0ZSQ2pSUUF6d0VCZHdoUUFpMHdrQklvQmkxUWtFRk5XaTNRa0ZEUGJQRUZYaTN3a0ZIUUVQR0YxT1RoWkFYVTBPQjkxTURnZWRTdzRHblVvL3hYSXBFVUFpL0E3ODNSU29RaFJSZ0E0bU1JQUFBQjFSVmIvRlJTalJRQ0Z3SFU2TS9ick5qckRkUm80SDNVV09CNTFFamdhZFE3L05RaFJSZ0RvQ1FnQUFGbnJGbE5UVTFOU1ZsZFIvelVJVVVZQTZMRVlBQUNEeENTTDhGK0x4bDVid2hBQVZsZUxmQ1FNVi84VkpLTkZBSU1sYkZCR0FBQXo5a1pXYWdyb1JDejkvMWxaaVRWc1VFWUEveFhJcEVVQWkvQTc5M1VFaThmckdUdDBKQkIwRVdvRVZ2OFZFS1JGQUR2NGRRU0x4dXNDTThCZlhzTlZpK3k0WElrQUFPamx6d0VBVm90MUNJWDJkUWN6d09uU0FBQUFVNHRkRElYYkQ0U3FBQUFBZ0RzQUQ0U2hBQUFBalkya2R2Ly82SFFJQUFCVDZCREtBUUFQdmtRWS8xRG90eGtBQUlYQUQ1VkYvNEI5L3dCWldYUWhhQUFFQUFDTmhheDYvLzlUVU9pRzVmLy9nOFFNeDRXNGZ2Ly8yS1ZGQU9zTnhvV3Nldi8vQUltZHVINy8vMWVOaGFSMi8vOVF2OWkzUXdCWFZvczFVS05GQVAvV2dIMy9BSFFqZzczWWZ2Ly9BSFVhallXa2R2Ly9VRmYvZFFqR2hheDYvLzhBaVoyNGZ2Ly8vOWFMaGRoKy8vOWY2eHRxOEZiL0ZkeWtSUUNwQUFBQVFIUUVpOGJyQjFib2NnWUFBRmxiWHNuRG9RaFJSZ0FGeGdBQUFGT0tHTVlBQUtFSVVVWUFhTDhFQUFER2dNUUFBQUFCL3hVY28wVUF3ZWdRWm9YQWRBdHFBV3IvNk9jcS9mOVpXWXJEVzhOVmkreUQ3QmovZFFqL0ZSU2pSUUNGd0ErRS93QUFBSTFGNkZEL2RRai9GUmlqUlFDRndBK0U2Z0FBQUZPTFhReUxBenRGNklsRitBK00xd0FBQUl0TjhEdkJENC9NQUFBQWkxTUVPMVhzaVZYOEQ0eTlBQUFBaTBYME85QVBqN0lBQUFBclRlZ3JSZXlKVFF6YlJReUpSUXhXVjl3TjBPVkZBSVBzRU5wRjZOdEZETndOME9WRkFOcEY3TnRGL05qaDNWd2tDTjNZMjBYNDJPSGRIQ1RkMk9qZ1MvNy9nM3NZQUErVVJRK0FmUThBZFVpTFN3ZzVUZWlMVmZTTGZleUxkZkI4RHp0ekVIOEtPM3NNZkFVN1V4UitLTnhUSU4vZzlzUUZlaGc3VGVoOER6bHpFSDhLT1hzTWZBVTVVeFIrQk1aRkR3R0FmUThBZEJXTFJRamRXeUNOZXdpTmRlaWxwYVdKUXhpbDZ3TGQyRjllV3pQQVFNbkNDQUJWaSt5QjdBUUJBQUJYaTMwSWFBRUJBQUNOaGZ6Ky8vOVFWLzhWMEtSRkFJWEFkUU5BNnlwV2kzVU0vemFOaGZ6Ky8vOVE2QTNGQVFDRndGbFpkUTcvUmdnN2ZneDFCc1pHQkFIckF6UEFRRjVmeWNJSUFGV0w3SUhzQ0FFQUFGTldpM1VNZ0Q0QVYzUXhhaENOaGZyKy8vOVEvM1VJeG9YNC92Ly9NTWFGK2Y3Ly8zam9FRnY4LzFEb2Q4Y0JBSVBFRUl2NFIwZnA0UUFBQUdnQkFRQUFqWVg0L3YvL1VQOTFDUDhWMEtSRkFJdllNLzg3M3crRURRRUFBRGwrQkg0cWpZWVlnQUFBaVVVSWpZWDQvdi8vVUl0RkNQOHciDQoJU3RhdGljIDIxID0gIjZIMXZBQUNGd0ZsWmRBcURSUWdFUnp0K0JIemZpMFlFTy9oOUZvMkV2dWlIQUFEL0FJRTRuNFlCQUg1WDZjRUFBQUE5OUFFQUFBK0V0Z0FBQUl1R0ZJQUFBSXZPSzhpQndST0FBQUE3eXcrTW5nQUFBSTJOK1A3Ly8xRlFpWVMrR0lBQUFPaVh4QUVBalVNQkFZWVVnQUFBallTKzZJY0FBRm5IQUFFQUFBRC9SZ1JaYWdxTmpCMzQvdi8vVWY4dzZFZGMvUCtOaGZqKy8vOVE2SS9HQVFDRHhCQ0wrRFBBT0VZQmRBV0lSZ0hyQVVDTFZoQ0YwblEwaTA0SWkxNE1LOWtyMkVzNzMzd3FoY0IwQjhZRUVRb0JSZ2lOaGZqKy8vOVFpMFlRQTBZSVVPZ1p4QUVBQVg0SVdWbnJCUVBIQVVZSVh6UEFYa0JieWNJSUFLRUlVVVlBZ0xqREFBQUFBSFVPLzNRa0JQOFZGS05GQUlYQWRHRldpM1FrREl0T0NJWEphSWdUQUFCMERZc0dpMVlFSzlCU0E4RlE2d1JxQUdvQS8zUWtGT2lXQXdBQUFRYUxEb1BFRUlYQWRDcUxSZ2lGd0hRZWkxWUVLOUdEK2dKMkdRUElhR0RtUlFCUjZKUERBUUNEQmdKWldlc0ZnOEVDaVE1ZU04QkF3Z2dBVll2c3VBQ0FBQURvUThzQkFGYUxkUXlMUmdTQXVNTUFBQUFBVjR0OUNIVVBWLzhWRktORkFJWEFENFNmQUFBQWkwWUVnTGpCQUFBQUFJMkZBSUQvLzNRUGFQOS9BQUJRVi84VllLUkZBT3NVYUlnVEFBQm8vMzhBQUZCWDZQZ0NBQUNEeEJDRndIUm1pNFlZQ0FBQWdEZ0FkQnlMVGdTRGVTQUVVSTJGQUlELy8xQjFMdWdQRGY3L2hjQlpXWFU3aTRZVUNBQUFnRGdBZENxTFRnU0RlU0FFVUkyRkFJRC8vMUIxRHVqb0RQNy82d3pvaU1VQkFPdlE2SUhGQVFDRndGbFpkQXFKdmpRSUFBQXp3T3NETThCQVgxN0p3Z2dBVTFhTGRDUVFnTDRJQkFBQUFGZU52bGdJQUFCMFgyZ0JBUUFBVi85MEpCai9GZENrUlFDTDJJWGJkSFpUallZSUJBQUFWMURvTTIwQUFJUEVESVhBZFdHTmhqd0lBQUQvQUlzQWFncFhVT2d3V3Z6L2pZUXpDQVFBQUZCWDZNaHNBQUNEeEJTRndIVTVpMFFrRUltR05BZ0FBT3NwaTF3a0VHai9md0FBVjFQL0ZXQ2tSUUQvdGhRSUFBQlg2RVVGQUFDRXdGbFpkQXFKbmpRSUFBQXp3T3NETThCQVgxNWJ3Z2dBVll2c2crd2dWb3QxRElYMlYzUStnejRBZERtTGZRaU5SUXhRVi84VnpLUkZBSXRGRERzR2RTeHFJSTFGNEZCWC94WFFwRVVBalVYZ2FBaW1SUUJRNkNuQkFRQ0Z3RmxaZFF1SmZnUXp3RjlleWNJSUFEUEFRT3YxVm90MEpBeUxSZ1NBdU1JQUFBQUFkUTcvZENRSS94VVVvMFVBaGNCMElmOTBKQWlMenVnR0JRQUFhZ0NMenVoRkFnQUFoY0IwQ1ErMmhpZ0lBQURyQXpQQVFGN0NDQUJXVjR0OEpBeHFCRmYvRlJDa1JRQ0Z3SFFhaTNRa0VEc0dkUkpYL3hVVW8wVUFoY0IwQjRsK0JEUEE2d016d0VCZlhzSUlBRldMN0ZGUi94VndvVVVBZzJYOEFJbEYrSTFGK0ZCb2c3aERBUDhWWktORkFJdEYvTW5EVTR0Y0pBaUYyM1VFTThCYncxYUxOZHlrUlFCWGF2QlQvOWEvQUFBQVFPc1NVLzhWVEtWRkFJWEFkQXRxOEZDTDJQL1doY2QxNmw5ZWk4TmJ3MU9MWENRSWhkdDFCRFBBVzhOV1Y0czlGS1JGQUZQLzE0dndoZlowRVZiLzE0WEFkQVNMOE92MWhmYUx4blVDaThOZlhsdkRWb3QwSkFpTGhxQUFBQUNGd0hSV1VQOFZQS1ZGQUlYQWRFdUF2c0lBQUFBQWRUci90cUFBQUFEL0ZSU2pSUUNGd0hVcWF2RC90cUFBQUFEL0ZkeWtSUUNwQUFBQVFIVVZpN2FnQUFBQVZ1aUNiUC8vOTlnYndGa2p4bDdEaTRhZ0FBQUFYc016d0Y3RFZZdnNVelBiT1YwSVZsY1BoSndBQUFDTGRRdzc4NHQ5RUhRSmcvOEJENHlKQUFBQXVQOS9BQUE3K0g0S09CMmxnMFlBZEFLTCtEdnpkRk9EL3dHSUhuUnJqVVVJVVA5MUZHb0NWbGRxRGY5MUNQOFZCS1ZGQUl0VkNEdlhmQWFOVi8rSlZRaU5ERExyQlRnWmRCQkpPODV6OStzVWpWSC9PQnAxQm92S084NTM4eXZPaTlHSlZRaUlIRExyRm8xRkNGRC9kUlJxQWxOVGFnNy9kUWovRlFTbFJRRDMyQnZBSTBVSTZ3SXp3RjllVzEzRGk4RXp5WWtJeDRBTUNBQUEyS1ZGQUlpSUtBZ0FBSW1JTEFnQUFJbUlNQWdBQUltSU5BZ0FBSW1JT0FnQUFJbUlQQWdBQUltSVFBZ0FBSW1JVEFnQUFJbUlVQWdBQU1OVmkreUI3QlFCQUFCVFZvdnhNOXM1bmxBSUFBQlhkRFNMQmp2RGRDNm9BWFJGalVZSU9CaDBQb3RPQkl0SklFbDBYa2xRallaWUNBQUFVSFFmU1VsMEZPaFZ2Z0VBV1ZtRndIUWJNOEJmWGx2SndnUUE2T29JL3YvckJlaUt3UUVBaGNCWldYVGw5Z1lJZEVlTFJnU0RlQ0FFallZSUJBQUFVSTJHVjRnQUFGQjFKZWk4Q1A3L2hjQlpXWFVsNjd6L3RnZ0lBQUJRallaWUNBQUFVT2g0eUFFQWc4UU02NkRvN3IwQkFJWEFXVmwxbVlzR3FBUjBEb3VPVkFnQUFEdU9JQWdBQUhXRnFCQjBKSXVPSkFnQUFEdkxENFJ6Ly8vLy8zWUUvN1pRQ0FBQTZDUkNBUUNGd0ErRVhmLy8vL1lHQW5RU2k0WlFDQUFBTzRZY0NBQUFENFZHLy8vL2k0WU1DQUFBT0JoME00dE9CSXRKSUVrUGhDSUJBQUJKVUkyR1dBZ0FBRkFQaFA4QUFBQkpTUStFOEFBQUFPaGl2UUVBV1ZtRndBK0VDZi8vL3poZENIVW9qWVk4Q0FBQU05STVHSDRjaTc1UUNBQUFpNDQ0Q0FBQU96a1BoT1QrLy85Q2c4RUVPeEI4OEl1R0ZBZ0FBRGdZZFFxTGhoZ0lBQUE0R0hRaVZtZ0F0ME1BLzdaUUNBQUFqYjQwQ0FBQWlSLy9GVkNqUlFBNUh3K0VwdjcvL3poZENIVVNpNFpRQ0FBQS80WXNDQUFBaVlZd0NBQUFpNFpNQ0FBQU84TjBVb3BJRmpQU09zc1BsY0pUUWxML3Rpd0lBQUQvY0JpTmhleisvLzlvOUFoR0FHZ1JBUUFBVU9pTDZmei9nOFFVVUkyRjdQNy8vMUM1NEh4R0FPaWFBLzMvTzhOMERmKzJNQWdBQUl2STZORUsvZitMaGxBSUFBRHBLdjcvLytnYkIvNy82d1hvdTc4QkFJWEFXVmtQaEFuLy8vL3BEZjcvLy8rMkVBZ0FBRkNOaGxnSUFBQlE2TW5HQVFDRHhBenA0ZjcvLzFXTDdGYUxkUXlBUGdCMUJMQUI2MHVoQ0ZGR0FJdEFJRWhXZENoSS8zVUlkQlJJU0hRSjZCYThBUUJaV2VzbjZMWUcvdi9yQmVoV3Z3RUFXWVhBV1ErVndPc1g2TGkrQVFCUVZ2OTFDT2h1eGdFQWc4UVE5OWdid0VCZVhjT0xWQ1FFallGUUNBQUFPUkIwQjRrUTZMQUNBQURDQkFCVmkreUI3QUFCQUFDTFJSU0FPQUJUVmxlTDhYUVBpNDRNQ0FBQWdEa0F4a1VYQVhRRXhrVVhBRkNKaGd3SUFBRG9WcjRCQUltR0VBZ0FBSXRGRUltR0ZBZ0FBSXRGR0ltR0dBZ0FBSXRGQ0lsR0JJc0dNOXZIQkNUc0NFWUEvM1VNaVVVSWlSNkpYUkRvb05qLy96dkRXVm1KUlJnUGhQQUJBQUE1WFJCMEVvdEZHSXBBL3p3Z2RBZzhDUStGc0FFQUFJdDlHR29DZzhjRWFPZ0lSZ0JYNkh0bUFBQ0R4QXlGd0hVOGd3NENnOGNDVitpQVVmei9QZi8vQUFCWmlZWWNDQUFBRDRReEFRQUFVUDhWUEtWRkFJWEFENFVpQVFBQWlaNGNDQUFBTThCZlhsdkp3aFFBYWdObzVBaEdBRmZvSzJZQUFJUEVESVhBZFJpRERnU0R4d05YNk5WZi9QOVppWVlnQ0FBQTZlY0FBQUJxQldqY0NFWUFWK2ovWlFBQWc4UU1oY0IxWVlNT0NHZ0FCQUFBZzhjRlY0MmVDQVFBQU9oRVgvei9XVkJUNk9YWS8vOW83QWhHQUZQb3ZOZi8vNFBFRk9zaE84TjBJNHBJLzRENUlIUWdnUGtKZEJ1RHdBUm83QWhHQUZEb21OZi8vMWxaaGNCMTIrdDl4Z0FBNjNqR1FQOEE2M0pxQldqVUNFWUFWK2lLWlFBQWc4UU1oY0FQaGFFQUFBQ0REaEJvL2dBQUFJUEhCVmZvMFY3OC8xbFFqWVVBLy8vL1VPaHMyUC8vallVQS8vLy9hQmk4UlFCUTZCZmIvLytEeEJRN3czUUR4Z0FBVTQyRkFQLy8vMUM1NEh4R0FPaDVPd0VBTzhPSmhpUUlBQUFQaE9UKy8vOHoyemxkRUhWRC8zVU02SGxlL1A4NVJSaFpkaldMUlJnclJReUREZ0c1QUFRQUFEdkJkZ0tMd1ZEL2RReU5mZ2hYNlB2WC8vOVg2RlM4QVFDRHhCQ0poZ2dJQUFEckEvOU5FSXRGR1A5RkVJUEFCR2pzQ0VZQVVPaTExdi8vTzhOWldZbEZHQStGRmY3Ly96bGRFSFVtYUFBRUFBRC9kUXlOZmdoWHh3WUJBQUFBNktyWC8vOVg2QU84QVFDRHhCQ0poZ2dJQUFDTFJRZzVCblVHZ0gwWEFIUUhpODdvQ0FBQUFEUEFRT2swL3YvL1ZvdnhpNDVRQ0FBQWhjbDBaWXNHaGNCMFg2Z0JkUXVMaGd3SUFBQ0FPQUIwRzFkby8zOEFBSTIrV0FnQUFGZFIveFZncEVVQWhjQjFBb2dIWC9ZR0JIUVRqWVpVQ0FBQVVQKzJVQWdBQVA4VnpLUkZBUFlHQ0hRWWFBRUJBQUNOaGxlSUFBQlEvN1pRQ0FBQS94WFFwRVVBWHNOVmkreFRWb3QxQ0RQYk8vTjFCekxBNmFZQUFBQTRIWm1EUmdCMFJmWUZkTFJHQUFGMUk0TU5kTFJHQUFGb2tBaEdBR2l3d0VVQS94VmNva1VBVVA4VllLSkZBS053dEVZQU9SMXd0RVlBZEV0VFZ2OFZ6S1JGQUZEL0ZYQzBSZ0RyVlBZRmRMUkdBQUoxSTRNTmRMUkdBQUpvZ0FoR0FHaXd3RVVBL3hWY29rVUFVUDhWWUtKRkFLTnN0RVlBb1d5MFJnQTd3M1FGVnYvUTZ4cU5SUWhRYUlnVEFBQnFBbE5UVTFiL0ZRU2xSUUQzMkJ2QVFEdkRENVhBWGx0ZHcxV0w3TGdBSkFBQTZEN0FBUUNoMEhOR0FHb0lXVHZCZnk2RCtBZDFMV29BMmU1UlVkMGNKR29BYUFBQUFRQm9vQWhHQUlrTjBITkdBT2pDLy8vL2c4UVkvdzNRYzBZQU04REp3NE45Q0FCMUI4ZEZDTmlsUlFCV2kzVVFoZlowQllBK0FIVVZvWHlCUmdDRndIUUhnRGdBaS9CMUJiNkk5VVVBYUFBZ0FBRC9kUWlOaFFEYy8vOVE2TDdWLy85b0FBUUFBSTJGQVB6Ly8xWlE2S3pWLy8vZEJZRDFSUURkUlJTQVRRNEIyTm1EeEJoZTMrRDJ4RUYxQmQxZEZPc0MzZGpkUlJUY0hYak5SUURmNFBiRUJYb0ozUVY0OVVVQTNWMFVvUWhSUmdDRG9LZ0FBQUFBb1FoUlJnQlR4b0ROQUFBQUFPaFM4UC8vM1VVVTNBMTR6a1VBaXRqb0Q4UUJBRkJvQXdRQUFHcEUvelZVY2tZQS94VzRwRVVBLzNVTS93WFFjMFlBallVQS9QLy9VSTJGQU56Ly8xRC9kUnovRlFDbFJRQ0xEUWhSUmdDSmdhUUFBQUQvRGRCelJnQ2hDRkZHQUlpWXhnQUFBSXNOQ0ZGR0FJVGJENVRBaUlIRUFBQUFpdzBJVVVZQWdMbk5BQUFBQUZ0MUdZTzVwQUFBQUFCMUlOMUZGTndkZU0xRkFOL2c5c1JCZFJESGdhUUFBQUQrLy8vL2l3MElVVVlBaTRHa0FBQUF5Y05UTTlzNEhhU0RSZ0IxQ0RnZG9vTkdBSFF0Vm9zMStLUkZBRk5vQ0hGR0FGTm9BQ0FBQVAvV2hjQjBFemtkQ0hGR0FIUUxhZ0pUVTJnQklBQUEvOVplVzhOVmkreUQ3QmhUVjR0OUNEUGJPL3QxQnpQQTZXTUJBQUJXaXpYTXBFVUFVMWYvMWpzRm5IeEdBSWxGOUhRUFYrZ2cvZi8vaE1CWkQ0VTdBUUFBL3hYSXBFVUFPOE9KUmZoMUQxTm9UTTFGQVA4VnRLUkZBSWxGK0R0OStIVUhpOGZwRlFFQUFGZi9GU2lqUlFDRndIUUphZ2xYL3hYb3BFVUFPQjJWYzBZQWRSUC9kZmhYNkkvdC8vODd3MWxaRDRYbUFBQUFPVjM0aXowMHBFVUFpRjMvaUYzK2RFOVQvM1g0LzlhTDhEdnppWFhvZEVNNU5aeDhSZ0IwSHY5MStPaVEvUC8vaE1CWmRSRnFBVmIvTlp4OFJnRC8xNFhBRDVWRi96bGQ5SFFZTzNYMGRCTnFBZjkxOUZiLzE0WEFENVZGL3VzRGkzWG9pVjN3LzNYNC8zVUk2QlR0Ly84N3cxbFppVVhzZFR6L1JmQ0RmZkFGZk9PK1RkVEQvMVpUVTFOcUVtb0M2T0puL2Y5V1UxTlRhaEpxQXVqVlovMy8vM1g0LzNVSTZOanMvLytMZGVpRHhEaUpSZXc0WGY5MENsTlcveldjZkVZQS85YzRYZjUwQjFQL2RmUlcvOWM1WGV4MER2OTFDUDhWR0tSRkFJdEY3T3NDTThCZVgxdkp3MVdMN0xnY2dBQUE2Tks4QVFDTFRRaFRNOXM3eTFaWGRCSnFBVk5xLzFQb3VWTDgvN2hNdjBVQTZ3VzR4THRGQUlzTmVIdEdBRFAyUmxaVGF2OVE2SnBTL1A4NVhSaDFCOGRGR1BRQkFBQTVkUng5QjhkRkhESUFBQUE1ZFJCOUE0bDFFRGxkREErRWVRRUFBSXMxQktWRkFJMUY2RkMvMEFjQUFGZHFBbE5UYUFZRUFBRC9kUXovMW9YQUQ0UlRBUUFBaTBVUU8wWG9ENDlIQVFBQS8zVU1qVVhzYUFDQUFBQlE2RW0vLy8rRHhBdzd3NGxGOUErRUtBRUFBS0NaZzBZQWlFWC9Pc09MUmZSMUJvMkY1SC8vLy85TkVJbEYrSWdZL3hWc29rVUFpVVhralVYd1VGZHFBbFAvZFJCb0F3UUFBUDkxRFAvV2hjQjBWMmFCZmZEL2Z3K0hzQUFBQUkxRjhGQlhhZ0wvZGZUL2RSQm9BZ1FBQVA5MURQL1doY0IwTURoZC8zVWFEN2RGOEZOQVVQOTErUDkxOVA5MTdQOFZYS0ZGQUlYQWRFNy9kUlQvZGZqbzhmYi8vNFRBV1ZsMVJEbGRDSFZsLzNVTS94VThwVVVBaGNCMGJEbGRHSHdWL3hWc29rVUFpMDNraTFVWUE4b3J5SVA1Qlg0a2FnSC9kUnpvZEJmOS8xbFo2VlAvLy8rTFJmaUlHT3NoYWdGVGF2OW9OS2RGQU9zS2FnRlRhdjlvVEw5RkFJc05lSHRHQU9nbFVmei9PVjBJZEJTTFRRaHFBVk5xLy85MStPZ1FVZnovaS9EckF6UDJSdjkxOVA5MTdPZ3J3Ly8vV1ZtTHh1c0RNOEJBWDE1YnljTlZpK3lMVFJSVFZvdDFESW9HTTlzOFFWZUxmUmgwQkR4aGRUdzRYZ0YxTjR0VkVEZ2FkVEE0R1hVc09COTFLUDhWeUtSRkFJdndPL04wR0l0RkNEaVl3Z0FBQUhVTlZ2OFZGS05GQUlYQWRRSXo5b3ZHNjAwNFhSeDFIanJEZFJxTFJSQTRHSFVUT0JsMUR6Z2ZkUXYvZFFqb0hQTC8vMW5yRy85MUpQOTFJRlAvZFJ4WFVmOTFFRmIvZFFqb3Z3SUFBSVBFSkR2RGRRUXp3T3NIVU9qeCsvLy9XVjllVzEzRFZZdnN1RmlKQUFEb1BMb0JBRk5XaTNVTWlnWXoyenhCVjNRRVBHRjFWRGhlQVhWUGkwVVFPQmgxU0l0RkZEZ1lkVUdMUlJnNEdIVTYveFhJcEVVQWkzMElpL0E3ODNRVk9KL0NBQUFBZFExVy94VVVvMFVBaGNCMUFqUDJPRjBjZEFvNzgzUUdpYmVnQUFBQWk4YnBzd0FBQVA4VnlLUkZBRHZEaVVVTUQ0U2dBQUFBT0I1MU1JdE5FRGdaZFNtTFRSUTRHWFVpaTAwWU9CbDFHLzkxQ09oRjhmLy9XWXZJaTBVTUs4SDMyQnZBOTlBalJRenJib3Q5Q0RpZndnQUFBSFVMVVA4VkZLTkZBSVhBZEZhTmphaDIvLy9vTHZMLy8vOTFESTJOcUhiLy8rZ2Y5Zi8vLzNVWWpZMm9kdi8vLzNVVS8zVVFWbGZvSWZYLy80WEFkQ05Ualkyb2R2Ly82RUh5Ly8rRndIUVRPRjBjZEFtTFJReUpoNkFBQUFDTFJRenJBalBBWDE1YnljTlZpK3hUVmxlTGZReUtCelBiUEVGMEJEeGhkVVE0WHdGMVA0dE5FRGdaZFR1TFZSZzRHblUwaTFVY09CcDFMZjhWeUtSRkFJdndPL01QaElnQUFBQ0xSUWc0bU1JQUFBQjFhRmIvRlJTalJRQ0Z3SFZkTS9icldZdE5FRHJEZFIwNEdYVVppMFVZT0JoMUVvdEZIRGdZZFF2L2RRam9SZkQvLzFuck0xUC9kUnovZFJoUlYvOTFDT2hIL3YvL2kvQ0R4Qmc3ODNVZlUxTlRVLzkxSFA5MUdQOTFFRmYvZFFqbzBBQUFBSVBFSkl2d08vTjBFZjkxSVA5MUZGYm9EQUFBQUlQRURPc0NNOEJmWGx0ZHcxV0w3Rk16MnpoZEVIUUwvM1VJNkVnQi8vOVo2dzFUVTJvUS8zVUkveFc0cEVVQU9WME1mUVdKWFF3NzIzUlhpeDFzb2tVQVZsZi8wMm9Cdnk4QkFJQlhpVVVRNkNVVS9mK0xOVHlsUlFCWldmOTFDUC9XaGNCMEtvdEZFSXROREFQQmlVVVEvOU9MVFJBcnlJUDVCWDRUYWdGWDZQVVQvZjlaV2Y5MUNQL1doY0IxNFY5ZWkwVUlXMTNEVll2c1VWR0xSUWlEWmZ3QWlVWDRqVVg0VUdna3VVTUEveFZrbzBVQWkwWDh5Y05WaSt5NFdJa0FBT2lVdHdFQVUxYUxkUXlLQmpQYlBFRlhpMzBZZEFROFlYVlJPRjRCZFV5TFRSQTRHWFZGaTAwVU9CbDFQamdmZFRyL0ZjaWtSUUNMZlFpTDhEdnpkQlU0bjhJQUFBQjFEVmIvRlJTalJRQ0Z3SFVDTS9ZNFhTQjBDanZ6ZEFhSnQ2QUFBQUNMeHVrSEFRQUFPc04xSUl0RkVEZ1lkUm1MUlJRNEdIVVNPQjkxRHY5MUNPaXg3di8vV2VuakFBQUFqWTJvZHYvLzZMM3YvLzlYLzNVVWpZMm9kdi8vLzNVUVZvdDFDRmJvdmZMLy80WEFENFNPQUFBQTlvV29kdi8vQW9wRkhJaUYwSDcvLzR0RkpJbUY0SDcvLzR0RktJbUY1SDcvLzNSdWdiM0Vmdi8vLy84QUFIUTkvN1hFZnYvLy94VThwVVVBaGNCMFRqaWV3Z0FBQUhVbC83WEVmdi8vL3hVVW8wVUFoY0IxRldydy83WEVmdi8vL3hYY3BFVUFxUUFBQUVCMElmKzF4SDcvLzQyTnFIYi8vK2dmOHYvL1U0Mk5xSGIvLytoYjcvLy9oY0IxRmpQQTZ5ZU5oYWgyLy85UWFOMjRRd0QvRldTalJRQTRYU0NMaGRoKy8vOTBDanZEZEFhSmhxQUFBQUJmWGx2SncvOGxlS0pGQUlNOU1HaEdBQUYrRVdnSEFRQUEvM1FrQ09oNlJQei9XVm5EaTBRa0JJc05LR2hHQUErM0JFRWxCd0VBQU1PRFBUQm9SZ0FCZmc1cUJQOTBKQWpvVDBUOC8xbFp3NHRFSkFTTERTaG9SZ0FQdGdSQmcrQUV3NE05TUdoR0FBRitFV2hYQVFBQS8zUWtDT2dqUlB6L1dWbkRpMFFrQklzTktHaEdBQSszQkVFbFZ3RUFBTU9EUFRCb1JnQUJmZzVxQ1A5MEpBam8rRVA4LzFsWnc0dEVKQVNMRFNob1JnQVB0Z1JCZytBSXc0TTlNR2hHQUFGK0VXaUFBQUFBLzNRa0NPak1RL3ovV1ZuRGkwUWtCSXNOS0doR0FBKzJCRUVsZ0FBQUFNTldpM1FrQ0l0R0RLaURENFRKQUFBQXFFQVBoY0VBQUFDb0FuUUxnOGdnaVVZTTZiSUFBQUNEeUFGbXFRd0JpVVlNZFFsVzZCY0RBQUJaNndXTFJnaUpCdjkyR1A5MkNQOTJFT2pFUFFBQWc4UU1oY0NKUmdSMGI0UDQvM1JxaTFZTTlzS0NkVGVMVGhDRCtmOVhkQlNMK2NIL0JZczh2V0M1UmdDRDRSK05QTS9yQmI5b2FFWUFpazhFZ09HQ2dQbUNYM1VKZ2NvQUlBQUFpVllNZ1g0WUFBSUFBSFVVaTA0TTlzRUlkQXoyeFFSMUI4ZEdHQUFRQUFDTERraUpSZ1FQdGdGQmlRNWV3L2ZZRzhDRDRCQ0R3QkFKUmd5RFpnUUFnOGovWHNQbzBCd0FBSUE5M0xSR0FBQjBCZWwzRHdBQXc2R2d5a1lBaGNCV2FoUmVkUWU0QUFJQUFPc0dPOFo5QjR2R282REtSZ0JxQkZEb2x3c0FBSVhBV1Ztam1McEdBSFVlYWdSV2lUV2d5a1lBNkg0TEFBQ0Z3RmxabzVpNlJnQjFCV29hV0Y3RE05SzVvR1ZHQU9zRm9aaTZSZ0NKREFLRHdTQ0R3Z1NCK1NCb1JnQjg2alBTdWJCbFJnQ0x3c0g0QllzRWhXQzVSZ0NMOG9QbUg0c0U4SVA0LzNRRWhjQjFBNE1KLzRQQklFS0IrUkJtUmdCODFEUEFYc05WaSt4VFZvdDFESXRHREtpQ2kxNFFENFR6QUFBQXFFQVBoZXNBQUFDb0FYUVhnMllFQUtnUUQ0VGJBQUFBaTA0SWcrRCtpUTZKUmd5TFJneURaZ1FBZzJVTUFJUGc3NFBJQW1hcERBR0pSZ3gxSW9IK3dHVkdBSFFJZ2Y3Z1pVWUFkUXRUNkJRbEFBQ0Z3RmwxQjFib1JBRUFBRmxtOTBZTUNBRlhkR0dMUmdpTFBvMUlBWWtPaTA0WUsvaEpoZitKVGdSK0RWZFFVK2hYWHdBQWlVVU02ekNEKy85MEZvdkR3ZmdGaXdTRllMbEdBSXZMZytFZmpRVEk2d1c0YUdoR0FQWkFCQ0IwRFdvQ2FnQlQ2SE1sQUFDRHhBeUxSZ2lLVFFpSUNPc1VNLzlIVjQxRkNGQlQ2QWRmQUFDRHhBeUpSUXc1ZlF4ZmRBYURUZ3dnNnhDTFJRZ2wvd0FBQU9zSmc4Z2dpVVlNZzhqL1hsdGR3MVdMN0l0VkVJdEtERk9MWFF5RjIxYUxkUWhYalg0QnhnWXdpOGQrSDRsZENEUGJpaEdFMG5RR0Q3N1NRZXNEYWpCYWlCQkEvMDBJZGVtTFZSQ0YyOFlBQUh3U2dEazFmQTNyQThZQU1FaUFPRGwwOS80QWdENHhkUVgvUWdUckVsZm9qS3dCQUVCUVYxYm9jNjRCQUlQRUVGOWVXMTNEVm90MEpBaUxSZ3lvZzNRZHFBaDBHZjkyQ09qNkd3QUFab0ZtRFBmN004QlppUWFKUmdpSlJnUmV3LzhGbExSR0FHZ0FFQUFBNkJvbUFBQ0Z3Rm1MVENRRWlVRUlkQTJEU1F3SXgwRVlBQkFBQU9zUmcwa01CSTFCRklsQkNNZEJHQUlBQUFDTFFRaURZUVFBaVFIRFZZdnNVVkZUVm9zMTVMWkdBRmVMZlF5S0J6UGJQR0dKWGZpSlhmeDBHanh5ZEE4OGR3K0ZHZ0VBQUxrQkF3QUE2d3d6eVlQT0Flc0l1UWtCQUFDRHpnSXowa0xwMXdBQUFEdlRENFRhQUFBQUQ3N0FnL2hVZjNGMFlvUG9LM1JIZytnWmREaUQ2QTUwSDBnUGhaRUFBQUE1WGZ3UGhZZ0FBQURIUmZ3QkFBQUFnOGtnNlpjQUFBQTVYZngxZE1kRi9BRUFBQUNEeVJEcGd3QUFBUGJCUUhWZ2c4bEE2M24yd1FKMVZvUGgvb1BtL0lQSkFvSE9nQUFBQU90anVBQVFBQUNGeUhVOEM4anJWb1BvWW5SR1NIUXJnK2dMZEJLRDZBWjFKdmJGd0hVaGdja0FRQUFBNnpjNVhmaDFGTWRGK0FFQUFBQ0I1disvLy8vckl6bGQrSFFFTTlMckdzZEYrQUVBQUFDQnpnQkFBQURyQy9iRndIWG9nY2tBZ0FBQVI0b0hPc01QaFI3Ly8vOW9wQUVBQVA5MUVGSC9kUWpvSmlvQUFJdklnOFFRTzh0OUJEUEE2eHFMUlJUL0JaUzBSZ0NKY0F5SldBU0pHSWxZQ0lsWUhJbElFRjllVzhuRGczd2tCQUJXZENHTGRDUU05a1lORUhRb1Z1aENHQUFBZ0dZTjdvTm1HQUNESmdDRFpnZ0E2eENMUkNRTTlrQU5FSFFIVU9naEdBQUFXVjdEVm90MEpBai9kaERvMENFQUFJWEFXWFJ5Z2Y3QVpVWUFkUVF6d09zTGdmN2daVVlBZFY0endFRC9CWlMwUmdCbTkwWU1EQUYxVFZOWGpUeUZTTFZHQUlNL0FMc0FFQUFBZFNC"
	Static 36 = ""
	Static 37 = ""
	Static 38 = ""
	Static 39 = ""
	Static 40 = ""
	Static 41 = ""
	Static 42 = ""
	Static 43 = ""
	Static 44 = ""
	Static 45 = ""
	Static 46 = ""
	Static 47 = "WUQ0Ui9Gd0FBZ1BsWkQ0UjJGd0FBZ1BsYUQ0UnRGd0FBZ1BsY0Q0UmtGd0FBZ1BsZWRBbUErV0VQaFpBQUFBQXowb3B3QTRwUUJJME1FanRPRklsVlBJbFdaSHdKeDBZc0FRQUFBT3N5aTFZUUsxVThpMFlNaXhTUXdlRUNpUlFJaTFZTWk4TXJSbENKUkFvRWkxVThqUVFTT1VWb2Z3YUR3QUtKUldpTFJXeUxUblNGeVlsTlFIUTFPVkVFZFRDTCtZc0hpVVowaTBjTWlVVmtpMGNVd2VBQ1VQOTNFUDkyRE9nZElRQUFpMFU0aTM4SWc4UU1pVVZ3Nlh2Ny8vK0FQMVNMVFRpSlRYQVBoRnI4Ly84N1hVUVBoRkg4Ly8rQU9HQWJ3SVBnL2tCQWdEOVdpVVY0RDRYaUVnQUFpMFY4UUZCcUFQOTFkSVBIQTFGVy8zVm8vM1ZrVjFQbzV2ci8vNFBFSklYQUQ0VVVHd0FBT1VWNEQ0VkxGZ0FBaTMxczZkZ1NBQUNEZmpBQWRBazdYbEFQaENUOS8vLzJSWEFDZEdxTFRsQTcyWFJkTzE1VUQ0UU8vZi8vaTBZWWhjQjBJRHZaRDRiLy9QLy9hZ0NOVmh4U1VWQlQ2SFpnL1ArRHhCU0Z3T2svQXdBQWkwWWNBOGc3MlErQzJ2ei8vNHZMSzhpS0VUcFdJQStGeS96Ly80UDRBWFFNaWtFQk9rWWhENFc2L1AvL1IrbVcrdi8vTzE1UTYrK0xSbWdEUmxBNzJPdmxpVjFrNitiMlJYQUNkRVdMUmxRNzJITTRpMDRZaGNsMEVHb0FqVlljVWxCUlUraUpYL3ovNjR1TFRod3J3VHZZRDRkdi9QLy9pZ002UmlBUGhXVDgvLzg3eW5TbWlrTUI2NWlEZmpRQTY1V0RmalFBRDRWTC9QLy9nMzQ0QUhVeGkwWlVPOWgwaEl0V0dJWFNkREU3MkErREwvei8vMm9BalU0Y1VWQlNVK2dzWC96L2c4UVVoY0FQaEJiOC8vL3JOenRlVkErQ0Mvei8vK2xNLy8vL2kwNGNLOEU3MkErSCtmdi8vNG9ET2tZZ0Q0WHUrLy8vZy9rQmRBeUtRd0U2UmlFUGhkMzcvLytMUmxRclJoenBLZi8vL3p0ZVVIUVJEN1pELzR0T0tQWUVDQkIwQkl2SzZ3SXp5VHRlVkhNUkQ3WURpMVlvOWdRUUVIUUZNOEJBNndJendJb1hSNEQ2QlhVSk05STd3UStVd3VzSE05STd3UStWd292Q2hjQVBoR0w1Ly8vcGUvdi8vL1pGY0FSMVVJdE9HSVhKZENLTFJsUTcySE5DYWdDTlZoeFNVRkZUNkdSZS9QK0R4QlNGd0ErRlR2di8vK3NuaTBZY2kwNVVLOGc3MlhjYmlnczZUaUIxRkR2Q0Q0UXgrLy8vaWtNQk9rWWhENFFsKy8vL2k4TkRPMFpVRDRNWisvLy82VnIrLy84N1hsUVBnd3Y3Ly84UHRnT0xUaWhEOWdRSUJPazcvdi8vTzE1VUQ0UHkrdi8vRDdZRGkwNG9RL1lFQ0FUcE9nRUFBRHRlVkErRDJmci8vdysyQTR0T0tFUDJCQWdCNlFuKy8vODdYbFFQZzhENi8vOFB0Z09MVGloRDlnUUlBZWtJQVFBQU8xNVVENE9uK3YvL0Q3WURpMDRvUS9ZRUNCRHAxLzMvL3p0ZVZBK0RqdnIvL3crMkE0dE9LRVAyQkFnUTZkWUFBQUNMVGxRNzJRK0RjL3IvL3crMkEwT0QrQW9QaEt6OS8vOFBobUQ2Ly8rRCtBeDJJb1A0RFhRbVBZVUFBQUIwRmowbklBQUFENFpFK3YvL1BTa2dBQUFQaHpuNi8vK0Rma2dBNlhEOS8vODcyUStEYnYzLy80QTdDZytGWmYzLy8wUHBYLzMvL3p0ZVZBK0RFUHIvL3crMkE3a09HQUFBUXp2QmR5b1BoUDM1Ly8rRCtBa1BoUFQ1Ly8rRCtDQVBoT3Y1Ly84OW9BQUFBQStFNFBuLy96MkFGZ0FBNnpFOUFDQUFBQStDRlAzLy96MEtJQUFBRDRiRCtmLy9QUzhnQUFBUGhMajUvLzg5WHlBQUFBK0VyZm4vL3owQU1BQUFENFNpK2YvLzZlUDgvLzg3WGxRUGc1VDUvLzhQdGdPNURoZ0FBRU03d1hjdEQ0VEgvUC8vZy9nSkQ0UysvUC8vZy9nZ0Q0UzEvUC8vUGFBQUFBQVBoS3I4Ly84OWdCWUFBT21hL1AvL1BRQWdBQUFQZ2svNS8vODlDaUFBQUErR2l2ei8vejB2SUFBQUQ0Ui8vUC8vUFY4Z0FBQVBoSFQ4Ly84OUFEQUFBT2xrL1AvL08xNVVENE1iK2YvL0Q3WURRNFA0Q2crQ1ZQei8vNFA0RFErR0Jmbi8vejJGQUFBQUQ0VDYrUC8vUFNjZ0FBQVBoalg4Ly84OUtTQUFBQStHNVBqLy8ra2wvUC8vTzE1VUQ0UFcrUC8vRDdZRFE0UDRDZytDeWZqLy80UDREUStHQnZ6Ly96MkZBQUFBRDRUNysvLy9QU2NnQUFBUGhxcjQvLzg5S1NBQUFBK0huL2ovLytuZysvLy9NOENLWndHRHh3T0tSLy9SNER0RmFJbEZRSDBUaTA0TWpRU0Jpd2lGeVh3SGkxQUVLOUhyQm90V1ZDdlRRb29IUEVXSlZUd1BnczRBQUFBOFNuWTRQRXdQaDhJQUFBQXp5VHhNRDVUQk04Q0tad09KVFVnenlZcHZBWXBIQklwUEFvWEFpVVZRaVUxRWRRZkhSVkQvLy85L2c4Y0Y2eTRQdHNDRDZFV0x5SVBoQVlsTlNBKytpS1FWUmdBUHZvQ3NGVVlBUjRYQWlVMUVpVVZRZFFmSFJWRC8vLzkvaGRJUGhNLzEvLzh6d0VBN3lJbEZiSHdzLzNWd2kwVTgiDQoJU3RhdGljIDMwID0gImkxVkFVNHZPNkF2MS8vK0Z3RmxaRDRUSTkvLy9BMTA4LzBWc2kwVnNPMFZFZnRlTFRVUTdUVkFQaEpEMS8vK0RmVWdBRDRReEVRQUFpMFZFaVVWc2kwVjhRSWxGVEZEcC9CQUFBUDkxY0l0RlBJdFZRRk9MenVpNTlQLy9oY0JaV1ErRWR2Zi8vd05kUE9sUTlmLy9qVWNCZzhjaGlVVkFpZ2M4UlhKblBFcDJORHhNZDE4enlUeE1ENVRCTThDS1p3T0pUVWd6eVlwdkFZcEhCSXBQQW9YQWlVVlFpVTFFZFFmSFJWRC8vLzkvZzhjRjZ6Y1B0c0NENkVXTHlDUEtpVTFJRDc2SXBCVkdBQSsrZ0t3VlJnQkhoY0NKVFVTSlJWQjFFY2RGVVAvLy8zL3JDSXZLaVZWUWlVMUVPOHFKVld4OE16dGVWQStENFBiLy93KzJBNHZJTTlLRDRRZEMwK0tMVFVEQjZBT0tCQWhEaE5BUGhNSDIvLy8vUld5TFRVUTVUV3grelR0TlVBK0VqL1QvLzROOVNBQ0pUV3dQaFBvUUFBQ0xSWHhBaVVWTVVPbkxFQUFBaTBaVUs4TTd3ZytNaHZiLy80b0RRemhIQWVzZWkwWlVLOE03d2crTWNmYi8vdysyRTR0R0pBKzJUd0dLRkFKRE9CUUJENFZhOXYvLzZYZjEvLzh6eVlwdkFZcFBBb2xOVU9zYmlWVk1NOENLWndFenlZcEhBb2xGVURQQWdEOGxENVRBaVVWSWc4Y0Q2MDNIUlV3QkFBQUFNOG5yQmpQSlFZbE5URWZyTWpQQVFEUEppVVZNaVVWUVIrc3JEN1lIZytnZWk4aUQ0UUdKVFVnUHZvaWtGVVlBRDc2QXJCVkdBRWVGd0lsRlVIVUh4MFZRLy8vL2Y0dEdWQ3ZETzhnUGo4NzEvLzhQdGhkSDlrVndBWWxWUkErRXJBQUFBSXRHSkErMkJCQ0pSVVF6d0VBN3lJbEZiSHdjRDdZVGkwWWtEN1lFQWtNNVJVUVBoWlgxLy8vL1JXdzVUV3grNUR0TlVBK0VadlAvLzROOVNBQVBoVVlRQUFDSlhVanJGanRlVkhNV0Q3WVRpMFlrRDdZRUFqbEZSSFVIUTBFN1RWQjg1WU45VEFBUGhUTHovLzg3WFVnUGdrZjEvLytMUlh4QWlVVk0vM1ZNYWdEL2RYVC9kWEJXLzNWby8zVmtWMVBvdnZMLy80UEVKRXVGd0ErRjZ4SUFBRHRkU0hQVzZSSDEvLzh6d0VBN3lJbEZiSHdVRDdZRFF6dlFENFg3OVAvLy8wVnNPVTFzZnV3N1RWQVBoTXp5Ly8rRGZVZ0FENFVLRUFBQU8wMVFpVjFJaThGOUV6dGVWSE1PRDdZTE85RjFCME5BTzBWUWZPMkRmVXdBRDRXYjh2Ly9PMTFJRDRLdzlQLy9pMFY4UUlsRlRQOTFUR29BLzNWMC8zVndWdjkxYVA5MVpGZFQ2Q2Z5Ly8rRHhDUkxoY0FQaFZRU0FBQTdYVWh6MXVsNjlQLy9PMTVVRDROeDlQLy9EN1lMUjBQMlJYQUJkQStMUmlRUHRoZUtEQWhIT0F3QzZ3WVB0Z2RITzhFUGhTM3kvLy9wUnZULy96UEppbThCaWs4Q2lVMVE2MUF6d0lwbkFUUEppa2NDaVVWUU04Q0FQeklQbE1DSlJVanJOc2RGVEFFQUFBQXp5ZXNHTThsQmlVMU1SK3RMTThCQU04bUpSVXlKUlZCSDYwUXp5VFBBaW1jQngwVk1BUUFBQUlwSEFvbEZVSVBIQStzckQ3WUhnK2dyaThpRDRRR0pUVWdQdm9pa0ZVWUFENzZBckJWR0FFZUZ3SWxGVUhVSHgwVlEvLy8vZjR0R1ZDdkRPOGdQajZ6ei8vOFB0aGRIOWtWd0FZbFZSQStFckFBQUFJdEdKQSsyQkJDSlJVUXp3RUE3eUlsRmJId2NEN1lUaTBZa0Q3WUVBa001UlVRUGhIUHovLy8vUld3NVRXeCs1RHROVUErRVJQSC8vNE45U0FBUGhka09BQUNKWFVqckZqdGVWSE1XRDdZVGkwWWtEN1lFQWpsRlJIUUhRMEU3VFZCODVZTjlUQUFQaFJEeC8vODdYVWdQZ2lYei8vK0xSWHhBaVVWTS8zVk1hZ0QvZFhUL2RYQlcvM1ZvLzNWa1YxUG9uUEQvLzRQRUpJWEFENFhLRUFBQVN6dGRTSFBXNmUveS8vOHp3RUE3eUlsRmJId1VEN1lEUXp2UUQ0VFo4di8vLzBWc09VMXNmdXc3VFZBUGhLcncvLytEZlVnQUQ0V2REZ0FBTzAxUWlWMUlpOEY5RXp0ZVZITU9EN1lMTzlGMEIwTkFPMFZRZk8yRGZVd0FENFY1OFAvL08xMUlENEtPOHYvL2kwVjhRSWxGVFA5MVRHb0EvM1YwLzNWd1Z2OTFhUDkxWkZkVDZBWHcvLytEeENTRndBK0ZNeEFBQUVzN1hVaHoxdWxZOHYvL004bUtid0hIUlVnQkFBQUFpazhDaVUxUTYxWXp3SXBuQVRQSmlrY0NpVVZRTThDQVB6OFBsTUNKUlVqclBNZEZUQUVBQUFBenllc0dNOGxCaVUxTWlVMUVSK3RVTThCQU04bUpSVXlKVFVTSlJWQkg2MG96eVRQQWltY0J4MFZNQVFBQUFJcEhBb2xGVUlsTlJJUEhBK3N1RDdZSGcrZzRpOGlENFFHSlRVZ1B2b2lrRlVZQUQ3NkFyQlZHQUVlRndJbE5SSWxGVUhVSHgwVlEvLy8vZncrMkI0dFdWSWxGUUl2Q0s4TkhPOGdQajZMeC8vK0Z5UStPNUFJQUFJdEZRSVBBK29QNERnK0hWQThBQVA4a2haTnlSUUQyUlhBRWRYQXp3RUE3eUlsRmJBK011Z0lBQUl0V0dJWFNkQ1dMUmxRNzJITkdhZ0NOVGh4UlVGSlQ2RjlVL1ArRHhCU0Z3QStGU2ZILy80dE5ST3NvaTBZY2kxWlVLOUE3Mm5jY2loTTZWaUIxRllQNEFRK0VLUEgvLzRwREFUcEdJUStFSFBILy8wUC9SV3c1VFd4K28rbFlBZ0FBQTlucFVRSUFBSVA1QWNkRmJBRUFBQUFQakVFQ0FBQTcyZytENy9ELy93KzJBME9EK0FwMEpRK080UEQvLzRQNERINFFnL2dOZENJOWhRQUFBQStGeS9ELy80TitTQUFQaGNIdy8vLy9SV3c1VFd4K3d1bitBUUFBTzlwejc0QTdDblhxUSt2bk05SkNPOG9Qak9jQkFBQTdYbFFQZzVUdy8vOFB0Z05EZy9nSkQ0U0g4UC8vZy9nZ0Q0Uis4UC8vUGFBQUFBQVBoSFB3Ly85Q085RiswZW16QVFBQU05SkNPOG9QaktnQkFBQTdYbFFQZzFYdy8vOFB0Z05EZy9nSmRCQ0QrQ0IwQ3oyZ0FBQUFENFU4OFAvL1FqdlJmdG5wZkFFQUFEUFNRanZLRDR4eEFRQUFPMTVVRDRNZThQLy9EN1lEUTRQNENud1VnL2dORDQ0TThQLy9QWVVBQUFBUGhBSHcvLzlDTzlGKzFlbEJBUUFBTTlKQ084b1BqRFlCQUFBN1hsUVBnK1B2Ly84UHRnTkRnL2dLRDR6VzcvLy9nL2dOZmdzOWhRQUFBQStGeHUvLy8wSTcwWDdWNlFZQkFBQXp3RUE3eUlsRmJBK00rQUFBQUl0R0tBKzJFNG9VQW9EaUJFT0UwZytGbWUvLy8vOUZiRGxOYkg3bTZkWUFBQUF6d0VBN3lJbEZiQStNeUFBQUFJdEdLQSsyRTRvVUFvRGlCRU9FMGcrRWFlLy8vLzlGYkRsTmJIN202YVlBQUFBendFQTd5SWxGYkErTW1BQUFBSXRHS0ErMkU0b1VBb0RpQVVPRTBnK0ZPZS8vLy85RmJEbE5iSDdtNjNrendFQTd5SWxGYkh4dmkwWW9EN1lUaWhRQ2dPSUJRNFRTRDRRUTcvLy8vMFZzT1Uxc2Z1YnJVRFBBUUR2SWlVVnNmRWFMUmlnUHRoT0tGQUtBNGhCRGhOSVBoZWZ1Ly8vL1JXdzVUV3grNXVzbk04QkFPOGlKUld4OEhZdEdLQSsyRTRvVUFvRGlFRU9FMGcrRXZ1Ny8vLzlGYkRsTmJIN21pMVZRTzhvUGhJM3MvLytEZlVnQUQ0WFhDZ0FBaTBWQWc4RDZnL2dPaVYxSUQ0ZFlEQUFBL3lTRnozSkZBUFpGY0FSMWJqdktpVTFzRDQybEFnQUFpMFpVTzlnUGc1b0NBQUNMVGhpRnlYUWJhZ0NOVmh4U1VGRlQ2R0pSL1ArRHhCU0Z3QStGZWdJQUFPc2xpMDRjSzhFNzJIY2NpZ002UmlCMUZZUDVBUStFWHdJQUFJcERBVHBHSVErRVV3SUFBRVAvUld5TFJXdzdSVkI4b3VsQ0FnQUFpMFpVSzlHTHlpdkRPOGgyQW92SUE5bnBMQUlBQUR2S0Q0MGtBZ0FBaTFaVU85b1BneGtDQUFBUHRnT0QrQTExRUVNNzJnK0RDQUlBQUlBN0NuVW42eVNEK0FwMEg0TitTQUFQaGZJQkFBQ0QrQXQwRUlQNERIUUxQWVVBQUFBUGhkMEJBQUJEUVR0TlVIeTE2ZEVCQUFBN3lnK055UUVBQUl0V1ZEdmFENE8rQVFBQUQ3WURnL2dKRDRTeUFRQUFnL2dnRDRTcEFRQUFQYUFBQUFBUGhKNEJBQUJEUVR0TlVIelI2WklCQUFBN3lnK05pZ0VBQUl0V1ZEdmFENE4vQVFBQUQ3WURnL2dKZEJDRCtDQjBDejJnQUFBQUQ0Vm5BUUFBUTBFN1RWQjgyZWxiQVFBQU84b1BqVk1CQUFDTFZsUTcyZytEU0FFQUFBKzJBNFA0Q2crRVBBRUFBSVA0Q3crRU13RUFBSVA0REErRUtnRUFBSVA0RFErRUlRRUFBRDJGQUFBQUQ0UVdBUUFBUTBFN1RWQjh2K2tLQVFBQU84b1BqUUlCQUFDTFZsUTcyZytEOXdBQUFBKzJBNFA0Q25RYWcvZ0xkQldEK0F4MEVJUDREWFFMUFlVQUFBQVBoZFVBQUFCRFFUdE5VSHpQNmNrQUFBQTd5ZytOd1FBQUFEdGVWQStEdUFBQUFBKzJBNHRXS1BZRUVBUVBoYWdBQUFCRFFUdE5VSHpnNlp3QUFBQTd5ZytObEFBQUFEdGVWQStEaXdBQUFBKzJBNHRXS1BZRUVBUjBmME5CTzAxUWZPVHJkanZLZlhJN1hsUnpiUSsyQTR0V0tQWUVFQUYxWVVOQk8wMVFmT2pyV0R2S2ZWUTdYbFJ6VHcrMkE0dFdLUFlFRUFGMFEwTkJPMDFRZk9qck9qdktmVFk3WGxSek1RKzJBNHRXS1BZRUVCQjFKVU5CTzAxUWZPanJIRHZLZlJnN1hsUnpFdysyQTR0V0tQWUVFQkIwQjBOQk8wMVFmT2lEZlV3QUQ0V3E2Zi8vTzExSUQ0Sy82Ly8vaTBWOFFJbEZUUDkxVEdvQS8zVjAvM1Z3VnY5MWFQOTFaRmRUNkRicC8vK0R4Q1JMaGNBUGhXTUpBQUE3WFVoejF1bUo2Ly8vTThDS1p3U0tSd1dOZkFjRDZ3b3p3SXBuQVlwSEFnUDRnRDlUZFBHRHh3T0RmV3hpRDRVQUFRQUFpMFY4UUZCcUF2OTFkUDkxY0ZiL2RXai9kV1JYNmVJQ0FBQXp3SXBuQTRwSEJJbEZQQVBBTzBZVUQ0em1BUUFBZy9sZ2ZBbkhSWGdDQUFBQTYwcURaWGdBNjBTTFJYeEFVUDkxZUErMkIvOTFkQSsyZ0xnVlJnRC9kWEFEeDFiL2RXai9kV1JRVStpSzZQLy9nOFFraGNCMEN6MGMvUC8vRDRXeENBQUFNOENLWndHS1J3SUQrRFBBaW1jQmlrY0NnRHc0VTNTdWczMTRBQStGT2dJQUFBKzJCdysyZ0xnVlJnQUQrT3RXYWdML2RYVC9kWEJXLzNWby8zVmsvM1ZzVStndzZQLy9nOFFraGNBUGhWNElBQUNMZlVEcktvdE5mRUZSVVA5MWRQOTFPRmIvZFdqL2RXVC9kV3hUNkFUby8vK0R4Q1NGd0ErRk1nZ0FBSVBIQTRObGVBQ0xCanRHQkErQ0Nlai8vLzhHYXZqcEZnZ0FBR3JyNlE4SUFBQ0xSWHhBVVA5MWVBKzJCLzkxZEErMmdMZ1ZSZ0QvZFhBRHgxYi9kV2ovZFdSUVUraXY1Ly8vZzhRa2hjQVBoZDBIQUFDNEd2ei8vK25UQndBQWkwVjhRRkQvZFhnUHRnZi9kWFFQdG9DNEZVWUEvM1Z3QThkVy8zVm8vM1ZrVUZQb2N1Zi8vNFBFSklYQUQ0V2dCd0FBdUJuOC8vL3BsZ2NBQUl0RmZFQlEvM1Y0RDdZSC8zVjBEN2FBdUJWR0FQOTFjQVBIVnY5MWFQOTFaRkJUNkRYbi8vK0R4Q1NGd0ErRll3Y0FBSWxlV0xnYi9QLy82VllIQUFDTFJYeEFVUDkxZUErMkIvOTFkQSsyZ0xnVlJnRC9kWEFEeDFiL2RXai9kV1JRVStqMTV2Ly9nOFFraGNBUGhTTUhBQUM0SFB6Ly8ra1pCd0FBaThpTFJnekI0UUtKVFVRRHlJc1JpMGtFaVUxSWkwNFFLMDA4aVZVNGpRU0lpd2lKVFZDTFRtU0pUVUNMeXl0T1VJTjliR0dKQ0hVSngwVjRBZ0FBQU9zRWcyVjRBSXRGZkVDSlJVei9kVXdQdGdmL2RYZ1B0b0M0RlVZQS8zVjBBOGYvZFhCVy8zVm8vM1ZrVUZQb2JlYi8vNFBFSklYQWRBczlIUHovL3crRmxBWUFBSXRGUUlsR1pEUEFpbWNCaWtjQ0EvaUFQMU4wczR0T0RJdEZSSXRWT0lrVUNJdE9ESXRWU0lsVUFRU0xSaEFyUlR5TFRneUxWVkNKRklIcGhlai8vNHRGZkVCUS8zVjREN1lILzNWMEQ3YUF1QlZHQVA5MWNBUEhWdjkxYVA5MVpGQlQ2UFRsLy8rRHhDVHBKUVlBQUlOK1BBQjBDVHRkWkErRVJ1ai8vNHRGYUlsR1lJdEZaSWxHV0lsZVhJdkM2UUFHQUFDTFJrd3p5WXB2QVlwUEFnUElPOGlKVFd4MUJvTmxKQURyQ3pQQWltRURpa0VFaVVVa2kwWjBpVVVnalVVZ2lVWjBpMFlRZzhjRGcvZ2VpWDBvaVVVMGZ3aU5UYUNKVFREckhNSGdBbEQvRlRSbFJnQ0Z3Rm1KUlRCMUIycjY2WndGQUFDTFJUVEI0QUpRLzNZTS8zVXc2QzRMQUFDTFJXU0xUWHlKUlN5TFJXeUtBSVBFRER4Z0cvK0Q1LzVIUjBHSlRVei9kVXdQdHNBUHRvQzRGVVlBQTBWc1YvOTFkUDkxY0ZiL2RXaFRVRlBvRWVYLy80UEVKSVA0QVhSaGhjQjBDejBjL1AvL0Q0VXpCUUFBalVVZ2lVWjBpMFUwd2VBQ1VQOTFNUDkyRE9pK0NnQUFpMFZzTThtS2FBR0R4QXlLU0FJRHdZbEZiSW9BUEZOMGxZdEZJSWxHZEkxRm9EbEZNQStFSU9mLy8vOTFNUDhWT0dWR0FGbnBFZWYvLzR0RklJbEdkSTFGb0RsRk1BK0U1T2IvLy85MU1QOFZPR1ZHQUZucDFlYi8vNHRGZkVCUS8zVjQvM1YwLzNVNFZ2OTFhUDkxWlA5MWJPbHcvdi8vaTBWb2lWNWNpVVpnNmFybS8vK0xSVkE1Uld3UGpibm0vLy8vZFhDTFJUeUxWVUJUaTg3bzRlUC8vNFhBV1ZrUGhKN20vLzhEWFR6L1JXei9kVXhxQVA5MWRQOTFjRmIvZFdqL2RXUlhVK2dXNVAvL2c4UWtoY0IwcytsREJBQUFPMDFRaVYxSWlVMXNmUzcvZFhDTFJUeUxWVUJUaTg3b2tPUC8vNFhBV1ZsMERnTmRQUDlGYkl0RmJEdEZVSHpiTzExSUQ0STY1di8vaTBWOFFJbEZUUDkxVEdvQS8zVjAvM1Z3VnY5MWFQOTFaRmRUNkxIai8vK0R4Q1NGd0ErRjN3TUFBQ3RkUER0ZFNIUFU2UUxtLy8rTFJWQTVSV3dQamZibC8vODdYbFFQZyszbC8vOFB0Z09MeURQU2crRUhRdFBpaTAxQXdlZ0RpZ1FJUTRUUUQ0VE81Zi8vLzBWcy8zVk1hZ0QvZFhUL2RYQlcvM1ZvLzNWa1YxUG9TZVAvLzRQRUpJWEFkS25wZGdNQUFEdE5VSWxkU0gwME8xNVVjeVlQdGdPTHlEUFNnK0VIUXRQaWkwMUF3ZWdEaWdRSWhOQjBERVAvUld5TFJXdzdSVkI4MVR0ZFNBK0NhdVgvLzR0RmZFQ0pSVXovZFV4cUFQOTFkUDkxY0ZiL2RXai9kV1JYVStqaDR2Ly9nOFFraGNBUGhROERBQUJMTzExSWM5YnBOT1gvLzR0RmZFQ0pUV3lKUlV4UTZ5K0xSVkE1Uld3UGpSdmwvLzg3WGxRUGd4TGwvLzhQdGdPTFRpUVB0Z1FJUXpsRlJBK0YvdVQvLy85RmJQOTFUR29BLzNWMC8zVndWdjkxYVA5MVpGZFQ2SG5pLy8rRHhDU0Z3SFMwNmFZQ0FBQ0xSWHhBaVUxc2lVVk1VT3NvaTBWUU9VVnNENDI5NVAvL08xNVVENE8wNVAvL0Q3WURRemxGUkErRnArVC8vLzlGYlA5MVRHb0EvM1YwLzNWd1Z2OTFhUDkxWkZkVDZDTGkvLytEeENTRndIUzc2VThDQUFDTFJYeEFpVTFzaVVWTVVPc3ZpMFZRT1VWc0Q0MW01UC8vTzE1VUQ0TmQ1UC8vRDdZRGkwNGtEN1lFQ0VNNVJVUVBoRW5rLy8vL1JXei9kVXhxQVA5MWRQOTFjRmIvZFdqL2RXUlhVK2pFNGYvL2c4UWtoY0IwdE9ueEFRQUFpMFY4UUlsTmJJbEZURkRyS0l0RlVEbEZiQStOQ09ULy96dGVWQStELytQLy93KzJBME01UlVRUGhQTGovLy8vUld6L2RVeHFBUDkxZFA5MWNGYi9kV2ovZFdSWFUraHQ0Zi8vZzhRa2hjQjB1K21hQVFBQWkwVkVpVVZzaTBWOFFJbEZURkRwWFFFQUFJdEZVRGxGYkErTnErUC8vNHRHVkR2WUQ0T2c0Ly8vOWtWd0JIVkhpMDRZaGNsMEcyb0FqVlljVWxCUlUraVFSdnovZzhRVWhjQVBoWHJqLy8vckpZdE9IQ3ZCTzloM0hJb0RPa1lnZFJXRCtRRVBoRi9qLy8rS1F3RTZSaUVQaEZQai8vK0xUVUFQdGdPRHdmcERnL2tPRDRjSkFRQUEveVNOQzNORkFJUDRDZytFMEFBQUFBK0dLdVAvLzRQNERIWVFnL2dOZEJROWhRQUFBQStGRmVQLy80TitTQURwbHdBQUFEdGVWQStEb3dBQUFJQTdDZytGbWdBQUFFUHBsQUFBQUlQNENRK0U2K0wvLzRQNElBK0U0dUwvL3oyZ0FBQUE2M1dEK0FsMGRvUDRJSFJ4UGFBQUFBRHJWWVA0Q25KbGcvZ05ENGE4NHYvL1BZVUFBQURyVDRQNENnK0NyT0wvLzRQNERYWkhQWVVBQUFEcks0dE9LUFlFQ0FUcklvdE9LUFlFQ0FUcktJdE9LUFlFQ0FIckVJdE9LUFlFQ0FIckZvdE9LUFlFQ0JBUGhXL2kvLy9yRFl0T0tQWUVDQkFQaEdEaS8vLy9SV3ovZFV4cUFQOTFkUDkxY0ZiL2RXai9kV1JYVStqYjMvLy9nOFFraGNBUGhJTCsvLy9yQjJyeTZ3SnErMWhmWGx1RHhWVEp3eFZTUlFDSlZrVUFqbFpGQUpoV1JRQnJWMFVBS1ZoRkFFSllSUUJiV0VVQWRGaEZBSTFZUlFDbVdFVUF3bGRGQUJoWVJRQy9XRVVBSkZsRkFLQlpSUUFaV2tVQVhscEZBUGhXUlFBcFYwVUFXRkpGQUFwV1JRQ2RWa1VBcWx4RkFMOWNSUUREWGtVQU4xMUZBUGhjUlFEb1hFVUFGVjFGQUNCZFJRQXBYVVVBOVZ4RkFGbGZSUUFFWDBVQTkxNUZBQjVmUlFBcFgwVUFNbDlGQUVCZlJRQlhZVVVBK1dCRkFPVmdSUUFUWVVVQUhtRkZBQ3BoUlFBN1lVVUF6MXRGQUtOYVJRQU5hMFVBUkZORkFCMVVSUUNzVkVVQVpsSkZBTlZTUlFBcVUwVUFURk5GQUE1b1JRRDRaMFVBWGxGRkFERlVSUUJzVkVVQS9XaEZBSGRwUlFDM2FVVUFPbWxGQUQxVFJRQUtjVVVBQUFFQ0F3UUVCUVlIQ0FrS0N3eERRdzBPRHhBUlF4SVRGQlVXRnhnWkdob2FHaG9hR3hzY0hSNGZJQ0VoSVNFaElTSWlJeVFsSmljb0tDZ29LQ2dwS1NvckxDMHVRME5EUTBORFEwTXZMME13TVRJek5EUTBOVFkxTmpjNE9UbzdPVG83UTBORFBEMCtQMEJCUWdDQlkwVUFzV05GQU9GalJRQU9aRVVBTjJSRkFHQmtSUUM1WVVVQUwySkZBQVp4UlFBR2NVVUFObUpGQUpWaVJRRFVZa1VBQzJORkFFWmpSUUNpWmtVQXoyWkZBUFZtUlFBVFowVUFNV2RGQUU5blJRQzFaRVVBS1dWRkFBWnhSUUFHY1VVQVAyVkZBSnBsUlFEWlpVVUFFR1pGQUdGbVJRQ2RjRVVBcG5CRkFLOXdSUUM0Y0VVQXdYQkZBTkJ3UlFEZGNFVUEzWEJGQUFaeFJRQUdjVVVBQkhCRkFFbHdSUUJpY0VVQWMzQkZBSWh3UlFDRGZDUUVBblVHRDdiRml1SERpOEdMMGNIcUVDVUFBUDhBQzhLTDBZSGlBUDhBQU1IaEVBdlJ3ZWdJd2VJSUM4TERWWXZzZyt3b2cyWHdBSU5sOUFCV1Y0dDlDSW9IalhjQmlYWDRnejB3YUVZQUFZaEYvdysyd0g0TWFnaFE2QnVkK3Y5Wldlc05pdzBvYUVZQUQ3WUVRWVBnQ0lYQWRBV0tCa2JyejRCOS95MkpkZmgxQm9OTkZBTHJCb0I5L3l0MUNZb0dSb2hGLzRsMStJdEZFSVhBRDR3QkFnQUFnL2dCRDRUNEFRQUFnL2drRDQvdkFRQUFoY0JxRUZsMUpZQjkvekIwQ2NkRkVBb0FBQURyTllvR1BIaDBEVHhZZEFuSFJSQUlBQUFBNnlLSlRSQTVUUkIxR29COS96QjFGSW9HUEhoMEJEeFlkUXBHaWdaR2lFWC9pWFg0aTBVUVU1bFNpL2hYYXY5cS80bFYzT2lSR1FBQWlWM2tpVTNnaVVYb2lWWHN1d01CQUFDRFBUQm9SZ0FCRDdaMS8zNE1hZ1JXNkVDYyt2OVpXZXNNb1Nob1JnQVB0Z1J3ZytBRWhjQjBDUSsrZGYrRDdqRHJNNE05TUdoR0FBRitDMU5XNkJPYyt2OVpXZXNMb1Nob1JnQVB0d1J3SThPRndIUjFENzVGLzFEb3diVCsvNHZ3V1lQdU56dDFFSE5naTAzMGcwMFVDRHRON0hJcmR3aUxSZkE3UmVoeUlZdEY2RGxGOEhVVE8wM3NkUTR6d0R0RjVISU5kd1U3ZGVCMkJvTk5GQVRyR1ZIL2RmRC9kZHhYNkJJUkFBQXp5UVBHRTlHSlJmQ0pWZlNMUmZpS0FQOUYrSWhGLytrMi8vLy9pMTBVLzAzNDlzTUlkUlV6d0RsRkRIUUdpMDBJaVUzNGlVWHdpVVgwNjJmMnd3UzUvLy8vZjdvQUFBQ0FkU3Iyd3dGMVU0dkRnK0FDZEEwNVZmUjNHWElHZzMzd0FIY1JoY0IxT3psTjlISTJkd2FEZmZEL2RpNzJ3d0hIQlppMFJnQWlBQUFBZEFxRFRmRC9nMDMwLytzVjlzTUNkQW1EWmZBQWlWWDA2d2VEVGZEL2lVMzBpMFVNaGNCMEJZdE4rSWtJOXNNQ1czUVRpMFh3aTAzMDk5aUQwUUQzMllsRjhJbE45SXRGOEl0VjlPc05pMFVNaGNCMEFvazRNOEF6MGw5ZXljT0RmQ1FJQUhRR3hnRXRRZmZZVm92eE05TDNkQ1FJZy9vSmRnV0F3bGZyQTREQ01JZ1JRWVhBZCtiR0FRQkppaGFLQVlnUlNZZ0dSanZ4Y3ZKZXcxV0w3RkZSVTR0ZENGWXp5VGxORkl2d2kwVU1WM1FLeGdZdFJ2ZmJFOEgzMkl2K2lVME0vM1VNLzNVUVVGUG9nQmNBQUlQNUNZbGQvSXZZaThKMkJZREJWK3NEZ01Fd2lBNUdoY0IzMkhJRWhkdDMwc1lHQUU2S0Q0b0dpQTVPaUFkSE8vNXk4bDllVzhuQ0VBRE16TXpNek14VmkreFhWb3QxREl0TkVJdDlDSXZCaTlFRHhqditkZ2c3K0ErQ2ZBRUFBUGZIQXdBQUFIVVV3ZWtDZytJRGcva0ljaW56cGY4a2xmeDNSUUNMeDdvREFBQUFnK2tFY2d5RDRBTUR5UDhraFJCM1JRRC9KSTBNZUVVQWtQOGtqWkIzUlFDUUlIZEZBRXgzUlFCd2QwVUFJOUdLQm9nSGlrWUJpRWNCaWtZQ3dla0NpRWNDZzhZRGc4Y0RnL2tJY3N6enBmOGtsZngzUlFDTlNRQWowWW9HaUFlS1JnSEI2UUtJUndHRHhnS0R4d0tEK1FoeXB2T2wveVNWL0hkRkFKQWowWW9HaUFlRHhnSEI2UUtEeHdHRCtRaHlpUE9sL3lTVi9IZEZBSTFKQVBOM1JRRGdkMFVBMkhkRkFOQjNSUURJZDBVQXdIZEZBTGgzUlFDd2QwVUFpMFNPNUlsRWorU0xSSTdvaVVTUDZJdEVqdXlKUkkvc2kwU084SWxFai9DTFJJNzBpVVNQOUl0RWp2aUpSSS80aTBTTy9JbEVqL3lOQkkwQUFBQUFBL0FEK1A4a2xmeDNSUUNML3d4NFJR"
	Static 48 = ""
	Static 49 = ""
	Static 50 = ""
	Static 51 = ""
	Static 52 = ""
	Static 53 = ""
	Static 54 = ""
	Static 55 = "QlFTalFBc0tzY0FIQnFnQUR3Njd3QjNkN3U4VlprQUFIZDN1N3ZGbVpBQUozY0x1N3NBbVFBaUlSQyt1eEVKa0NJaEVMdTdFUVdaM2RFUXU3c1JCVm5kMFJBQUFCRU94V3FoRVJFUkVRN2xabUVSRVJFUkR1eG1ZUkNpM1JFSDdrUkJFSzNkRVFkK1JQRVFxdDBSQjNmL1FSQ3EzUkczZC85RUZHcmFIU0ozai9SRVpxMmlJaWVJLy9SR2FxMGlJZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFRQVFFQkFBQVFBRUFDZ0JBQUFEQUFBQUFBQW9BQUFBRUFBQUFDQUFBQUFCQUFRQUFBQUFBSUFBQUFBQUFBQUFBQUFBQUJBQUFBQVFBQUFBQkFWdEFQeisvQUFrSnI0QUZCYVdBRFEyNWdBTkRvSUFNRERZQUNFZ3NRQTlQdmdBREFwNUFDd3V6QUFjSHFRQUZCS05BQ3dxeHdBY0dxQUF5TkQvQUhmdU04eFFBQUFBMTM3c1ZWVlFBQURkZnNkM2NBVUFBTjNkOFJFZjBGQUEzZDBSRVJFZEJRRGQzZDNkM3hFRlVOM2QzZDNkRVZ4VjNkM2QzZGdSek1WbTNXRVJFUjB6ekdadEVmLy9mdU04Wm1ZUjdkZDM3ak5tWnZIKzd1ZCs3b2htYnhFUkhuZnVpR1ptOFJFZGZYZUlpR1ptM2QzZDE0aUlabVp0M2QzZEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFCQUJBUUVBQUJBQVFBS0FFQUFBUUFBQUFBQUNnQUFBQWdBQUFBUUFBQUFBRUFCQUFBQUFBQUFBSUFBQUFBQUFBQUFBQUFFQUFBQUJBQUFBQUFBQUFBL0xwY0FGazRjZ0Q4NXRRQTlLWTBBUHpPaEFERWpuUUExS1o4QU56Q3JBQ3NtcFFBL0tLa0FQejgrUURjbW93QS9OcTBBTlNpbkFEc3dxUUFBQUFBSWlJaUlpSWlJaUlpSWlJZ0FBQUFCdTd1N3U3dTd1N3U3dTd1SUFBQUFBWXozZDNkM2QzZDNkM2QzQ0FBQUFBR016TXpNejNkM2QzZDNkd2dBQUFBQmpNelBUMHozZDNkM2QzY0lBQUFBQWF6UFRNelBUM2QzZDNkM0NBQUFBQUdPenN6TXpNejNmM2QzZHdnQUFBQUJqTXpNaTA5UFQzU0xmM2NJQUFBQUFhN3N5SXRNOVBUSWkzZDNDQUFBQUFHUGJNaUl6TXpNeUl0M2R3Z0FBQUFCcnM3SWlNek05TWlMOTNjSUFBQUFBYXp2U0lqTXpQVElpM2QzQ0FBQUFBR3V6c2lJNzB6MHlJalBkd2dBQUFBQnJ1eklpSWlzek1pSXozY0lBQUFBQWF6dXlJaUlpSWlJaTg5M0NBQUFBQUd1N3NpSzlzaUlpSWpQZHdnQUFBQUJyTzdJaXM3TXpNaUk5M2NJQUFBQUFhN3N5SXJPNzB6SWkwejNDQUFBQUFHdTdzaUxiT3pzeUl0UGZ3Z0FBQUFCcnU3SWl1enV6MGlJelBjSUFBQUFBYTd1eUlyczdPN0lpTTkzQ0FBQUFBR3U3c2l1OXU3T3lJenM5d2dBQUFBQnJ1enU3dTdzN3ZiUFRQY0lBQUFBQWE3dTd1N3U3czdPenN6M0NBQUFBQUd1N3U3czd1NzJ6czZxcXdnQUFBQUJydTd1N3U3dTd1ejlFUkdJQUFBQUFhN3V6dTd1N3M3Ty9GM1FnQUFBQUFHdTd1N3U3dTdzN3YxSENBQUFBQUFCcnU3dTd1N083dXozV0lBQUFBQUFBYTd1N3U3dTd1N3U5Y2dBQUFBQUFBR1ptWm1abVptWm1abUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRDhBQUFIK0FBQUIvZ0FBQWY0QUFBSCtBQUFCL2dBQUFmNEFBQUgrQUFBQi9nQUFBZjRBQUFIK0FBQUIvZ0FBQWY0QUFBSCtBQUFCL2dBQUFmNEFBQUgrQUFBQi9nQUFBZjRBQUFIK0FBQUIvZ0FBQWY0QUFBSCtBQUFCL2dBQUFmNEFBQUgrQUFBQi9nQUFBLzRBQUFmK0FBQVAvZ0FBSC80QUFELy8vLy8vd0FBQVFBQkFDQWdFQUFCQUFRQTZBSUFBQVVBQUFBQUFDZ0FBQUFRQUFBQUlBQUFBQUVBQkFBQUFBQUFnQUFBQUFBQUFBQUFBQUFBRUFBQUFCQUFBQUFBQUFBQUFBQ0FBQUNBQUFBQWdJQUFnQUFBQUlBQWdBQ0FnQUFBZ0lDQUFNREF3QUFBQVA4QUFQOEFBQUQvL3dEL0FBQUEvd0QvQVAvL0FBRC8vLzhBSWlJaUlpSWlJaUlpSWlJaUlpSWlJaUlpSUFJaUlBSWlJaUwvQWlML0FpSWlJdjhDSXY4Q0lpSWkvd0lpL3dJaUlpTC9BQUQvQWlJaUl2Ly8vLzhDSWlJaS8vLy8vd0lpSWlML0FpTC9BaUlpSXY4Q0l2OENJaUlpL3dJaS93SWlJaUwvSWlML0lpSWlJaUlpSWlJaUlpSWlJaUlpSWlJaUlpSWlJaUlpSWlJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUVBRUJBUUFBRUFCQUFvQVFBQUJnQUFBQUFBS0FBQUFCQUFBQUFnQUFBQUFRQUVBQUFBQUFDQUFBQUFBQUFBQUFBQUFBQVFBQUFBRUFBQUFBQUFBQUFBQUlBQUFJQUFBQUNBZ0FDQUFBQUFnQUNBQUlDQUFBQ0FnSUFBd01EQUFBQUEvd0FBL3dBQUFQLy9BUDhBQUFEL0FQOEEiDQoJU3RhdGljIDM2ID0gIi8vOEFBUC8vL3dBaUlpSWlJaUlpSWlJaUlpSWlJaUlpSWlJQUFBQUNJaUlpSVAvLy93SWlJaUl2Ly8vLzhDSWlJaUlpSWkvL0FpSWlJaUlpSXY4Q0lpSWlJZ0FQL3lJaUlpSXYvLy95SWlJaUl2Ly8veUlpSWlJaS93SWlJaUlpSWlML0FBQUFJaUlpSWkvLy8vQWlJaUlpSXYvLzhpSWlJaUlpSWlJaUlpSWlJaUlpSWlJaUlnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQVFBUUVCQUFBUUFFQUNnQkFBQUhBQUFBQUFBQkFQLy9BQUFBQUFBQUFBQklDc3lBQkFBQUFBQUEwZ0JUQUFBQUFBQkVBR2tBWVFCc0FHOEFad0FBQUFvQWtBRUFBRTBBVXdBZ0FGTUFhQUJsQUd3QWJBQWdBRVFBYkFCbkFBQUFBQUFBQUFBQUFBQ0FBSUZRQWdBekFNOEFEQURKQUFBQS8vK0JBQUFBQUFBQUFBQUFBQUFBQUFFQUFWQXpBRU1BSHdBTUFBRUFBQUQvLzRBQVR3QkxBQUFBQUFBQUFBQUFBQUFBQUFBQUFWQ0JBRU1BSHdBTUFBSUFBQUQvLzRBQVF3QmhBRzRBWXdCbEFHd0FBQUFBQUFBQUFBQUFBQUFBQUFBQ1VBTUFBZ0ROQURBQXpBQUFBUC8vZ2dCUUFISUFid0J0QUhBQWRBQUFBQUFBQXdCd0FJUC9BQUFMQUVnQWdQOEFBQXNBU3dDQi93QUFDd0JNQUg3L0FBQURBSFFBZ3Y4QUFBc0FWZ0IvL3dBQUF3QVRBSHYvQUFBTEFFVUFlZjhBQUlzQVVnQjQvd0FBREFJMEFBQUFWZ0JUQUY4QVZnQkZBRklBVXdCSkFFOEFUZ0JmQUVrQVRnQkdBRThBQUFBQUFMMEU3LzRBQUFFQUFBQUJBQVVBTUFBQUFBRUFCUUF3QUJjQUFBQUFBQUFBQkFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFCcUFRQUFBUUJUQUhRQWNnQnBBRzRBWndCR0FHa0FiQUJsQUVrQWJnQm1BRzhBQUFCR0FRQUFBUUF3QURRQU1BQTVBREFBTkFCaUFEQUFBQUFvQUFBQUFRQkdBR2tBYkFCbEFFUUFaUUJ6QUdNQWNnQnBBSEFBZEFCcEFHOEFiZ0FBQUFBQU9nQU5BQUVBUmdCcEFHd0FaUUJXQUdVQWNnQnpBR2tBYndCdUFBQUFBQUF4QUN3QUlBQXdBQ3dBSUFBMEFEZ0FMQUFnQURBQU5RQUFBQUFBSUFBQUFBRUFTUUJ1QUhRQVpRQnlBRzRBWVFCc0FFNEFZUUJ0QUdVQUFBQWtBQUFBQVFCTUFHVUFad0JoQUd3QVF3QnZBSEFBZVFCeUFHa0Fad0JvQUhRQUFBQW9BQUFBQVFCUEFISUFhUUJuQUdrQWJnQmhBR3dBUmdCcEFHd0FaUUJ1QUdFQWJRQmxBQUFBSUFBQUFBRUFVQUJ5QUc4QVpBQjFBR01BZEFCT0FHRUFiUUJsQUFBQUFBQStBQTBBQVFCUUFISUFid0JrQUhVQVl3QjBBRllBWlFCeUFITUFhUUJ2QUc0QUFBQXhBQ3dBSUFBd0FDd0FJQUEwQURnQUxBQWdBREFBTlFBQUFBQUFSQUFBQUFFQVZnQmhBSElBUmdCcEFHd0FaUUJKQUc0QVpnQnZBQUFBQUFBa0FBUUFBQUJVQUhJQVlRQnVBSE1BYkFCaEFIUUFhUUJ2QUc0QUFBQUFBQWtFcgkNCglJZiAoIUhhc0RhdGEpDQoJCVJldHVybiAtMQ0KCQ0KCUlmICghT3V0X0RhdGEpew0KCQlQdHIgOj0gQV9Jc1VuaWNvZGUgPyAiUHRyIiA6ICJVSW50Ig0KCQksIFZhclNldENhcGFjaXR5KFRELCA1NzcyODYgKiAoQV9Jc1VuaWNvZGUgPyAyIDogMSkpDQoJCQ0KCQlMb29wLCAzNg0KCQkJVEQgLj0gJUFfSW5kZXglLCAlQV9JbmRleCUgOj0gIiINCgkJDQoJCVZhclNldENhcGFjaXR5KE91dF9EYXRhLCBCeXRlcyA6PSA0MjEzNzYsIDApDQoJCSwgRGxsQ2FsbCgiQ3J5cHQzMi5kbGxcQ3J5cHRTdHJpbmdUb0JpbmFyeSIgKEFfSXNVbmljb2RlID8gIlciIDogIkEiKSwgUHRyLCAmVEQsICJVSW50IiwgMCwgIlVJbnQiLCAxLCBQdHIsICZPdXRfRGF0YSwgQV9Jc1VuaWNvZGUgPyAiVUludFAiIDogIlVJbnQqIiwgQnl0ZXMsICJJbnQiLCAwLCAiSW50IiwgMCwgIkNERUNMIEludCIpDQoJCSwgVEQgOj0gIiINCgl9DQoJDQoJSWZFeGlzdCwgJV9GaWxlbmFtZSUNCgkJRmlsZURlbGV0ZSwgJV9GaWxlbmFtZSUNCgkNCgloIDo9IERsbENhbGwoIkNyZWF0ZUZpbGUiLCBQdHIsICZfRmlsZW5hbWUsICJVaW50IiwgMHg0MDAwMDAwMCwgIlVpbnQiLCAwLCAiVUludCIsIDAsICJVSW50IiwgNCwgIlVpbnQiLCAwLCAiVUludCIsIDApDQoJLCBEbGxDYWxsKCJXcml0ZUZpbGUiLCBQdHIsIGgsIFB0ciwgJk91dF9EYXRhLCAiVUludCIsIDQyMTM3NiwgIlVJbnQiLCAwLCAiVUludCIsIDApDQoJLCBEbGxDYWxsKCJDbG9zZUhhbmRsZSIsIFB0ciwgaCkNCgkNCglJZiAoX0R1bXBEYXRhKQ0KCQlWYXJTZXRDYXBhY2l0eShPdXRfRGF0YSwgNDIxMzc2LCAwKQ0KCQksIFZhclNldENhcGFjaXR5KE91dF9EYXRhLCAwKQ0KCQksIEhhc0RhdGEgOj0gMA0KfQ0K"
	
	If (!HasData)
		Return -1
	
	If (!Out_Data){
		Ptr := A_IsUnicode ? "Ptr" : "UInt"
		, VarSetCapacity(TD, 894678 * (A_IsUnicode ? 2 : 1))
		
		Loop, 55
			TD .= %A_Index%, %A_Index% := ""
		
		VarSetCapacity(Out_Data, Bytes := 653049, 0)
		, DllCall("Crypt32.dll\CryptStringToBinary" (A_IsUnicode ? "W" : "A"), Ptr, &TD, "UInt", 0, "UInt", 1, Ptr, &Out_Data, A_IsUnicode ? "UIntP" : "UInt*", Bytes, "Int", 0, "Int", 0, "CDECL Int")
		, TD := ""
	}
	
	IfExist, %_Filename%
		FileDelete, %_Filename%
	
	h := DllCall("CreateFile", Ptr, &_Filename, "Uint", 0x40000000, "Uint", 0, "UInt", 0, "UInt", 4, "Uint", 0, "UInt", 0)
	, DllCall("WriteFile", Ptr, h, Ptr, &Out_Data, "UInt", 653049, "UInt", 0, "UInt", 0)
	, DllCall("CloseHandle", Ptr, h)
	
	If (_DumpData)
		VarSetCapacity(Out_Data, 653049, 0)
		, VarSetCapacity(Out_Data, 0)
		, HasData := 0
}
